/*
 * Copyright 2022 Sequans Communications.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

// SIDL keywords.
#include "msg.sidl"

// SIDL commons.
#include "SidlCommon.sidl"

typedef uint8_t AntennaPortId_Type;
typedef int8_t ToRS_EPRE_Ratio_Type;
typedef uint8_t CfiValue_Type;

typedef struct ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12) DMTC_PeriodOffset_r12_Type;
typedef struct ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12) DS_OccasionDuration_r12_Type;

SIDL_UNION_ENUM(AntennaInfoCommon_Type) {
	AntennaInfoCommon_Type_UNBOUND_VALUE,
	AntennaInfoCommon_Type_R8
};
SIDL_UNION_BEGIN(AntennaInfoCommon_Type) {
	SIDL_UNION_CASE(AntennaInfoCommon_Type_R8)
		struct ASN_NAME(AntennaInfoCommon) R8;
} SIDL_UNION_END;

struct AntennaPortInfo_Type {
	Dummy_Type PowerAttenuation;
	Dummy_Type PropagationDelay;
};

SIDL_UNION_ENUM(AntennaPortConfig_Type) {
	AntennaPortConfig_Type_UNBOUND_VALUE,
	AntennaPortConfig_Type_AddOrReconfigure,
	AntennaPortConfig_Type_Release,
};
SIDL_UNION_BEGIN(AntennaPortConfig_Type) {
	SIDL_UNION_CASE(AntennaPortConfig_Type_AddOrReconfigure)
		struct AntennaPortInfo_Type AddOrReconfigure;
	SIDL_UNION_CASE(AntennaPortConfig_Type_Release)
		Null_Type Release;
} SIDL_UNION_END;

struct AntennaPort_Type {
	AntennaPortId_Type Id;
	struct AntennaPortConfig_Type Config;
};

struct DownlinkAntennaGroupConfig_Type {
	struct AntennaInfoCommon_Type AntennaInfoCommon;
	SIDL_DYNAMIC_OF_STRUCT(AntennaPort_Type, AntennaPort);
};

struct ToRS_EPRE_Ratios_Type {
	SIDL_OPTIONAL(ToRS_EPRE_Ratio_Type, RA);
	SIDL_OPTIONAL(ToRS_EPRE_Ratio_Type, RB);
};

struct PbchConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(PbchConfig_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct PcfichConfig_Type {
	SIDL_OPTIONAL(CfiValue_Type, CfiValue);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(PcfichConfig_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

SIDL_UNION_ENUM(PHICH_Config_Type) {
	PHICH_Config_Type_UNBOUND_VALUE,
	PHICH_Config_Type_R8
};
SIDL_UNION_BEGIN(PHICH_Config_Type) {
	SIDL_UNION_CASE(PHICH_Config_Type_R8)
		struct ASN_NAME(PHICH_Config) R8;
} SIDL_UNION_END;

struct PhichConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT(PHICH_Config_Type, PhichConfig);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(PhichConfig_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct CCE_StartIndex_DL_UL_Type {
	int32_t CCE_StartIndex_DL;
	int32_t CCE_StartIndex_UL;
};

typedef SIDL_DYNAMIC_OF_STRUCT(CCE_StartIndex_DL_UL_Type, CCE_StartIndexList_Type);

struct PdcchCandidate_Type {
	ASN_NAME(C_RNTI) RNTI;
	CCE_StartIndexList_Type CCE_StartIndexList;
};

typedef SIDL_DYNAMIC_OF_STRUCT(PdcchCandidate_Type, PdcchCandidateList_Type);

struct PdcchConfig_Type {
	SIDL_OPTIONAL(uint8_t, CommonSearchSpaceFormat);
	SIDL_OPTIONAL(uint8_t, UeSpecificSearchSpaceFormat);
	SIDL_OPTIONAL(PdcchCandidateList_Type, PdcchCandidateList);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(PdcchConfig_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct PdschRelativeTxPower_Type {
	SIDL_OPTIONAL_OF_STRUCT(ToRS_EPRE_Ratios_Type, RachResponse);
	SIDL_OPTIONAL_OF_STRUCT(ToRS_EPRE_Ratios_Type, BcchOnPdsch);
	SIDL_OPTIONAL_OF_STRUCT(ToRS_EPRE_Ratios_Type, PcchOnPdsch);
	SIDL_OPTIONAL_OF_STRUCT(ToRS_EPRE_Ratios_Type, CcchOnPdsch);
	SIDL_OPTIONAL_OF_STRUCT(ToRS_EPRE_Ratios_Type, DcchDtchOnPdsch);
	SIDL_OPTIONAL_OF_STRUCT(ToRS_EPRE_Ratios_Type, OcngOnPdsch);
};

struct PdschConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT(PdschRelativeTxPower_Type, RelativeTxPower);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDSCH_ConfigCommon_v1310), PDSCH_ConfigCommon);
};

struct PrimarySyncSignal_Type {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(PrimarySyncSignal_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct SecondarySyncSignal_Type {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(SecondarySyncSignal_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct CSI_RS_Config_Type {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_RS_Config_r10), CSI_RS_Config);
	SIDL_OPTIONAL(ASN_NAME(CSI_RS_ConfigNZPToAddModList_r11), CSI_RS_ConfigNZPToAddModList);
	SIDL_OPTIONAL(ASN_NAME(CSI_RS_ConfigNZPToReleaseList_r11), CSI_RS_ConfigNZPToReleaseModList);
	SIDL_OPTIONAL(ASN_NAME(CSI_RS_ConfigZPToAddModList_r11), CSI_RS_ConfigZPToAddModList);
	SIDL_OPTIONAL(ASN_NAME(CSI_RS_ConfigZPToReleaseList_r11), CSI_RS_ConfigZPToReleaseModList);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(CSI_RS_Config_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct PmchConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(PmchConfig_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
};

struct EpdcchConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(EpdcchConfig_Type, ToRS_EPRE_Ratios_Type, RelativeTxPower);
	SIDL_OPTIONAL(PdcchCandidateList_Type, ePdcchCandidateList);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EPDCCH_Config_r11), EPDCCH_Config);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(FreqHoppingParameters_r13), mPDCCH_FreqHoppingParameters_r13);
};

struct DS_RS_Config_Type {
	SIDL_OPTIONAL(DMTC_PeriodOffset_r12_Type, DMTC_PeriodOffset);
	SIDL_OPTIONAL(DS_OccasionDuration_r12_Type, DS_OccasionDuration_r12);
};

struct PhysicalLayerConfigDL_Type {
	SIDL_OPTIONAL_OF_STRUCT(DownlinkAntennaGroupConfig_Type, AntennaGroup);
	SIDL_OPTIONAL_OF_STRUCT(PbchConfig_Type, Pbch);
	SIDL_OPTIONAL_OF_STRUCT(PcfichConfig_Type, Pcfich);
	SIDL_OPTIONAL_OF_STRUCT(PhichConfig_Type, Phich);
	SIDL_OPTIONAL_OF_STRUCT(PdcchConfig_Type, Pdcch);
	SIDL_OPTIONAL_OF_STRUCT(PdschConfig_Type, Pdsch);
	SIDL_OPTIONAL_OF_STRUCT(PrimarySyncSignal_Type, Pss);
	SIDL_OPTIONAL_OF_STRUCT(SecondarySyncSignal_Type, Sss);
	SIDL_OPTIONAL_OF_STRUCT(CSI_RS_Config_Type, CSI_RS_Config);
	SIDL_OPTIONAL_OF_STRUCT(PmchConfig_Type, Pmch);
	SIDL_OPTIONAL_OF_STRUCT(EpdcchConfig_Type, Epdcch);
	SIDL_OPTIONAL_OF_STRUCT(DS_RS_Config_Type, DS_RS_Config);
};
