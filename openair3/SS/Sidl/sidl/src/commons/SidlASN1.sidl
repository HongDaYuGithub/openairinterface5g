/*
 * Copyright 2022 Sequans Communications.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

// Main SIDL includes and SidlASN1 defs.
#include "SidlASN1Base.sidl"

typedef BIT_STRING_ELEMENT B2[2];
typedef BIT_STRING_ELEMENT B3[3];
typedef BIT_STRING_ELEMENT B4[4];
typedef BIT_STRING_ELEMENT B5[5];
typedef BIT_STRING_ELEMENT B6[6];
typedef BIT_STRING_ELEMENT B7[7];
typedef BIT_STRING_ELEMENT B8[8];
typedef BIT_STRING_ELEMENT B10[10];
typedef BIT_STRING_ELEMENT B12[12];
typedef BIT_STRING_ELEMENT B13[13];
typedef BIT_STRING_ELEMENT B15[15];
typedef BIT_STRING_ELEMENT B16[16];
typedef BIT_STRING_ELEMENT B17[17];
typedef BIT_STRING_ELEMENT B19[19];
typedef BIT_STRING_ELEMENT B20[20];
typedef BIT_STRING_ELEMENT B24[24];
typedef BIT_STRING_ELEMENT B25[25];
typedef BIT_STRING_ELEMENT B27[27];
typedef BIT_STRING_ELEMENT B28[28];
typedef BIT_STRING_ELEMENT B30[30];
typedef BIT_STRING_ELEMENT B32[32];
typedef BIT_STRING_ELEMENT B39[39];
typedef BIT_STRING_ELEMENT B40[40];
typedef BIT_STRING_ELEMENT B42[42];
typedef BIT_STRING_ELEMENT B48[48];
typedef BIT_STRING_ELEMENT B49[49];
typedef BIT_STRING_ELEMENT B50[50];
typedef BIT_STRING_ELEMENT B60[60];
typedef BIT_STRING_ELEMENT B64[64];
typedef BIT_STRING_ELEMENT B70[70];
typedef BIT_STRING_ELEMENT B80[80];
typedef BIT_STRING_ELEMENT B100[100];

typedef OCTET_STRING_ELEMENT O1[1];
typedef OCTET_STRING_ELEMENT O2[2];
typedef OCTET_STRING_ELEMENT O3[3];
typedef OCTET_STRING_ELEMENT O6[6];
typedef OCTET_STRING_ELEMENT O50[50];

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoCommon, antennaPortsCount)), an1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoCommon, antennaPortsCount)), an2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoCommon, antennaPortsCount)), an4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoCommon, antennaPortsCount)), spare1)
} ASN_ENUM(ASN_NAME(AntennaInfoCommon, antennaPortsCount));

struct ASN_NAME(AntennaInfoCommon) {
	ASN_ENUM(ASN_NAME(AntennaInfoCommon, antennaPortsCount)) antennaPortsCount;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)), tm8_v920)
} ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode));

SIDL_UNION_ENUM(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)) {
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n2TxAntenna_tm3),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n4TxAntenna_tm3),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n2TxAntenna_tm4),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n4TxAntenna_tm4),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n2TxAntenna_tm5),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n4TxAntenna_tm5),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n2TxAntenna_tm6),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), n4TxAntenna_tm6)
};
SIDL_UNION_BEGIN(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)) {
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n2TxAntenna_tm3)
		B2 n2TxAntenna_tm3; // SIZE (2)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n4TxAntenna_tm3)
		B4 n4TxAntenna_tm3; // SIZE (4)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n2TxAntenna_tm4)
		B6 n2TxAntenna_tm4; // SIZE (6)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n4TxAntenna_tm4)
		B64 n4TxAntenna_tm4; // SIZE (64)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n2TxAntenna_tm5)
		B4 n2TxAntenna_tm5; // SIZE (4)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n4TxAntenna_tm5)
		B16 n4TxAntenna_tm5; // SIZE (16)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n2TxAntenna_tm6)
		B4 n2TxAntenna_tm6; // SIZE (4)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction)_n4TxAntenna_tm6)
		B16 n4TxAntenna_tm6; // SIZE (16)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection, setup)), closedLoop),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection, setup)), openLoop)
} ASN_ENUM(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection, setup));

SIDL_UNION_ENUM(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection)) {
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection), release),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection)) {
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection)_setup)
		ASN_ENUM(ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection, setup)) setup;
} SIDL_UNION_END;

struct ASN_NAME(AntennaInfoDedicated) {
	ASN_ENUM(ASN_NAME(AntennaInfoDedicated, transmissionMode)) transmissionMode;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(AntennaInfoDedicated, codebookSubsetRestriction), codebookSubsetRestriction);
	struct ASN_NAME(AntennaInfoDedicated, ue_TransmitAntennaSelection) ue_TransmitAntennaSelection;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm8_v920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm9_v1020),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), tm10_v1130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)), spare1)
} ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection, setup)), closedLoop),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection, setup)), openLoop)
} ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection, setup));

SIDL_UNION_ENUM(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection)) {
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection), release),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection)) {
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection)_setup)
		ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection, setup)) setup;
} SIDL_UNION_END;

struct ASN_NAME(AntennaInfoDedicated_r10) {
	ASN_ENUM(ASN_NAME(AntennaInfoDedicated_r10, transmissionMode_r10)) transmissionMode_r10;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(AntennaInfoDedicated_r10), BIT_STRING, codebookSubsetRestriction_r10);
	struct ASN_NAME(AntennaInfoDedicated_r10, ue_TransmitAntennaSelection) ue_TransmitAntennaSelection;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v10i0, maxLayersMIMO_r10)), twoLayers),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v10i0, maxLayersMIMO_r10)), fourLayers),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v10i0, maxLayersMIMO_r10)), eightLayers)
} ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v10i0, maxLayersMIMO_r10));

struct ASN_NAME(AntennaInfoDedicated_v10i0) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v10i0, maxLayersMIMO_r10)), maxLayersMIMO_r10);
};

struct ASN_NAME(AntennaInfoDedicated_v1250) {
	bool alternativeCodebookEnabledFor4TX_r12;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v1430, ce_UE_TxAntennaSelection_config_r14)), on)
} ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v1430, ce_UE_TxAntennaSelection_config_r14));

struct ASN_NAME(AntennaInfoDedicated_v1430) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AntennaInfoDedicated_v1430, ce_UE_TxAntennaSelection_config_r14)), ce_UE_TxAntennaSelection_config_r14);
};

SIDL_UNION_ENUM(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920)) {
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920), n2TxAntenna_tm8_r9),
	ASN_ENUM_VAL(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920), n4TxAntenna_tm8_r9)
};
SIDL_UNION_BEGIN(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920)) {
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920)_n2TxAntenna_tm8_r9)
		B6 n2TxAntenna_tm8_r9; // SIZE (6)
	SIDL_UNION_CASE(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920)_n4TxAntenna_tm8_r9)
		B32 n4TxAntenna_tm8_r9; // SIZE (32)
} SIDL_UNION_END;

struct ASN_NAME(AntennaInfoDedicated_v920) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(AntennaInfoDedicated_v920, codebookSubsetRestriction_v920), codebookSubsetRestriction_v920);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), tm1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), tm2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), spare1)
} ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, fourAntennaPortActivated_r10)), setup)
} ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, fourAntennaPortActivated_r10));

struct ASN_NAME(AntennaInfoUL_r10) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, transmissionModeUL_r10)), transmissionModeUL_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AntennaInfoUL_r10, fourAntennaPortActivated_r10)), fourAntennaPortActivated_r10);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)), n100)
} ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PHICH_Config, phich_Duration)), normal),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PHICH_Config, phich_Duration)), extended)
} ASN_ENUM(ASN_NAME(PHICH_Config, phich_Duration));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PHICH_Config, phich_Resource)), oneSixth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PHICH_Config, phich_Resource)), half),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PHICH_Config, phich_Resource)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PHICH_Config, phich_Resource)), two)
} ASN_ENUM(ASN_NAME(PHICH_Config, phich_Resource));

struct ASN_NAME(PHICH_Config) {
	ASN_ENUM(ASN_NAME(PHICH_Config, phich_Duration)) phich_Duration;
	ASN_ENUM(ASN_NAME(PHICH_Config, phich_Resource)) phich_Resource;
};

struct ASN_NAME(MasterInformationBlock) {
	ASN_ENUM(ASN_NAME(MasterInformationBlock, dl_Bandwidth)) dl_Bandwidth;
	struct ASN_NAME(PHICH_Config) phich_Config;
	B8 systemFrameNumber; // SIZE (8)
	uint8_t schedulingInfoSIB1_BR_r13; // OF (0..31)
	bool systemInfoUnchanged_BR_r15;
	B4 spare; // SIZE (4)
};

struct ASN_NAME(BCCH_BCH_Message) {
	struct ASN_NAME(MasterInformationBlock) message;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p00),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)), p95)
} ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)), s512)
} ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime));

struct ASN_NAME(AC_BarringConfig) {
	ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringFactor)) ac_BarringFactor;
	ASN_ENUM(ASN_NAME(AC_BarringConfig, ac_BarringTime)) ac_BarringTime;
	B5 ac_BarringForSpecialAC; // SIZE (5)
};

struct ASN_NAME(SystemInformationBlockType2, ac_BarringInfo) {
	bool ac_BarringForEmergency;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2, ac_BarringInfo), ASN_NAME(AC_BarringConfig), ac_BarringForMO_Signalling);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2, ac_BarringInfo), ASN_NAME(AC_BarringConfig), ac_BarringForMO_Data);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)), n64)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)), n60)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messageSizeGroupA)), b56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messageSizeGroupA)), b144),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messageSizeGroupA)), b208),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messageSizeGroupA)), b256)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messageSizeGroupA));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), minusinfinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)), dB18)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB));

struct ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig) {
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, sizeOfRA_PreamblesGroupA)) sizeOfRA_PreamblesGroupA;
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messageSizeGroupA)) messageSizeGroupA;
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig, messagePowerOffsetGroupB)) messagePowerOffsetGroupB;
};

struct ASN_NAME(RACH_ConfigCommon, preambleInfo) {
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon, preambleInfo, numberOfRA_Preambles)) numberOfRA_Preambles;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(RACH_ConfigCommon, preambleInfo, preamblesGroupAConfig), preamblesGroupAConfig);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, powerRampingStep)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, powerRampingStep)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, powerRampingStep)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, powerRampingStep)), dB6)
} ASN_ENUM(ASN_NAME(PowerRampingParameters, powerRampingStep));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_118),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_116),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_114),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_112),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_108),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_106),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_104),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_102),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_98),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_94),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_92),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)), dBm_90)
} ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower));

struct ASN_NAME(PowerRampingParameters) {
	ASN_ENUM(ASN_NAME(PowerRampingParameters, powerRampingStep)) powerRampingStep;
	ASN_ENUM(ASN_NAME(PowerRampingParameters, preambleInitialReceivedTargetPower)) preambleInitialReceivedTargetPower;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PreambleTransMax)), n200)
} ASN_ENUM(ASN_NAME(PreambleTransMax));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)), sf10)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)), sf64)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer));

struct ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo) {
	ASN_ENUM(ASN_NAME(PreambleTransMax)) preambleTransMax;
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, ra_ResponseWindowSize)) ra_ResponseWindowSize;
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo, mac_ContentionResolutionTimer)) mac_ContentionResolutionTimer;
};

struct ASN_NAME(RACH_CE_LevelInfo_r13, preambleMappingInfo_r13) {
	uint8_t firstPreamble_r13; // OF (0..63)
	uint8_t lastPreamble_r13; // OF (0..63)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)), sf400)
} ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf480),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)), sf960)
} ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, rar_HoppingConfig_r13)), on),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, rar_HoppingConfig_r13)), off)
} ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, rar_HoppingConfig_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b328),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b408),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b504),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b712),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b808),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b936),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)), b1000or456)
} ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf480),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf960),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf1920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf3840),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf5760),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf7680),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), sf10240)
} ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15));

struct ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15) {
	uint8_t edt_LastPreamble_r15; // OF (0..63)
	bool edt_SmallTBS_Enabled_r15;
	ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, edt_TBS_r15)) edt_TBS_r15;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15, mac_ContentionResolutionTimer_r15)), mac_ContentionResolutionTimer_r15);
};

struct ASN_NAME(RACH_CE_LevelInfo_r13) {
	struct ASN_NAME(RACH_CE_LevelInfo_r13, preambleMappingInfo_r13) preambleMappingInfo_r13;
	ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, ra_ResponseWindowSize_r13)) ra_ResponseWindowSize_r13;
	ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, mac_ContentionResolutionTimer_r13)) mac_ContentionResolutionTimer_r13;
	ASN_ENUM(ASN_NAME(RACH_CE_LevelInfo_r13, rar_HoppingConfig_r13)) rar_HoppingConfig_r13;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(RACH_CE_LevelInfo_r13, edt_Parameters_r15), edt_Parameters_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(RACH_CE_LevelInfo_r13), ASN_NAME(RACH_CE_LevelInfoList_r13)); // SIZE (1..4)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, edt_SmallTBS_Subset_r15)), true)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon, edt_SmallTBS_Subset_r15));

struct ASN_NAME(RACH_ConfigCommon) {
	struct ASN_NAME(RACH_ConfigCommon, preambleInfo) preambleInfo;
	struct ASN_NAME(PowerRampingParameters) powerRampingParameters;
	struct ASN_NAME(RACH_ConfigCommon, ra_SupervisionInfo) ra_SupervisionInfo;
	uint8_t maxHARQ_Msg3Tx; // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RACH_ConfigCommon), ASN_ENUM(ASN_NAME(PreambleTransMax)), preambleTransMax_CE_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RACH_ConfigCommon), ASN_NAME(RACH_CE_LevelInfoList_r13), rach_CE_LevelInfoList_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon, edt_SmallTBS_Subset_r15)), edt_SmallTBS_Subset_r15);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BCCH_Config, modificationPeriodCoeff)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BCCH_Config, modificationPeriodCoeff)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BCCH_Config, modificationPeriodCoeff)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BCCH_Config, modificationPeriodCoeff)), n16)
} ASN_ENUM(ASN_NAME(BCCH_Config, modificationPeriodCoeff));

struct ASN_NAME(BCCH_Config) {
	ASN_ENUM(ASN_NAME(BCCH_Config, modificationPeriodCoeff)) modificationPeriodCoeff;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, defaultPagingCycle)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, defaultPagingCycle)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, defaultPagingCycle)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, defaultPagingCycle)), rf256)
} ASN_ENUM(ASN_NAME(PCCH_Config, defaultPagingCycle));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), fourT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), twoT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), oneT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), halfT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), quarterT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), oneEighthT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), oneSixteenthT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config, nB)), oneThirtySecondT)
} ASN_ENUM(ASN_NAME(PCCH_Config, nB));

struct ASN_NAME(PCCH_Config) {
	ASN_ENUM(ASN_NAME(PCCH_Config, defaultPagingCycle)) defaultPagingCycle;
	ASN_ENUM(ASN_NAME(PCCH_Config, nB)) nB;
};

struct ASN_NAME(PRACH_ConfigInfo) {
	uint8_t prach_ConfigIndex; // OF (0..63)
	bool highSpeedFlag;
	uint8_t zeroCorrelationZoneConfig; // OF (0..15)
	uint8_t prach_FreqOffset; // OF (0..94)
};

struct ASN_NAME(PRACH_ConfigSIB) {
	uint16_t rootSequenceIndex; // OF (0..837)
	struct ASN_NAME(PRACH_ConfigInfo) prach_ConfigInfo;
};

struct ASN_NAME(PDSCH_ConfigCommon) {
	int8_t referenceSignalPower; // OF (-60..50)
	uint8_t p_b; // OF (0..3)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon, pusch_ConfigBasic, hoppingMode)), interSubFrame),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon, pusch_ConfigBasic, hoppingMode)), intraAndInterSubFrame)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon, pusch_ConfigBasic, hoppingMode));

struct ASN_NAME(PUSCH_ConfigCommon, pusch_ConfigBasic) {
	uint8_t n_SB; // OF (1..4)
	ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon, pusch_ConfigBasic, hoppingMode)) hoppingMode;
	uint8_t pusch_HoppingOffset; // OF (0..98)
	bool enable64QAM;
};

struct ASN_NAME(UL_ReferenceSignalsPUSCH) {
	bool groupHoppingEnabled;
	uint8_t groupAssignmentPUSCH; // OF (0..29)
	bool sequenceHoppingEnabled;
	uint8_t cyclicShift; // OF (0..7)
};

struct ASN_NAME(PUSCH_ConfigCommon) {
	struct ASN_NAME(PUSCH_ConfigCommon, pusch_ConfigBasic) pusch_ConfigBasic;
	struct ASN_NAME(UL_ReferenceSignalsPUSCH) ul_ReferenceSignalsPUSCH;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon, deltaPUCCH_Shift)), ds1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon, deltaPUCCH_Shift)), ds2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon, deltaPUCCH_Shift)), ds3)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon, deltaPUCCH_Shift));

struct ASN_NAME(PUCCH_ConfigCommon) {
	ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon, deltaPUCCH_Shift)) deltaPUCCH_Shift;
	uint8_t nRB_CQI; // OF (0..98)
	uint8_t nCS_AN; // OF (0..7)
	uint16_t n1PUCCH_AN; // OF (0..2047)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)), bw7)
} ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)), sc15)
} ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_MaxUpPts)), true)
} ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_MaxUpPts));

struct ASN_NAME(SoundingRS_UL_ConfigCommon, setup) {
	ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_BandwidthConfig)) srs_BandwidthConfig;
	ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_SubframeConfig)) srs_SubframeConfig;
	bool ackNackSRS_SimultaneousTransmission;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon, setup, srs_MaxUpPts)), srs_MaxUpPts);
};

SIDL_UNION_ENUM(ASN_NAME(SoundingRS_UL_ConfigCommon)) {
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigCommon), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigCommon), release),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigCommon), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SoundingRS_UL_ConfigCommon)) {
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigCommon)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigCommon)_setup)
		struct ASN_NAME(SoundingRS_UL_ConfigCommon, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al04),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al06),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al07),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al08),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al09),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Alpha_r12)), al1)
} ASN_ENUM(ASN_NAME(Alpha_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1)), deltaF_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1)), deltaF2)
} ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1b)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1b)), deltaF3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1b)), deltaF5)
} ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1b));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2)), deltaF_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2)), deltaF2)
} ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2a)), deltaF_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2a)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2a)), deltaF2)
} ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2a));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2b)), deltaF_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2b)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2b)), deltaF2)
} ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2b));

struct ASN_NAME(DeltaFList_PUCCH) {
	ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1)) deltaF_PUCCH_Format1;
	ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format1b)) deltaF_PUCCH_Format1b;
	ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2)) deltaF_PUCCH_Format2;
	ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2a)) deltaF_PUCCH_Format2a;
	ASN_ENUM(ASN_NAME(DeltaFList_PUCCH, deltaF_PUCCH_Format2b)) deltaF_PUCCH_Format2b;
};

struct ASN_NAME(UplinkPowerControlCommon) {
	int8_t p0_NominalPUSCH; // OF (-126..24)
	ASN_ENUM(ASN_NAME(Alpha_r12)) alpha;
	int8_t p0_NominalPUCCH; // OF (-127..-96)
	struct ASN_NAME(DeltaFList_PUCCH) deltaFList_PUCCH;
	int8_t deltaPreambleMsg3; // OF (-1..6)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_CyclicPrefixLength)), len1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_CyclicPrefixLength)), len2)
} ASN_ENUM(ASN_NAME(UL_CyclicPrefixLength));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)), deltaF6)
} ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format1bCS_r10)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format1bCS_r10)), deltaF2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format1bCS_r10)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format1bCS_r10)), spare1)
} ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format1bCS_r10));

struct ASN_NAME(UplinkPowerControlCommon_v1020) {
	ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format3_r10)) deltaF_PUCCH_Format3_r10;
	ASN_ENUM(ASN_NAME(UplinkPowerControlCommon_v1020, deltaF_PUCCH_Format1bCS_r10)) deltaF_PUCCH_Format1bCS_r10;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailCount_r12)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailCount_r12)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailCount_r12)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailCount_r12)), n4)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailCount_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s420),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)), s900)
} ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12));

struct ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12) {
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailCount_r12)) connEstFailCount_r12;
	ASN_ENUM(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12, connEstFailOffsetValidity_r12)) connEstFailOffsetValidity_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12), uint8_t, connEstFailOffset_r12); // OF (0..15)
};

struct ASN_NAME(RACH_ConfigCommon_v1250) {
	struct ASN_NAME(RACH_ConfigCommon_v1250, txFailParams_r12) txFailParams_r12;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1270, enable64QAM_v1270)), true)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1270, enable64QAM_v1270));

struct ASN_NAME(PUSCH_ConfigCommon_v1270) {
	ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1270, enable64QAM_v1270)) enable64QAM_v1270;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BCCH_Config_v1310, modificationPeriodCoeff_v1310)), n64)
} ASN_ENUM(ASN_NAME(BCCH_Config_v1310, modificationPeriodCoeff_v1310));

struct ASN_NAME(BCCH_Config_v1310) {
	ASN_ENUM(ASN_NAME(BCCH_Config_v1310, modificationPeriodCoeff_v1310)) modificationPeriodCoeff_v1310;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)), r256)
} ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, nB_v1310)), one64thT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, nB_v1310)), one128thT),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, nB_v1310)), one256thT)
} ASN_ENUM(ASN_NAME(PCCH_Config_v1310, nB_v1310));

struct ASN_NAME(PCCH_Config_v1310) {
	uint8_t paging_narrowBands_r13; // OF (1..16)
	ASN_ENUM(ASN_NAME(PCCH_Config_v1310, mpdcch_NumRepetition_Paging_r13)) mpdcch_NumRepetition_Paging_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PCCH_Config_v1310, nB_v1310)), nB_v1310);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy)), nb2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy)), nb4)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_FDD_r13)), int1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_FDD_r13)), int2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_FDD_r13)), int4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_FDD_r13)), int8)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_FDD_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_TDD_r13)), int1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_TDD_r13)), int5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_TDD_r13)), int10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_TDD_r13)), int20)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_TDD_r13));

SIDL_UNION_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2)) {
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, dummy2), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, dummy2), interval_FDD_r13),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, dummy2), interval_TDD_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(FreqHoppingParameters_r13, dummy2)) {
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, dummy2)_interval_FDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_FDD_r13)) interval_FDD_r13;
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, dummy2)_interval_TDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy2, interval_TDD_r13)) interval_TDD_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_FDD_r13)), int2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_FDD_r13)), int4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_FDD_r13)), int8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_FDD_r13)), int16)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_FDD_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_TDD_r13)), int5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_TDD_r13)), int10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_TDD_r13)), int20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_TDD_r13)), int40)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_TDD_r13));

SIDL_UNION_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3)) {
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, dummy3), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, dummy3), interval_FDD_r13),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, dummy3), interval_TDD_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(FreqHoppingParameters_r13, dummy3)) {
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, dummy3)_interval_FDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_FDD_r13)) interval_FDD_r13;
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, dummy3)_interval_TDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy3, interval_TDD_r13)) interval_TDD_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_FDD_r13)), int1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_FDD_r13)), int2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_FDD_r13)), int4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_FDD_r13)), int8)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_FDD_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_TDD_r13)), int1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_TDD_r13)), int5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_TDD_r13)), int10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_TDD_r13)), int20)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_TDD_r13));

SIDL_UNION_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13)) {
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13), interval_FDD_r13),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13), interval_TDD_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13)) {
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13)_interval_FDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_FDD_r13)) interval_FDD_r13;
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13)_interval_TDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13, interval_TDD_r13)) interval_TDD_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_FDD_r13)), int2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_FDD_r13)), int4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_FDD_r13)), int8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_FDD_r13)), int16)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_FDD_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_TDD_r13)), int5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_TDD_r13)), int10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_TDD_r13)), int20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_TDD_r13)), int40)
} ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_TDD_r13));

SIDL_UNION_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13)) {
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13), interval_FDD_r13),
	ASN_ENUM_VAL(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13), interval_TDD_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13)) {
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13)_interval_FDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_FDD_r13)) interval_FDD_r13;
	SIDL_UNION_CASE(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13)_interval_TDD_r13)
		ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13, interval_TDD_r13)) interval_TDD_r13;
} SIDL_UNION_END;

struct ASN_NAME(FreqHoppingParameters_r13) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(FreqHoppingParameters_r13, dummy)), dummy);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(FreqHoppingParameters_r13, dummy2), dummy2);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(FreqHoppingParameters_r13, dummy3), dummy3);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeA_r13), interval_ULHoppingConfigCommonModeA_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(FreqHoppingParameters_r13, interval_ULHoppingConfigCommonModeB_r13), interval_ULHoppingConfigCommonModeB_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(FreqHoppingParameters_r13), uint8_t, dummy4); // OF (1..16)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeA_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeA_r13)), r32)
} ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeA_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r1536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), r2048)
} ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13));

struct ASN_NAME(PDSCH_ConfigCommon_v1310) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeA_r13)), pdsch_maxNumRepetitionCEmodeA_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDSCH_ConfigCommon_v1310, pdsch_maxNumRepetitionCEmodeB_r13)), pdsch_maxNumRepetitionCEmodeB_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeA_r13)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeA_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeA_r13)), r32)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeA_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r1536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), r2048)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13));

struct ASN_NAME(PUSCH_ConfigCommon_v1310) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeA_r13)), pusch_maxNumRepetitionCEmodeA_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigCommon_v1310, pusch_maxNumRepetitionCEmodeB_r13)), pusch_maxNumRepetitionCEmodeB_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUSCH_ConfigCommon_v1310), uint8_t, pusch_HoppingOffset_v1310); // OF (1..16)
};

typedef uint8_t ASN_NAME(RSRP_Range); // OF (0..97)

typedef SIDL_DYNAMIC(ASN_NAME(RSRP_Range), ASN_NAME(RSRP_ThresholdsPrachInfoList_r13)); // SIZE (1..3)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v1dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v2dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v10)
} ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), spare)
} ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13));

SIDL_UNION_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13), fdd_r13),
	ASN_ENUM_VAL(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13), tdd_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13)_fdd_r13)
		ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)) fdd_r13;
	SIDL_UNION_CASE(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13)_tdd_r13)
		ASN_ENUM(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)) tdd_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), sf256)
} ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), n10)
} ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)), n128)
} ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)), r256)
} ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_HoppingConfig_r13)), on),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_HoppingConfig_r13)), off)
} ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_HoppingConfig_r13));

struct ASN_NAME(PRACH_ParametersCE_r13) {
	uint8_t prach_ConfigIndex_r13; // OF (0..63)
	uint8_t prach_FreqOffset_r13; // OF (0..94)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_StartingSubframe_r13)), prach_StartingSubframe_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, maxNumPreambleAttemptCE_r13)), maxNumPreambleAttemptCE_r13);
	ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, numRepetitionPerPreambleAttempt_r13)) numRepetitionPerPreambleAttempt_r13;
	SIDL_DYNAMIC_WITH_PFX(ASN_NAME(PRACH_ParametersCE_r13), uint8_t, mpdcch_NarrowbandsToMonitor_r13); // SIZE (1..2) OF (1..16)
	ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, mpdcch_NumRepetition_RA_r13)) mpdcch_NumRepetition_RA_r13;
	ASN_ENUM(ASN_NAME(PRACH_ParametersCE_r13, prach_HoppingConfig_r13)) prach_HoppingConfig_r13;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PRACH_ParametersCE_r13), ASN_NAME(PRACH_ParametersListCE_r13)); // SIZE (1..4)

struct ASN_NAME(PRACH_ConfigSIB_v1310) {
	ASN_NAME(RSRP_ThresholdsPrachInfoList_r13) rsrp_ThresholdsPrachInfoList_r13;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PRACH_ConfigSIB_v1310, mpdcch_startSF_CSS_RA_r13), mpdcch_startSF_CSS_RA_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PRACH_ConfigSIB_v1310), uint8_t, prach_HoppingOffset_r13); // OF (0..94)
	ASN_NAME(PRACH_ParametersListCE_r13) prach_ParametersListCE_r13;
};

typedef SIDL_DYNAMIC(uint16_t, ASN_NAME(N1PUCCH_AN_InfoList_r13)); // SIZE (1..4) OF (0..2047)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level0_r13)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level0_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level0_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level0_r13)), n8)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level0_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level1_r13)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level1_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level1_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level1_r13)), n8)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level1_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level2_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level2_r13)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level2_r13)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level2_r13)), n32)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level2_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level3_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level3_r13)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level3_r13)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level3_r13)), n32)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level3_r13));

struct ASN_NAME(PUCCH_ConfigCommon_v1310) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUCCH_ConfigCommon_v1310), ASN_NAME(N1PUCCH_AN_InfoList_r13), n1PUCCH_AN_InfoList_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level0_r13)), pucch_NumRepetitionCE_Msg4_Level0_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level1_r13)), pucch_NumRepetitionCE_Msg4_Level1_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level2_r13)), pucch_NumRepetitionCE_Msg4_Level2_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1310, pucch_NumRepetitionCE_Msg4_Level3_r13)), pucch_NumRepetitionCE_Msg4_Level3_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_r14, highSpeedEnhancedMeasFlag_r14)), true)
} ASN_ENUM(ASN_NAME(HighSpeedConfig_r14, highSpeedEnhancedMeasFlag_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_r14, highSpeedEnhancedDemodulationFlag_r14)), true)
} ASN_ENUM(ASN_NAME(HighSpeedConfig_r14, highSpeedEnhancedDemodulationFlag_r14));

struct ASN_NAME(HighSpeedConfig_r14) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_r14, highSpeedEnhancedMeasFlag_r14)), highSpeedEnhancedMeasFlag_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_r14, highSpeedEnhancedDemodulationFlag_r14)), highSpeedEnhancedDemodulationFlag_r14);
};

struct ASN_NAME(PRACH_Config_v1430) {
	uint16_t rootSequenceIndexHighSpeed_r14; // OF (0..837)
	uint8_t zeroCorrelationZoneConfigHighSpeed_r14; // OF (0..12)
	uint8_t prach_ConfigIndexHighSpeed_r14; // OF (0..63)
	uint8_t prach_FreqOffsetHighSpeed_r14; // OF (0..94)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1430, pucch_NumRepetitionCE_Msg4_Level3_r14)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1430, pucch_NumRepetitionCE_Msg4_Level3_r14)), n128)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1430, pucch_NumRepetitionCE_Msg4_Level3_r14));

struct ASN_NAME(PUCCH_ConfigCommon_v1430) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigCommon_v1430, pucch_NumRepetitionCE_Msg4_Level3_r14)), pucch_NumRepetitionCE_Msg4_Level3_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), sf256)
} ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15));

struct ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15) {
	uint8_t prach_ConfigIndex_r15; // OF (0..63)
	uint8_t prach_FreqOffset_r15; // OF (0..94)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15, prach_StartingSubframe_r15)), prach_StartingSubframe_r15);
	SIDL_DYNAMIC_WITH_PFX(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15), uint8_t, mpdcch_NarrowbandsToMonitor_r15); // SIZE (1..2) OF (1..16)
};

struct ASN_NAME(EDT_PRACH_ParametersCE_r15) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EDT_PRACH_ParametersCE_r15, edt_PRACH_ParametersCE_r15), edt_PRACH_ParametersCE_r15);
};

struct ASN_NAME(PRACH_ConfigSIB_v1530) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(PRACH_ConfigSIB_v1530), ASN_NAME(EDT_PRACH_ParametersCE_r15), edt_PRACH_ParametersListCE_r15); // SIZE (1..4)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, duration_r15)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, duration_r15)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, duration_r15)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, duration_r15)), sf40)
} ASN_ENUM(ASN_NAME(RSS_Config_r15, duration_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, periodicity_r15)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, periodicity_r15)), ms320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, periodicity_r15)), ms640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, periodicity_r15)), ms1280)
} ASN_ENUM(ASN_NAME(RSS_Config_r15, periodicity_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, powerBoost_r15)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, powerBoost_r15)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, powerBoost_r15)), dB4dot8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_Config_r15, powerBoost_r15)), dB6)
} ASN_ENUM(ASN_NAME(RSS_Config_r15, powerBoost_r15));

struct ASN_NAME(RSS_Config_r15) {
	ASN_ENUM(ASN_NAME(RSS_Config_r15, duration_r15)) duration_r15;
	uint8_t freqLocation_r15; // OF (0..98)
	ASN_ENUM(ASN_NAME(RSS_Config_r15, periodicity_r15)) periodicity_r15;
	ASN_ENUM(ASN_NAME(RSS_Config_r15, powerBoost_r15)) powerBoost_r15;
	uint8_t timeOffset_r15; // OF (0..31)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, maxDurationFactor_r15)), one32th),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, maxDurationFactor_r15)), one16th),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, maxDurationFactor_r15)), one8th),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, maxDurationFactor_r15)), one4th)
} ASN_ENUM(ASN_NAME(WUS_Config_r15, maxDurationFactor_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, numPOs_r15)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, numPOs_r15)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, numPOs_r15)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, numPOs_r15)), spare1)
} ASN_ENUM(ASN_NAME(WUS_Config_r15, numPOs_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, freqLocation_r15)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, freqLocation_r15)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, freqLocation_r15)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, freqLocation_r15)), spare1)
} ASN_ENUM(ASN_NAME(WUS_Config_r15, freqLocation_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffsetDRX_r15)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffsetDRX_r15)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffsetDRX_r15)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffsetDRX_r15)), ms240)
} ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffsetDRX_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Short_r15)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Short_r15)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Short_r15)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Short_r15)), ms240)
} ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Short_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Long_r15)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Long_r15)), ms2000)
} ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Long_r15));

struct ASN_NAME(WUS_Config_r15) {
	ASN_ENUM(ASN_NAME(WUS_Config_r15, maxDurationFactor_r15)) maxDurationFactor_r15;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, numPOs_r15)), numPOs_r15);
	ASN_ENUM(ASN_NAME(WUS_Config_r15, freqLocation_r15)) freqLocation_r15;
	ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffsetDRX_r15)) timeOffsetDRX_r15;
	ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Short_r15)) timeOffset_eDRX_Short_r15;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(WUS_Config_r15, timeOffset_eDRX_Long_r15)), timeOffset_eDRX_Long_r15);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_v1530, highSpeedMeasGapCE_ModeA_r15)), true)
} ASN_ENUM(ASN_NAME(HighSpeedConfig_v1530, highSpeedMeasGapCE_ModeA_r15));

struct ASN_NAME(HighSpeedConfig_v1530) {
	ASN_ENUM(ASN_NAME(HighSpeedConfig_v1530, highSpeedMeasGapCE_ModeA_r15)) highSpeedMeasGapCE_ModeA_r15;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF6)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF8)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF10)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF11)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF19),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF20)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF17)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF12)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF13)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF19),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF21),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF22)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF17)
} ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15));

struct ASN_NAME(DeltaFList_SPUCCH_r15, setup) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1_r15)), deltaF_slotSPUCCH_Format1_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1a_r15)), deltaF_slotSPUCCH_Format1a_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format1b_r15)), deltaF_slotSPUCCH_Format1b_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_Format3_r15)), deltaF_slotSPUCCH_Format3_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_RM_Format4_r15)), deltaF_slotSPUCCH_RM_Format4_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_slotSPUCCH_TBCC_Format4_r15)), deltaF_slotSPUCCH_TBCC_Format4_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1and1a_r15)), deltaF_subslotSPUCCH_Format1and1a_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_Format1b_r15)), deltaF_subslotSPUCCH_Format1b_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_RM_Format4_r15)), deltaF_subslotSPUCCH_RM_Format4_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15, setup, deltaF_subslotSPUCCH_TBCC_Format4_r15)), deltaF_subslotSPUCCH_TBCC_Format4_r15);
};

SIDL_UNION_ENUM(ASN_NAME(DeltaFList_SPUCCH_r15)) {
	ASN_ENUM_VAL(ASN_NAME(DeltaFList_SPUCCH_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(DeltaFList_SPUCCH_r15), release),
	ASN_ENUM_VAL(ASN_NAME(DeltaFList_SPUCCH_r15), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(DeltaFList_SPUCCH_r15)) {
	SIDL_UNION_CASE(ASN_NAME(DeltaFList_SPUCCH_r15)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(DeltaFList_SPUCCH_r15)_setup)
		struct ASN_NAME(DeltaFList_SPUCCH_r15, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(UplinkPowerControlCommon_v1530) {
	struct ASN_NAME(DeltaFList_SPUCCH_r15) deltaFList_SPUCCH_r15;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1560, powerBoost_r15)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1560, powerBoost_r15)), dB1dot8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1560, powerBoost_r15)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1560, powerBoost_r15)), dB4dot8)
} ASN_ENUM(ASN_NAME(WUS_Config_v1560, powerBoost_r15));

struct ASN_NAME(WUS_Config_v1560) {
	ASN_ENUM(ASN_NAME(WUS_Config_v1560, powerBoost_r15)) powerBoost_r15;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1610, numDRX_CyclesRelaxed_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1610, numDRX_CyclesRelaxed_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1610, numDRX_CyclesRelaxed_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WUS_Config_v1610, numDRX_CyclesRelaxed_r16)), n8)
} ASN_ENUM(ASN_NAME(WUS_Config_v1610, numDRX_CyclesRelaxed_r16));

struct ASN_NAME(WUS_Config_v1610) {
	ASN_ENUM(ASN_NAME(WUS_Config_v1610, numDRX_CyclesRelaxed_r16)) numDRX_CyclesRelaxed_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_v1610, highSpeedEnhMeasFlag2_r16)), true)
} ASN_ENUM(ASN_NAME(HighSpeedConfig_v1610, highSpeedEnhMeasFlag2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_v1610, highSpeedEnhDemodFlag2_r16)), true)
} ASN_ENUM(ASN_NAME(HighSpeedConfig_v1610, highSpeedEnhDemodFlag2_r16));

struct ASN_NAME(HighSpeedConfig_v1610) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_v1610, highSpeedEnhMeasFlag2_r16)), highSpeedEnhMeasFlag2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(HighSpeedConfig_v1610, highSpeedEnhDemodFlag2_r16)), highSpeedEnhDemodFlag2_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB_4dot77),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB_1dot77),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)), dB4dot77)
} ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16));

struct ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16) {
	ASN_ENUM(ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16, powerRatio_r16)) powerRatio_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_Config_r16, groupAlternation_r16)), true)
} ASN_ENUM(ASN_NAME(GWUS_Config_r16, groupAlternation_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_Config_r16, commonSequence_r16)), g0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_Config_r16, commonSequence_r16)), g126)
} ASN_ENUM(ASN_NAME(GWUS_Config_r16, commonSequence_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, maxDurationFactor_r16)), one32th),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, maxDurationFactor_r16)), one16th),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, maxDurationFactor_r16)), one8th),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, maxDurationFactor_r16)), one4th)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, maxDurationFactor_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numPOs_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numPOs_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numPOs_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numPOs_r16)), spare1)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numPOs_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffsetDRX_r16)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffsetDRX_r16)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffsetDRX_r16)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffsetDRX_r16)), ms240)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffsetDRX_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Short_r16)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Short_r16)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Short_r16)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Short_r16)), ms240)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Short_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Long_r16)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Long_r16)), ms2000)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Long_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numDRX_CyclesRelaxed_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numDRX_CyclesRelaxed_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numDRX_CyclesRelaxed_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numDRX_CyclesRelaxed_r16)), n8)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numDRX_CyclesRelaxed_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, powerBoost_r16)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, powerBoost_r16)), dB1dot8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, powerBoost_r16)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, powerBoost_r16)), dB4dot8)
} ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, powerBoost_r16));

struct ASN_NAME(GWUS_TimeParameters_r16) {
	ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, maxDurationFactor_r16)) maxDurationFactor_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numPOs_r16)), numPOs_r16);
	ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffsetDRX_r16)) timeOffsetDRX_r16;
	ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Short_r16)) timeOffset_eDRX_Short_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, timeOffset_eDRX_Long_r16)), timeOffset_eDRX_Long_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, numDRX_CyclesRelaxed_r16)), numDRX_CyclesRelaxed_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(GWUS_TimeParameters_r16, powerBoost_r16)), powerBoost_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithWUS)), primary),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithWUS)), secondary),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithWUS)), primary3FDM)
} ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithWUS));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithoutWUS)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithoutWUS)), n2)
} ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithoutWUS));

SIDL_UNION_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16)) {
	ASN_ENUM_VAL(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16), resourceLocationWithWUS),
	ASN_ENUM_VAL(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16), resourceLocationWithoutWUS)
};
SIDL_UNION_BEGIN(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16)) {
	SIDL_UNION_CASE(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16)_resourceLocationWithWUS)
		ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithWUS)) resourceLocationWithWUS;
	SIDL_UNION_CASE(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16)_resourceLocationWithoutWUS)
		ASN_ENUM(ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16, resourceLocationWithoutWUS)) resourceLocationWithoutWUS;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_NumGroups_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_NumGroups_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_NumGroups_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_NumGroups_r16)), n8)
} ASN_ENUM(ASN_NAME(GWUS_NumGroups_r16));

typedef SIDL_DYNAMIC(ASN_ENUM(ASN_NAME(GWUS_NumGroups_r16)), ASN_NAME(GWUS_NumGroupsList_r16)); // SIZE (1..4)

typedef SIDL_DYNAMIC(uint8_t, ASN_NAME(GWUS_GroupsForServiceList_r16)); // SIZE (1..3) OF (1..31)

struct ASN_NAME(GWUS_ResourceConfig_r16) {
	struct ASN_NAME(GWUS_ResourceConfig_r16, resourceMappingPattern_r16) resourceMappingPattern_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(GWUS_ResourceConfig_r16), ASN_NAME(GWUS_NumGroupsList_r16), numGroupsList_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(GWUS_ResourceConfig_r16), ASN_NAME(GWUS_GroupsForServiceList_r16), groupsForServiceList_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), p90)
} ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16));

typedef SIDL_DYNAMIC(ASN_ENUM(ASN_NAME(GWUS_PagingProbThresh_r16)), ASN_NAME(GWUS_ProbThreshList_r16)); // SIZE (1..3)

typedef SIDL_DYNAMIC(bool, ASN_NAME(GWUS_GroupNarrowBandList_r16)); // SIZE (1..16)

struct ASN_NAME(GWUS_Config_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(GWUS_Config_r16, groupAlternation_r16)), groupAlternation_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(GWUS_Config_r16, commonSequence_r16)), commonSequence_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(GWUS_Config_r16), ASN_NAME(GWUS_TimeParameters_r16), timeParameters_r16);
	struct ASN_NAME(GWUS_ResourceConfig_r16) resourceConfigDRX_r16;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(GWUS_Config_r16), ASN_NAME(GWUS_ResourceConfig_r16), resourceConfig_eDRX_Short_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(GWUS_Config_r16), ASN_NAME(GWUS_ResourceConfig_r16), resourceConfig_eDRX_Long_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(GWUS_Config_r16), ASN_NAME(GWUS_ProbThreshList_r16), probThreshList_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(GWUS_Config_r16), ASN_NAME(GWUS_GroupNarrowBandList_r16), groupNarrowBandList_r16);
};

struct ASN_NAME(UplinkPowerControlCommon_v1610) {
	ASN_ENUM(ASN_NAME(Alpha_r12)) alphaSRS_Add_r16;
	int8_t p0_NominalSRS_Add_r16; // OF (-126..24)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RadioResourceConfigCommonSIB, rss_MeasConfig_r16)), enabled)
} ASN_ENUM(ASN_NAME(RadioResourceConfigCommonSIB, rss_MeasConfig_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RadioResourceConfigCommonSIB, rss_MeasNonNCL_r16)), enabled)
} ASN_ENUM(ASN_NAME(RadioResourceConfigCommonSIB, rss_MeasNonNCL_r16));

struct ASN_NAME(RadioResourceConfigCommonSIB) {
	struct ASN_NAME(RACH_ConfigCommon) rach_ConfigCommon;
	struct ASN_NAME(BCCH_Config) bcch_Config;
	struct ASN_NAME(PCCH_Config) pcch_Config;
	struct ASN_NAME(PRACH_ConfigSIB) prach_Config;
	struct ASN_NAME(PDSCH_ConfigCommon) pdsch_ConfigCommon;
	struct ASN_NAME(PUSCH_ConfigCommon) pusch_ConfigCommon;
	struct ASN_NAME(PUCCH_ConfigCommon) pucch_ConfigCommon;
	struct ASN_NAME(SoundingRS_UL_ConfigCommon) soundingRS_UL_ConfigCommon;
	struct ASN_NAME(UplinkPowerControlCommon) uplinkPowerControlCommon;
	ASN_ENUM(ASN_NAME(UL_CyclicPrefixLength)) ul_CyclicPrefixLength;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(UplinkPowerControlCommon_v1020), uplinkPowerControlCommon_v1020);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(RACH_ConfigCommon_v1250), rach_ConfigCommon_v1250);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PUSCH_ConfigCommon_v1270), pusch_ConfigCommon_v1270);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(BCCH_Config_v1310), bcch_Config_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PCCH_Config_v1310), pcch_Config_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(FreqHoppingParameters_r13), freqHoppingParameters_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PDSCH_ConfigCommon_v1310), pdsch_ConfigCommon_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PUSCH_ConfigCommon_v1310), pusch_ConfigCommon_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PRACH_ConfigSIB_v1310), prach_ConfigCommon_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PUCCH_ConfigCommon_v1310), pucch_ConfigCommon_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(HighSpeedConfig_r14), highSpeedConfig_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PRACH_Config_v1430), prach_Config_v1430);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PUCCH_ConfigCommon_v1430), pucch_ConfigCommon_v1430);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(PRACH_ConfigSIB_v1530), prach_Config_v1530);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(RSS_Config_r15), ce_RSS_Config_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(WUS_Config_r15), wus_Config_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(HighSpeedConfig_v1530), highSpeedConfig_v1530);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(UplinkPowerControlCommon_v1530), uplinkPowerControlCommon_v1540);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(WUS_Config_v1560), wus_Config_v1560);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(WUS_Config_v1610), wus_Config_v1610);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(HighSpeedConfig_v1610), highSpeedConfig_v1610);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(CRS_ChEstMPDCCH_ConfigCommon_r16), crs_ChEstMPDCCH_ConfigCommon_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(GWUS_Config_r16), gwus_Config_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), ASN_NAME(UplinkPowerControlCommon_v1610), uplinkPowerControlCommon_v1610);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(RadioResourceConfigCommonSIB, rss_MeasConfig_r16)), rss_MeasConfig_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(RadioResourceConfigCommonSIB, rss_MeasNonNCL_r16)), rss_MeasNonNCL_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), B2, puncturedSubcarriersDL_r16); // SIZE (2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RadioResourceConfigCommonSIB), bool, highSpeedInterRAT_NR_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)), ms2000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)), ms2000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)), ms2000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)), n20)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms3000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms10000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms15000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms20000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)), ms30000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)), n10)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms2500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms3000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms3500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms4000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms6000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms8000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), ms10000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms2500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms3000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms3500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms4000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms6000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms8000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), ms10000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310_v1330)), ms4000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310_v1330)), ms6000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310_v1330));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms4000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms6000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms8000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms10000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms15000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms25000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms40000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), ms60000)
} ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15));

struct ASN_NAME(UE_TimersAndConstants) {
	ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300)) t300;
	ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301)) t301;
	ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310)) t310;
	ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n310)) n310;
	ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t311)) t311;
	ASN_ENUM(ASN_NAME(UE_TimersAndConstants, n311)) n311;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_v1310)), t300_v1310);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t301_v1310)), t301_v1310);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t310_v1330)), t310_v1330);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(UE_TimersAndConstants, t300_r15)), t300_r15);
};

typedef uint16_t ASN_NAME(ARFCN_ValueEUTRA); // OF (0..65535)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), n100)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth));

typedef uint8_t ASN_NAME(AdditionalSpectrumEmission); // OF (1..32)

struct ASN_NAME(SystemInformationBlockType2, freqInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2, freqInfo), ASN_NAME(ARFCN_ValueEUTRA), ul_CarrierFreq);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, freqInfo, ul_Bandwidth)), ul_Bandwidth);
	ASN_NAME(AdditionalSpectrumEmission) additionalSpectrumEmission;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)), n32)
} ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod));

SIDL_UNION_ENUM(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation)) {
	ASN_ENUM_VAL(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation), oneFrame),
	ASN_ENUM_VAL(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation), fourFrames)
};
SIDL_UNION_BEGIN(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation)) {
	SIDL_UNION_CASE(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation)_oneFrame)
		B6 oneFrame; // SIZE (6)
	SIDL_UNION_CASE(ASN_NAME(MBSFN_SubframeConfig, subframeAllocation)_fourFrames)
		B24 fourFrames; // SIZE (24)
} SIDL_UNION_END;

struct ASN_NAME(MBSFN_SubframeConfig) {
	ASN_ENUM(ASN_NAME(MBSFN_SubframeConfig, radioframeAllocationPeriod)) radioframeAllocationPeriod;
	uint8_t radioframeAllocationOffset; // OF (0..7)
	struct ASN_NAME(MBSFN_SubframeConfig, subframeAllocation) subframeAllocation;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBSFN_SubframeConfig), ASN_NAME(MBSFN_SubframeConfigList)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf1920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf5120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), sf10240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeAlignmentTimer)), infinity)
} ASN_ENUM(ASN_NAME(TimeAlignmentTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForMMTELVoice_r12)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForMMTELVoice_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForMMTELVideo_r12)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForMMTELVideo_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForSMS_r12)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForSMS_r12));

struct ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringInfo_r12) {
	bool ac_BarringForEmergency_r12;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringInfo_r12), ASN_NAME(AC_BarringConfig), ac_BarringForMO_Signalling_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringInfo_r12), ASN_NAME(AC_BarringConfig), ac_BarringForMO_Data_r12);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForMMTELVoice_r12)), true)
} ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForMMTELVoice_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForMMTELVideo_r12)), true)
} ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForMMTELVideo_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForSMS_r12)), true)
} ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForSMS_r12));

struct ASN_NAME(AC_BarringPerPLMN_r12) {
	uint8_t plmn_IdentityIndex_r12; // OF (1..6)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringInfo_r12), ac_BarringInfo_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForMMTELVoice_r12)), ac_BarringSkipForMMTELVoice_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForMMTELVideo_r12)), ac_BarringSkipForMMTELVideo_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(AC_BarringPerPLMN_r12, ac_BarringSkipForSMS_r12)), ac_BarringSkipForSMS_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(AC_BarringPerPLMN_r12), ASN_NAME(AC_BarringConfig), ac_BarringForCSFB_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(AC_BarringPerPLMN_r12), ASN_NAME(AC_BarringConfig), ssac_BarringForMMTEL_Voice_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(AC_BarringPerPLMN_r12), ASN_NAME(AC_BarringConfig), ssac_BarringForMMTEL_Video_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(AC_BarringPerPLMN_r12), ASN_NAME(AC_BarringPerPLMN_List_r12)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, voiceServiceCauseIndication_r12)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, voiceServiceCauseIndication_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p00),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)), p95)
} ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)), s512)
} ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13));

struct ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13) {
	ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringFactor_r13)) ac_BarringFactor_r13;
	ASN_ENUM(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13, ac_BarringTime_r13)) ac_BarringTime_r13;
};

struct ASN_NAME(BarringPerACDC_Category_r13) {
	uint8_t acdc_Category_r13; // OF (1..16)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(BarringPerACDC_Category_r13, acdc_BarringConfig_r13), acdc_BarringConfig_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(BarringPerACDC_Category_r13), ASN_NAME(BarringPerACDC_CategoryList_r13)); // SIZE (1..16)

struct ASN_NAME(ACDC_BarringForCommon_r13) {
	bool acdc_HPLMNonly_r13;
	ASN_NAME(BarringPerACDC_CategoryList_r13) barringPerACDC_CategoryList_r13;
};

struct ASN_NAME(ACDC_BarringPerPLMN_r13) {
	uint8_t plmn_IdentityIndex_r13; // OF (1..6)
	bool acdc_OnlyForHPLMN_r13;
	ASN_NAME(BarringPerACDC_CategoryList_r13) barringPerACDC_CategoryList_r13;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(ACDC_BarringPerPLMN_r13), ASN_NAME(ACDC_BarringPerPLMN_List_r13)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_Restricting_r13)), true)
} ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_Restricting_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), s512)
} ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13));

struct ASN_NAME(UDT_Restricting_r13) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_Restricting_r13)), udt_Restricting_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(UDT_Restricting_r13, udt_RestrictingTime_r13)), udt_RestrictingTime_r13);
};

struct ASN_NAME(UDT_RestrictingPerPLMN_r13) {
	uint8_t plmn_IdentityIndex_r13; // OF (1..6)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(UDT_RestrictingPerPLMN_r13), ASN_NAME(UDT_Restricting_r13), udt_Restricting_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(UDT_RestrictingPerPLMN_r13), ASN_NAME(UDT_RestrictingPerPLMN_List_r13)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, up_CIoT_EPS_Optimisation_r13)), true)
} ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, up_CIoT_EPS_Optimisation_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, cp_CIoT_EPS_Optimisation_r13)), true)
} ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, cp_CIoT_EPS_Optimisation_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, attachWithoutPDN_Connectivity_r13)), true)
} ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, attachWithoutPDN_Connectivity_r13));

struct ASN_NAME(CIOT_OptimisationPLMN_r13) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, up_CIoT_EPS_Optimisation_r13)), up_CIoT_EPS_Optimisation_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, cp_CIoT_EPS_Optimisation_r13)), cp_CIoT_EPS_Optimisation_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CIOT_OptimisationPLMN_r13, attachWithoutPDN_Connectivity_r13)), attachWithoutPDN_Connectivity_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CIOT_OptimisationPLMN_r13), ASN_NAME(CIOT_EPS_OptimisationInfo_r13)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, useFullResumeID_r13)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, useFullResumeID_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, unicastFreqHoppingInd_r13)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, unicastFreqHoppingInd_r13));

SIDL_UNION_ENUM(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430)) {
	ASN_ENUM_VAL(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430), oneFrame_v1430),
	ASN_ENUM_VAL(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430), fourFrames_v1430)
};
SIDL_UNION_BEGIN(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430)) {
	SIDL_UNION_CASE(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430)_oneFrame_v1430)
		B2 oneFrame_v1430; // SIZE (2)
	SIDL_UNION_CASE(ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430)_fourFrames_v1430)
		B8 fourFrames_v1430; // SIZE (8)
} SIDL_UNION_END;

struct ASN_NAME(MBSFN_SubframeConfig_v1430) {
	struct ASN_NAME(MBSFN_SubframeConfig_v1430, subframeAllocation_v1430) subframeAllocation_v1430;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBSFN_SubframeConfig_v1430), ASN_NAME(MBSFN_SubframeConfigList_v1430)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, videoServiceCauseIndication_r14)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, videoServiceCauseIndication_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_Info_r15, upperLayerIndication_r15)), true)
} ASN_ENUM(ASN_NAME(PLMN_Info_r15, upperLayerIndication_r15));

struct ASN_NAME(PLMN_Info_r15) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PLMN_Info_r15, upperLayerIndication_r15)), upperLayerIndication_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_Info_r15), ASN_NAME(PLMN_InfoList_r15)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_EDT_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_EDT_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_EDT_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_EDT_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, idleModeMeasurements_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, idleModeMeasurements_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, reducedCP_LatencyEnabled_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, reducedCP_LatencyEnabled_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mbms_ROM_ServiceIndication_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mbms_ROM_ServiceIndication_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, rlos_Enabled_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, rlos_Enabled_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, earlySecurityReactivation_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, earlySecurityReactivation_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_EDT_5GC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_EDT_5GC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_EDT_5GC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_EDT_5GC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_PUR_EPC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_PUR_EPC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_PUR_EPC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_PUR_EPC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_PUR_5GC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_PUR_5GC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_PUR_5GC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_PUR_5GC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mpdcch_CQI_Reporting_r16)), fourBits),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mpdcch_CQI_Reporting_r16)), both)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mpdcch_CQI_Reporting_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, rai_ActivationEnh_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, rai_ActivationEnh_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, idleModeMeasurementsNR_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType2, idleModeMeasurementsNR_r16));

struct ASN_NAME(SystemInformationBlockType2) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType2, ac_BarringInfo), ac_BarringInfo);
	struct ASN_NAME(RadioResourceConfigCommonSIB) radioResourceConfigCommon;
	struct ASN_NAME(UE_TimersAndConstants) ue_TimersAndConstants;
	struct ASN_NAME(SystemInformationBlockType2, freqInfo) freqInfo;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(MBSFN_SubframeConfigList), mbsfn_SubframeConfigList);
	ASN_ENUM(ASN_NAME(TimeAlignmentTimer)) timeAlignmentTimerCommon;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), OCTET_STRING, lateNonCriticalExtension); // CONTAINING (ASN_NAME(SystemInformationBlockType2_v8h0_IEs))
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(AC_BarringConfig), ssac_BarringForMMTEL_Voice_r9);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(AC_BarringConfig), ssac_BarringForMMTEL_Video_r9);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(AC_BarringConfig), ac_BarringForCSFB_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForMMTELVoice_r12)), ac_BarringSkipForMMTELVoice_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForMMTELVideo_r12)), ac_BarringSkipForMMTELVideo_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, ac_BarringSkipForSMS_r12)), ac_BarringSkipForSMS_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(AC_BarringPerPLMN_List_r12), ac_BarringPerPLMN_List_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, voiceServiceCauseIndication_r12)), voiceServiceCauseIndication_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(ACDC_BarringForCommon_r13), acdc_BarringForCommon_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(ACDC_BarringPerPLMN_List_r13), acdc_BarringPerPLMN_List_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(UDT_Restricting_r13), udt_RestrictingForCommon_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(UDT_RestrictingPerPLMN_List_r13), udt_RestrictingPerPLMN_List_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(CIOT_EPS_OptimisationInfo_r13), cIoT_EPS_OptimisationInfo_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, useFullResumeID_r13)), useFullResumeID_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, unicastFreqHoppingInd_r13)), unicastFreqHoppingInd_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(MBSFN_SubframeConfigList_v1430), mbsfn_SubframeConfigList_v1430);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, videoServiceCauseIndication_r14)), videoServiceCauseIndication_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType2), ASN_NAME(PLMN_InfoList_r15), plmn_InfoList_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_EDT_r15)), cp_EDT_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_EDT_r15)), up_EDT_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, idleModeMeasurements_r15)), idleModeMeasurements_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, reducedCP_LatencyEnabled_r15)), reducedCP_LatencyEnabled_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mbms_ROM_ServiceIndication_r15)), mbms_ROM_ServiceIndication_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, rlos_Enabled_r16)), rlos_Enabled_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, earlySecurityReactivation_r16)), earlySecurityReactivation_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_EDT_5GC_r16)), cp_EDT_5GC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_EDT_5GC_r16)), up_EDT_5GC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_PUR_EPC_r16)), cp_PUR_EPC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_PUR_EPC_r16)), up_PUR_EPC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, cp_PUR_5GC_r16)), cp_PUR_5GC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, up_PUR_5GC_r16)), up_PUR_5GC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, mpdcch_CQI_Reporting_r16)), mpdcch_CQI_Reporting_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, rai_ActivationEnh_r16)), rai_ActivationEnh_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType2, idleModeMeasurementsNR_r16)), idleModeMeasurementsNR_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)), dB24)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), s180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)), spare1)
} ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), s180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)), spare1)
} ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal));

struct ASN_NAME(MobilityStateParameters) {
	ASN_ENUM(ASN_NAME(MobilityStateParameters, t_Evaluation)) t_Evaluation;
	ASN_ENUM(ASN_NAME(MobilityStateParameters, t_HystNormal)) t_HystNormal;
	uint8_t n_CellChangeMedium; // OF (1..16)
	uint8_t n_CellChangeHigh; // OF (1..16)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB0)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB0)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High));

struct ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF) {
	ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)) sf_Medium;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)) sf_High;
};

struct ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars) {
	struct ASN_NAME(MobilityStateParameters) mobilityStateParameters;
	struct ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF) q_HystSF;
};

struct ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon) {
	ASN_ENUM(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, q_Hyst)) q_Hyst;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon, speedStateReselectionPars), speedStateReselectionPars);
};

typedef uint8_t ASN_NAME(ReselectionThreshold); // OF (0..31)

typedef uint8_t ASN_NAME(CellReselectionPriority); // OF (0..7)

struct ASN_NAME(SystemInformationBlockType3, cellReselectionServingFreqInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3, cellReselectionServingFreqInfo), ASN_NAME(ReselectionThreshold), s_NonIntraSearch);
	ASN_NAME(ReselectionThreshold) threshServingLow;
	ASN_NAME(CellReselectionPriority) cellReselectionPriority;
};

typedef int8_t ASN_NAME(Q_RxLevMin); // OF (-70..-22)

typedef int8_t ASN_NAME(P_Max); // OF (-30..33)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), mbw6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), mbw15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), mbw25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), mbw50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), mbw75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), mbw100)
} ASN_ENUM(ASN_NAME(AllowedMeasBandwidth));

typedef bool ASN_NAME(PresenceAntennaPort1);

typedef B2 ASN_NAME(NeighCellConfig); // SIZE (2)

typedef uint8_t ASN_NAME(T_Reselection); // OF (0..7)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_Medium)), oDot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_Medium)), oDot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_Medium)), oDot75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_Medium)), lDot0)
} ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_Medium));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_High)), oDot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_High)), oDot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_High)), oDot75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_High)), lDot0)
} ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_High));

struct ASN_NAME(SpeedStateScaleFactors) {
	ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_Medium)) sf_Medium;
	ASN_ENUM(ASN_NAME(SpeedStateScaleFactors, sf_High)) sf_High;
};

struct ASN_NAME(SystemInformationBlockType3, intraFreqCellReselectionInfo) {
	ASN_NAME(Q_RxLevMin) q_RxLevMin;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3, intraFreqCellReselectionInfo), ASN_NAME(P_Max), p_Max);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3, intraFreqCellReselectionInfo), ASN_NAME(ReselectionThreshold), s_IntraSearch);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3, intraFreqCellReselectionInfo), ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)), allowedMeasBandwidth);
	ASN_NAME(PresenceAntennaPort1) presenceAntennaPort1;
	ASN_NAME(NeighCellConfig) neighCellConfig;
	ASN_NAME(T_Reselection) t_ReselectionEUTRA;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3, intraFreqCellReselectionInfo), ASN_NAME(SpeedStateScaleFactors), t_ReselectionEUTRA_SF);
};

typedef uint8_t ASN_NAME(ReselectionThresholdQ_r9); // OF (0..31)

struct ASN_NAME(SystemInformationBlockType3, s_IntraSearch_v920) {
	ASN_NAME(ReselectionThreshold) s_IntraSearchP_r9;
	ASN_NAME(ReselectionThresholdQ_r9) s_IntraSearchQ_r9;
};

struct ASN_NAME(SystemInformationBlockType3, s_NonIntraSearch_v920) {
	ASN_NAME(ReselectionThreshold) s_NonIntraSearchP_r9;
	ASN_NAME(ReselectionThresholdQ_r9) s_NonIntraSearchQ_r9;
};

typedef int8_t ASN_NAME(Q_QualMin_r9); // OF (-34..-3)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), oDot2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), oDot4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), oDot6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), oDot8)
} ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13));

struct ASN_NAME(CellReselectionServingFreqInfo_v1310) {
	ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)) cellReselectionSubPriority_r13;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, redistributionFactorCell_r13)), true)
} ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, redistributionFactorCell_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), min4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), min8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), min16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), min32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), infinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)), spare1)
} ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, redistrOnPagingOnly_r13)), true)
} ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, redistrOnPagingOnly_r13));

struct ASN_NAME(RedistributionServingInfo_r13) {
	uint8_t redistributionFactorServing_r13; // OF (0..10)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, redistributionFactorCell_r13)), redistributionFactorCell_r13);
	ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, t360_r13)) t360_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(RedistributionServingInfo_r13, redistrOnPagingOnly_r13)), redistrOnPagingOnly_r13);
};

struct ASN_NAME(CellSelectionInfoCE_r13) {
	ASN_NAME(Q_RxLevMin) q_RxLevMinCE_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellSelectionInfoCE_r13), ASN_NAME(Q_QualMin_r9), q_QualMinRSRQ_CE_r13);
};

typedef uint8_t ASN_NAME(T_ReselectionEUTRA_CE_r13); // OF (0..15)

struct ASN_NAME(CellSelectionInfoCE1_r13) {
	ASN_NAME(Q_RxLevMin) q_RxLevMinCE1_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellSelectionInfoCE1_r13), ASN_NAME(Q_QualMin_r9), q_QualMinRSRQ_CE1_r13);
};

struct ASN_NAME(CellSelectionInfoCE1_v1360) {
	int8_t delta_RxLevMinCE1_v1360; // OF (-8..-1)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionInfoCommon_v1460, s_SearchDeltaP_r14)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionInfoCommon_v1460, s_SearchDeltaP_r14)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionInfoCommon_v1460, s_SearchDeltaP_r14)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellReselectionInfoCommon_v1460, s_SearchDeltaP_r14)), dB15)
} ASN_ENUM(ASN_NAME(CellReselectionInfoCommon_v1460, s_SearchDeltaP_r14));

struct ASN_NAME(CellReselectionInfoCommon_v1460) {
	ASN_ENUM(ASN_NAME(CellReselectionInfoCommon_v1460, s_SearchDeltaP_r14)) s_SearchDeltaP_r14;
};

struct ASN_NAME(CellReselectionInfoHSDN_r15) {
	uint8_t cellEquivalentSize_r15; // OF (2..16)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)), dB_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)), dB12)
} ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15));

struct ASN_NAME(CellSelectionInfoCE_v1530) {
	ASN_ENUM(ASN_NAME(CellSelectionInfoCE_v1530, powerClass14dBm_Offset_r15)) powerClass14dBm_Offset_r15;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, crs_IntfMitigNeighCellsCE_r15)), enabled)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType3, crs_IntfMitigNeighCellsCE_r15));

struct ASN_NAME(CellReselectionServingFreqInfo_v1610) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellReselectionServingFreqInfo_v1610), ASN_NAME(CellReselectionPriority), altCellReselectionPriority_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellReselectionServingFreqInfo_v1610), ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), altCellReselectionSubPriority_r16);
};

struct ASN_NAME(SystemInformationBlockType3) {
	struct ASN_NAME(SystemInformationBlockType3, cellReselectionInfoCommon) cellReselectionInfoCommon;
	struct ASN_NAME(SystemInformationBlockType3, cellReselectionServingFreqInfo) cellReselectionServingFreqInfo;
	struct ASN_NAME(SystemInformationBlockType3, intraFreqCellReselectionInfo) intraFreqCellReselectionInfo;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3), OCTET_STRING, lateNonCriticalExtension); // CONTAINING (ASN_NAME(SystemInformationBlockType3_v10j0_IEs))
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType3, s_IntraSearch_v920), s_IntraSearch_v920);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType3, s_NonIntraSearch_v920), s_NonIntraSearch_v920);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(Q_QualMin_r9), q_QualMin_r9);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(ReselectionThresholdQ_r9), threshServingLowQ_r9);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(Q_QualMin_r9), q_QualMinWB_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(Q_QualMin_r9), q_QualMinRSRQ_OnAllSymbols_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellReselectionServingFreqInfo_v1310), cellReselectionServingFreqInfo_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(RedistributionServingInfo_r13), redistributionServingInfo_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellSelectionInfoCE_r13), cellSelectionInfoCE_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(T_ReselectionEUTRA_CE_r13), t_ReselectionEUTRA_CE_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellSelectionInfoCE1_r13), cellSelectionInfoCE1_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellSelectionInfoCE1_v1360), cellSelectionInfoCE1_v1360);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellReselectionInfoCommon_v1460), cellReselectionInfoCommon_v1460);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellReselectionInfoHSDN_r15), cellReselectionInfoHSDN_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellSelectionInfoCE_v1530), cellSelectionInfoCE_v1530);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType3, crs_IntfMitigNeighCellsCE_r15)), crs_IntfMitigNeighCellsCE_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType3), ASN_NAME(CellReselectionServingFreqInfo_v1610), cellReselectionServingFreqInfo_v1610);
};

typedef uint16_t ASN_NAME(PhysCellId); // OF (0..503)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Q_OffsetRange)), dB24)
} ASN_ENUM(ASN_NAME(Q_OffsetRange));

struct ASN_NAME(IntraFreqNeighCellInfo) {
	ASN_NAME(PhysCellId) physCellId;
	ASN_ENUM(ASN_NAME(Q_OffsetRange)) q_OffsetCell;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(IntraFreqNeighCellInfo), ASN_NAME(IntraFreqNeighCellList)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n84),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n168),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n252),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), n504),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), spare1)
} ASN_ENUM(ASN_NAME(PhysCellIdRange, range));

struct ASN_NAME(PhysCellIdRange) {
	ASN_NAME(PhysCellId) start;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PhysCellIdRange, range)), range);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PhysCellIdRange), ASN_NAME(IntraFreqBlackCellList)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PhysCellIdRange), ASN_NAME(IntraFreqNeighHSDN_CellList_r15)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)), g128)
} ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16));

struct ASN_NAME(RSS_ConfigCarrierInfo_r16) {
	BIT_STRING narrowbandIndex_r16; // SIZE (1..15)
	ASN_ENUM(ASN_NAME(RSS_ConfigCarrierInfo_r16, timeOffsetGranularity_r16)) timeOffsetGranularity_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)), rssNotUsed)
} ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16));

struct ASN_NAME(IntraFreqNeighCellInfo_v1610) {
	ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)) rss_MeasPowerBias_r16;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(IntraFreqNeighCellInfo_v1610), ASN_NAME(IntraFreqNeighCellList_v1610)); // SIZE (1..16)

struct ASN_NAME(SystemInformationBlockType4) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType4), ASN_NAME(IntraFreqNeighCellList), intraFreqNeighCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType4), ASN_NAME(IntraFreqBlackCellList), intraFreqBlackCellList);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType4), ASN_NAME(PhysCellIdRange), csg_PhysCellIdRange);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType4), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType4), ASN_NAME(IntraFreqNeighHSDN_CellList_r15), intraFreqNeighHSDN_CellList_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType4), ASN_NAME(RSS_ConfigCarrierInfo_r16), rss_ConfigCarrierInfo_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType4), ASN_NAME(IntraFreqNeighCellList_v1610), intraFreqNeighCellList_v1610);
};

struct ASN_NAME(InterFreqNeighCellInfo) {
	ASN_NAME(PhysCellId) physCellId;
	ASN_ENUM(ASN_NAME(Q_OffsetRange)) q_OffsetCell;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqNeighCellInfo), ASN_NAME(InterFreqNeighCellList)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PhysCellIdRange), ASN_NAME(InterFreqBlackCellList)); // SIZE (1..16)

struct ASN_NAME(InterFreqCarrierFreqInfo, threshX_Q_r9) {
	ASN_NAME(ReselectionThresholdQ_r9) threshX_HighQ_r9;
	ASN_NAME(ReselectionThresholdQ_r9) threshX_LowQ_r9;
};

struct ASN_NAME(InterFreqCarrierFreqInfo) {
	ASN_NAME(ARFCN_ValueEUTRA) dl_CarrierFreq;
	ASN_NAME(Q_RxLevMin) q_RxLevMin;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(P_Max), p_Max);
	ASN_NAME(T_Reselection) t_ReselectionEUTRA;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(SpeedStateScaleFactors), t_ReselectionEUTRA_SF);
	ASN_NAME(ReselectionThreshold) threshX_High;
	ASN_NAME(ReselectionThreshold) threshX_Low;
	ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)) allowedMeasBandwidth;
	ASN_NAME(PresenceAntennaPort1) presenceAntennaPort1;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(CellReselectionPriority), cellReselectionPriority);
	ASN_NAME(NeighCellConfig) neighCellConfig;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_ENUM(ASN_NAME(Q_OffsetRange)), q_OffsetFreq);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(InterFreqNeighCellList), interFreqNeighCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(InterFreqBlackCellList), interFreqBlackCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(Q_QualMin_r9), q_QualMin_r9);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo, threshX_Q_r9), threshX_Q_r9);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(Q_QualMin_r9), q_QualMinWB_r11);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo), ASN_NAME(InterFreqCarrierFreqList)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(InterFreqCarrierFreqInfo_v1250, reducedMeasPerformance_r12)), true)
} ASN_ENUM(ASN_NAME(InterFreqCarrierFreqInfo_v1250, reducedMeasPerformance_r12));

struct ASN_NAME(InterFreqCarrierFreqInfo_v1250) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(InterFreqCarrierFreqInfo_v1250, reducedMeasPerformance_r12)), reducedMeasPerformance_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1250), ASN_NAME(Q_QualMin_r9), q_QualMinRSRQ_OnAllSymbols_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1250), ASN_NAME(InterFreqCarrierFreqList_v1250)); // SIZE (1..8)

typedef uint32_t ASN_NAME(ARFCN_ValueEUTRA_r9); // OF (0..262143)

struct ASN_NAME(InterFreqCarrierFreqInfo_r12, threshX_Q_r12) {
	ASN_NAME(ReselectionThresholdQ_r9) threshX_HighQ_r12;
	ASN_NAME(ReselectionThresholdQ_r9) threshX_LowQ_r12;
};

typedef uint16_t ASN_NAME(FreqBandIndicator_r11); // OF (1..256)

typedef SIDL_DYNAMIC(ASN_NAME(FreqBandIndicator_r11), ASN_NAME(MultiBandInfoList_r11)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(InterFreqCarrierFreqInfo_r12, reducedMeasPerformance_r12)), true)
} ASN_ENUM(ASN_NAME(InterFreqCarrierFreqInfo_r12, reducedMeasPerformance_r12));

struct ASN_NAME(InterFreqCarrierFreqInfo_r12) {
	ASN_NAME(ARFCN_ValueEUTRA_r9) dl_CarrierFreq_r12;
	ASN_NAME(Q_RxLevMin) q_RxLevMin_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(P_Max), p_Max_r12);
	ASN_NAME(T_Reselection) t_ReselectionEUTRA_r12;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(SpeedStateScaleFactors), t_ReselectionEUTRA_SF_r12);
	ASN_NAME(ReselectionThreshold) threshX_High_r12;
	ASN_NAME(ReselectionThreshold) threshX_Low_r12;
	ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)) allowedMeasBandwidth_r12;
	ASN_NAME(PresenceAntennaPort1) presenceAntennaPort1_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(CellReselectionPriority), cellReselectionPriority_r12);
	ASN_NAME(NeighCellConfig) neighCellConfig_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_ENUM(ASN_NAME(Q_OffsetRange)), q_OffsetFreq_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(InterFreqNeighCellList), interFreqNeighCellList_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(InterFreqBlackCellList), interFreqBlackCellList_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(Q_QualMin_r9), q_QualMin_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_r12, threshX_Q_r12), threshX_Q_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(Q_QualMin_r9), q_QualMinWB_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(MultiBandInfoList_r11), multiBandInfoList_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(InterFreqCarrierFreqInfo_r12, reducedMeasPerformance_r12)), reducedMeasPerformance_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(Q_QualMin_r9), q_QualMinRSRQ_OnAllSymbols_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_r12), ASN_NAME(InterFreqCarrierFreqListExt_r12)); // SIZE (1..8)

struct ASN_NAME(NS_PmaxValue_r10) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(NS_PmaxValue_r10), ASN_NAME(P_Max), additionalPmax_r10);
	ASN_NAME(AdditionalSpectrumEmission) additionalSpectrumEmission;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(NS_PmaxValue_r10), ASN_NAME(NS_PmaxList_r10)); // SIZE (1..8)

typedef SIDL_DYNAMIC(ASN_NAME(NS_PmaxList_r10), ASN_NAME(MultiBandInfoList_v10j0)); // SIZE (1..8)

struct ASN_NAME(InterFreqCarrierFreqInfo_v10j0) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v10j0), ASN_NAME(NS_PmaxList_r10), freqBandInfo_r10);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v10j0), ASN_NAME(MultiBandInfoList_v10j0), multiBandInfoList_v10j0);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v10j0), ASN_NAME(InterFreqCarrierFreqListExt_v1280)); // SIZE (1..8)

typedef uint8_t ASN_NAME(RedistributionFactor_r13); // OF (1..10)

struct ASN_NAME(RedistributionNeighCell_r13) {
	ASN_NAME(PhysCellId) physCellId_r13;
	ASN_NAME(RedistributionFactor_r13) redistributionFactorCell_r13;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(RedistributionNeighCell_r13), ASN_NAME(RedistributionNeighCellList_r13)); // SIZE (1..16)

struct ASN_NAME(RedistributionInterFreqInfo_r13) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RedistributionInterFreqInfo_r13), ASN_NAME(RedistributionFactor_r13), redistributionFactorFreq_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(RedistributionInterFreqInfo_r13), ASN_NAME(RedistributionNeighCellList_r13), redistributionNeighCellList_r13);
};

struct ASN_NAME(InterFreqCarrierFreqInfo_v1310) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1310), ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), cellReselectionSubPriority_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1310), ASN_NAME(RedistributionInterFreqInfo_r13), redistributionInterFreqInfo_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1310), ASN_NAME(CellSelectionInfoCE_r13), cellSelectionInfoCE_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1310), ASN_NAME(T_ReselectionEUTRA_CE_r13), t_ReselectionEUTRA_CE_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1310), ASN_NAME(InterFreqCarrierFreqList_v1310)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1310), ASN_NAME(InterFreqCarrierFreqListExt_v1310)); // SIZE (1..8)

struct ASN_NAME(InterFreqCarrierFreqInfo_v1350) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1350), ASN_NAME(CellSelectionInfoCE1_r13), cellSelectionInfoCE1_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1350), ASN_NAME(InterFreqCarrierFreqList_v1350)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1350), ASN_NAME(InterFreqCarrierFreqListExt_v1350)); // SIZE (1..8)

struct ASN_NAME(InterFreqCarrierFreqInfo_v1360) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1360), ASN_NAME(CellSelectionInfoCE1_v1360), cellSelectionInfoCE1_v1360);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1360), ASN_NAME(InterFreqCarrierFreqListExt_v1360)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PhysCellIdRange), ASN_NAME(InterFreqNeighHSDN_CellList_r15)); // SIZE (1..16)

struct ASN_NAME(InterFreqCarrierFreqInfo_v1530) {
	bool hsdn_Indication_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1530), ASN_NAME(InterFreqNeighHSDN_CellList_r15), interFreqNeighHSDN_CellList_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1530), ASN_NAME(CellSelectionInfoCE_v1530), cellSelectionInfoCE_v1530);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1530), ASN_NAME(InterFreqCarrierFreqList_v1530)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1530), ASN_NAME(InterFreqCarrierFreqListExt_v1530)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PhysCellIdRange), ASN_NAME(CellList_r15)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierEUTRA_r15, reportQuantities)), rsrp),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierEUTRA_r15, reportQuantities)), rsrq),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierEUTRA_r15, reportQuantities)), both)
} ASN_ENUM(ASN_NAME(MeasIdleCarrierEUTRA_r15, reportQuantities));

typedef int8_t ASN_NAME(RSRQ_Range_r13); // OF (-30..46)

struct ASN_NAME(MeasIdleCarrierEUTRA_r15, qualityThreshold_r15) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierEUTRA_r15, qualityThreshold_r15), ASN_NAME(RSRP_Range), idleRSRP_Threshold_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierEUTRA_r15, qualityThreshold_r15), ASN_NAME(RSRQ_Range_r13), idleRSRQ_Threshold_r15);
};

struct ASN_NAME(MeasIdleCarrierEUTRA_r15) {
	ASN_NAME(ARFCN_ValueEUTRA_r9) carrierFreq_r15;
	ASN_ENUM(ASN_NAME(AllowedMeasBandwidth)) allowedMeasBandwidth_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierEUTRA_r15), ASN_NAME(CellList_r15), validityArea_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierEUTRA_r15), ASN_NAME(CellList_r15), measCellList_r15);
	ASN_ENUM(ASN_NAME(MeasIdleCarrierEUTRA_r15, reportQuantities)) reportQuantities;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(MeasIdleCarrierEUTRA_r15, qualityThreshold_r15), qualityThreshold_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MeasIdleCarrierEUTRA_r15), ASN_NAME(EUTRA_CarrierList_r15)); // SIZE (1..8)

struct ASN_NAME(MeasIdleConfigSIB_r15) {
	ASN_NAME(EUTRA_CarrierList_r15) measIdleCarrierListEUTRA_r15;
};

struct ASN_NAME(InterFreqNeighCellInfo_v1610) {
	ASN_ENUM(ASN_NAME(RSS_MeasPowerBias_r16)) rss_MeasPowerBias_r16;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqNeighCellInfo_v1610), ASN_NAME(InterFreqNeighCellList_v1610)); // SIZE (1..16)

struct ASN_NAME(InterFreqCarrierFreqInfo_v1610) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NAME(CellReselectionPriority), altCellReselectionPriority_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1610), ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), altCellReselectionSubPriority_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NAME(RSS_ConfigCarrierInfo_r16), rss_ConfigCarrierInfo_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NAME(InterFreqNeighCellList_v1610), interFreqNeighCellList_v1610);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NAME(InterFreqCarrierFreqList_v1610)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NAME(InterFreqCarrierFreqListExt_v1610)); // SIZE (1..8)

typedef uint32_t ASN_NAME(ARFCN_ValueNR_r15); // OF (0..3279165)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, subcarrierSpacingSSB_r16)), kHz15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, subcarrierSpacingSSB_r16)), kHz30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, subcarrierSpacingSSB_r16)), kHz120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, subcarrierSpacingSSB_r16)), kHz240)
} ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, subcarrierSpacingSSB_r16));

typedef uint16_t ASN_NAME(FreqBandIndicatorNR_r15); // OF (1..1024)

typedef SIDL_DYNAMIC(ASN_NAME(FreqBandIndicatorNR_r15), ASN_NAME(MultiFrequencyBandListNR_r15)); // SIZE (1..32)

typedef uint16_t ASN_NAME(PhysCellIdNR_r15); // OF (0..1007)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n84),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n168),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n252),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n504),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), n1008),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), spare1)
} ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range));

struct ASN_NAME(PhysCellIdRangeNR_r16) {
	ASN_NAME(PhysCellIdNR_r15) start;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PhysCellIdRangeNR_r16, range)), range);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PhysCellIdRangeNR_r16), ASN_NAME(CellListNR_r16)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, reportQuantitiesNR_r16)), rsrp),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, reportQuantitiesNR_r16)), rsrq),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, reportQuantitiesNR_r16)), both)
} ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, reportQuantitiesNR_r16));

typedef uint8_t ASN_NAME(RSRP_RangeNR_r15); // OF (0..127)

typedef uint8_t ASN_NAME(RSRQ_RangeNR_r15); // OF (0..127)

struct ASN_NAME(MeasIdleCarrierNR_r16, qualityThresholdNR_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, qualityThresholdNR_r16), ASN_NAME(RSRP_RangeNR_r15), idleRSRP_ThresholdNR_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, qualityThresholdNR_r16), ASN_NAME(RSRQ_RangeNR_r15), idleRSRQ_ThresholdNR_r16);
};

typedef uint8_t ASN_NAME(MaxRS_IndexCellQualNR_r15); // OF (1..16)

typedef uint8_t ASN_NAME(RS_SINR_RangeNR_r15); // OF (0..127)

struct ASN_NAME(ThresholdListNR_r15) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ThresholdListNR_r15), ASN_NAME(RSRP_RangeNR_r15), nr_RSRP_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ThresholdListNR_r15), ASN_NAME(RSRQ_RangeNR_r15), nr_RSRQ_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ThresholdListNR_r15), ASN_NAME(RS_SINR_RangeNR_r15), nr_SINR_r15);
};

SIDL_UNION_ENUM(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)) {
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), sf5_r15),
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), sf10_r15),
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), sf20_r15),
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), sf40_r15),
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), sf80_r15),
	ASN_ENUM_VAL(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15), sf160_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)) {
	SIDL_UNION_CASE(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)_sf5_r15)
		uint8_t sf5_r15; // OF (0..4)
	SIDL_UNION_CASE(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)_sf10_r15)
		uint8_t sf10_r15; // OF (0..9)
	SIDL_UNION_CASE(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)_sf20_r15)
		uint8_t sf20_r15; // OF (0..19)
	SIDL_UNION_CASE(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)_sf40_r15)
		uint8_t sf40_r15; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)_sf80_r15)
		uint8_t sf80_r15; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15)_sf160_r15)
		uint8_t sf160_r15; // OF (0..159)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15)), sf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15)), sf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15)), sf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15)), sf5)
} ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15));

struct ASN_NAME(MTC_SSB_NR_r15) {
	struct ASN_NAME(MTC_SSB_NR_r15, periodicityAndOffset_r15) periodicityAndOffset_r15;
	ASN_ENUM(ASN_NAME(MTC_SSB_NR_r15, ssb_Duration_r15)) ssb_Duration_r15;
};

SIDL_UNION_ENUM(ASN_NAME(SSB_ToMeasure_r15)) {
	ASN_ENUM_VAL(ASN_NAME(SSB_ToMeasure_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SSB_ToMeasure_r15), shortBitmap_r15),
	ASN_ENUM_VAL(ASN_NAME(SSB_ToMeasure_r15), mediumBitmap_r15),
	ASN_ENUM_VAL(ASN_NAME(SSB_ToMeasure_r15), longBitmap_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(SSB_ToMeasure_r15)) {
	SIDL_UNION_CASE(ASN_NAME(SSB_ToMeasure_r15)_shortBitmap_r15)
		B4 shortBitmap_r15; // SIZE (4)
	SIDL_UNION_CASE(ASN_NAME(SSB_ToMeasure_r15)_mediumBitmap_r15)
		B8 mediumBitmap_r15; // SIZE (8)
	SIDL_UNION_CASE(ASN_NAME(SSB_ToMeasure_r15)_longBitmap_r15)
		B64 longBitmap_r15; // SIZE (64)
} SIDL_UNION_END;

struct ASN_NAME(SS_RSSI_Measurement_r15) {
	BIT_STRING measurementSlots_r15; // SIZE (1..80)
	uint8_t endSymbol_r15; // OF (0..3)
};

struct ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NAME(MaxRS_IndexCellQualNR_r15), maxRS_IndexCellQual_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NAME(ThresholdListNR_r15), threshRS_Index_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NAME(MTC_SSB_NR_r15), measTimingConfig_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NAME(SSB_ToMeasure_r15), ssb_ToMeasure_r16);
	bool deriveSSB_IndexFromCell_r16;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NAME(SS_RSSI_Measurement_r15), ss_RSSI_Measurement_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BeamMeasConfigIdleNR_r16, reportQuantityRS_IndexNR_r16)), rsrp),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BeamMeasConfigIdleNR_r16, reportQuantityRS_IndexNR_r16)), rsrq),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BeamMeasConfigIdleNR_r16, reportQuantityRS_IndexNR_r16)), both)
} ASN_ENUM(ASN_NAME(BeamMeasConfigIdleNR_r16, reportQuantityRS_IndexNR_r16));

struct ASN_NAME(BeamMeasConfigIdleNR_r16) {
	ASN_ENUM(ASN_NAME(BeamMeasConfigIdleNR_r16, reportQuantityRS_IndexNR_r16)) reportQuantityRS_IndexNR_r16;
	uint8_t maxReportRS_Index_r16; // OF (0..32)
	bool reportRS_IndexResultsNR_r16;
};

struct ASN_NAME(MeasIdleCarrierNR_r16) {
	ASN_NAME(ARFCN_ValueNR_r15) carrierFreqNR_r16;
	ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, subcarrierSpacingSSB_r16)) subcarrierSpacingSSB_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16), ASN_NAME(MultiFrequencyBandListNR_r15), frequencyBandList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16), ASN_NAME(CellListNR_r16), measCellListNR_r16);
	ASN_ENUM(ASN_NAME(MeasIdleCarrierNR_r16, reportQuantitiesNR_r16)) reportQuantitiesNR_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(MeasIdleCarrierNR_r16, qualityThresholdNR_r16), qualityThresholdNR_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ssb_MeasConfig_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(MeasIdleCarrierNR_r16), ASN_NAME(BeamMeasConfigIdleNR_r16), beamMeasConfigIdle_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MeasIdleCarrierNR_r16), ASN_NAME(NR_CarrierList_r16)); // SIZE (1..8)

struct ASN_NAME(MeasIdleConfigSIB_NR_r16) {
	ASN_NAME(NR_CarrierList_r16) measIdleCarrierListNR_r16;
};

struct ASN_NAME(SystemInformationBlockType5) {
	ASN_NAME(InterFreqCarrierFreqList) interFreqCarrierFreqList;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), OCTET_STRING, lateNonCriticalExtension); // CONTAINING (ASN_NAME(SystemInformationBlockType5_v8h0_IEs))
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqList_v1250), interFreqCarrierFreqList_v1250);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_r12), interFreqCarrierFreqListExt_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_v1280), interFreqCarrierFreqListExt_v1280);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqList_v1310), interFreqCarrierFreqList_v1310);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_v1310), interFreqCarrierFreqListExt_v1310);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqList_v1350), interFreqCarrierFreqList_v1350);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_v1350), interFreqCarrierFreqListExt_v1350);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_v1360), interFreqCarrierFreqListExt_v1360);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), uint8_t, scptm_FreqOffset_r14); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqList_v1530), interFreqCarrierFreqList_v1530);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_v1530), interFreqCarrierFreqListExt_v1530);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(MeasIdleConfigSIB_r15), measIdleConfigSIB_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqList_v1610), interFreqCarrierFreqList_v1610);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(InterFreqCarrierFreqListExt_v1610), interFreqCarrierFreqListExt_v1610);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType5), ASN_NAME(MeasIdleConfigSIB_NR_r16), measIdleConfigSIB_NR_r16);
};

typedef uint16_t ASN_NAME(ARFCN_ValueUTRA); // OF (0..16383)

struct ASN_NAME(CarrierFreqUTRA_FDD, threshX_Q_r9) {
	ASN_NAME(ReselectionThresholdQ_r9) threshX_HighQ_r9;
	ASN_NAME(ReselectionThresholdQ_r9) threshX_LowQ_r9;
};

struct ASN_NAME(CarrierFreqUTRA_FDD) {
	ASN_NAME(ARFCN_ValueUTRA) carrierFreq;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqUTRA_FDD), ASN_NAME(CellReselectionPriority), cellReselectionPriority);
	ASN_NAME(ReselectionThreshold) threshX_High;
	ASN_NAME(ReselectionThreshold) threshX_Low;
	int8_t q_RxLevMin; // OF (-60..-13)
	int8_t p_MaxUTRA; // OF (-50..33)
	int8_t q_QualMin; // OF (-24..0)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CarrierFreqUTRA_FDD, threshX_Q_r9), threshX_Q_r9);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqUTRA_FDD), ASN_NAME(CarrierFreqListUTRA_FDD)); // SIZE (1..16)

struct ASN_NAME(CarrierFreqUTRA_TDD) {
	ASN_NAME(ARFCN_ValueUTRA) carrierFreq;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqUTRA_TDD), ASN_NAME(CellReselectionPriority), cellReselectionPriority);
	ASN_NAME(ReselectionThreshold) threshX_High;
	ASN_NAME(ReselectionThreshold) threshX_Low;
	int8_t q_RxLevMin; // OF (-60..-13)
	int8_t p_MaxUTRA; // OF (-50..33)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqUTRA_TDD), ASN_NAME(CarrierFreqListUTRA_TDD)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqInfoUTRA_v1250, reducedMeasPerformance_r12)), true)
} ASN_ENUM(ASN_NAME(CarrierFreqInfoUTRA_v1250, reducedMeasPerformance_r12));

struct ASN_NAME(CarrierFreqInfoUTRA_v1250) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CarrierFreqInfoUTRA_v1250, reducedMeasPerformance_r12)), reducedMeasPerformance_r12);
};

struct ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12, threshX_Q_r12) {
	ASN_NAME(ReselectionThresholdQ_r9) threshX_HighQ_r12;
	ASN_NAME(ReselectionThresholdQ_r9) threshX_LowQ_r12;
};

typedef uint8_t ASN_NAME(FreqBandIndicator_UTRA_FDD); // OF (1..86)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12, reducedMeasPerformance_r12)), true)
} ASN_ENUM(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12, reducedMeasPerformance_r12));

struct ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12) {
	ASN_NAME(ARFCN_ValueUTRA) carrierFreq_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12), ASN_NAME(CellReselectionPriority), cellReselectionPriority_r12);
	ASN_NAME(ReselectionThreshold) threshX_High_r12;
	ASN_NAME(ReselectionThreshold) threshX_Low_r12;
	int8_t q_RxLevMin_r12; // OF (-60..-13)
	int8_t p_MaxUTRA_r12; // OF (-50..33)
	int8_t q_QualMin_r12; // OF (-24..0)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12, threshX_Q_r12), threshX_Q_r12);
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12), ASN_NAME(FreqBandIndicator_UTRA_FDD), multiBandInfoList_r12); // SIZE (1..8)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12, reducedMeasPerformance_r12)), reducedMeasPerformance_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqUTRA_FDD_Ext_r12), ASN_NAME(CarrierFreqListUTRA_FDD_Ext_r12)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqUTRA_TDD_r12, reducedMeasPerformance_r12)), true)
} ASN_ENUM(ASN_NAME(CarrierFreqUTRA_TDD_r12, reducedMeasPerformance_r12));

struct ASN_NAME(CarrierFreqUTRA_TDD_r12) {
	ASN_NAME(ARFCN_ValueUTRA) carrierFreq_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqUTRA_TDD_r12), ASN_NAME(CellReselectionPriority), cellReselectionPriority_r12);
	ASN_NAME(ReselectionThreshold) threshX_High_r12;
	ASN_NAME(ReselectionThreshold) threshX_Low_r12;
	int8_t q_RxLevMin_r12; // OF (-60..-13)
	int8_t p_MaxUTRA_r12; // OF (-50..33)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CarrierFreqUTRA_TDD_r12, reducedMeasPerformance_r12)), reducedMeasPerformance_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqUTRA_TDD_r12), ASN_NAME(CarrierFreqListUTRA_TDD_Ext_r12)); // SIZE (1..16)

struct ASN_NAME(SystemInformationBlockType6) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(CarrierFreqListUTRA_FDD), carrierFreqListUTRA_FDD);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(CarrierFreqListUTRA_TDD), carrierFreqListUTRA_TDD);
	ASN_NAME(T_Reselection) t_ReselectionUTRA;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(SpeedStateScaleFactors), t_ReselectionUTRA_SF);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType6), OCTET_STRING, lateNonCriticalExtension); // CONTAINING (ASN_NAME(SystemInformationBlockType6_v8h0_IEs))
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(CarrierFreqInfoUTRA_v1250), carrierFreqListUTRA_FDD_v1250); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(CarrierFreqInfoUTRA_v1250), carrierFreqListUTRA_TDD_v1250); // SIZE (1..16)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(CarrierFreqListUTRA_FDD_Ext_r12), carrierFreqListUTRA_FDD_Ext_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType6), ASN_NAME(CarrierFreqListUTRA_TDD_Ext_r12), carrierFreqListUTRA_TDD_Ext_r12);
};

typedef uint16_t ASN_NAME(ARFCN_ValueGERAN); // OF (0..1023)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandIndicatorGERAN)), dcs1800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandIndicatorGERAN)), pcs1900)
} ASN_ENUM(ASN_NAME(BandIndicatorGERAN));

typedef SIDL_DYNAMIC(ASN_NAME(ARFCN_ValueGERAN), ASN_NAME(ExplicitListOfARFCNs)); // SIZE (0..31)

struct ASN_NAME(CarrierFreqsGERAN, followingARFCNs, equallySpacedARFCNs) {
	uint8_t arfcn_Spacing; // OF (1..8)
	uint8_t numberOfFollowingARFCNs; // OF (0..31)
};

SIDL_UNION_ENUM(ASN_NAME(CarrierFreqsGERAN, followingARFCNs)) {
	ASN_ENUM_VAL(ASN_NAME(CarrierFreqsGERAN, followingARFCNs), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CarrierFreqsGERAN, followingARFCNs), explicitListOfARFCNs),
	ASN_ENUM_VAL(ASN_NAME(CarrierFreqsGERAN, followingARFCNs), equallySpacedARFCNs),
	ASN_ENUM_VAL(ASN_NAME(CarrierFreqsGERAN, followingARFCNs), variableBitMapOfARFCNs)
};
SIDL_UNION_BEGIN(ASN_NAME(CarrierFreqsGERAN, followingARFCNs)) {
	SIDL_UNION_CASE(ASN_NAME(CarrierFreqsGERAN, followingARFCNs)_explicitListOfARFCNs)
		ASN_NAME(ExplicitListOfARFCNs) explicitListOfARFCNs;
	SIDL_UNION_CASE(ASN_NAME(CarrierFreqsGERAN, followingARFCNs)_equallySpacedARFCNs)
		struct ASN_NAME(CarrierFreqsGERAN, followingARFCNs, equallySpacedARFCNs) equallySpacedARFCNs;
	SIDL_UNION_CASE(ASN_NAME(CarrierFreqsGERAN, followingARFCNs)_variableBitMapOfARFCNs)
		OCTET_STRING variableBitMapOfARFCNs; // SIZE (1..16)
} SIDL_UNION_END;

struct ASN_NAME(CarrierFreqsGERAN) {
	ASN_NAME(ARFCN_ValueGERAN) startingARFCN;
	ASN_ENUM(ASN_NAME(BandIndicatorGERAN)) bandIndicator;
	struct ASN_NAME(CarrierFreqsGERAN, followingARFCNs) followingARFCNs;
};

struct ASN_NAME(CarrierFreqsInfoGERAN, commonInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqsInfoGERAN, commonInfo), ASN_NAME(CellReselectionPriority), cellReselectionPriority);
	B8 ncc_Permitted; // SIZE (8)
	uint8_t q_RxLevMin; // OF (0..45)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqsInfoGERAN, commonInfo), uint8_t, p_MaxGERAN); // OF (0..39)
	ASN_NAME(ReselectionThreshold) threshX_High;
	ASN_NAME(ReselectionThreshold) threshX_Low;
};

struct ASN_NAME(CarrierFreqsInfoGERAN) {
	struct ASN_NAME(CarrierFreqsGERAN) carrierFreqs;
	struct ASN_NAME(CarrierFreqsInfoGERAN, commonInfo) commonInfo;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqsInfoGERAN), ASN_NAME(CarrierFreqsInfoListGERAN)); // SIZE (1..16)

struct ASN_NAME(SystemInformationBlockType7) {
	ASN_NAME(T_Reselection) t_ReselectionGERAN;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType7), ASN_NAME(SpeedStateScaleFactors), t_ReselectionGERAN_SF);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType7), ASN_NAME(CarrierFreqsInfoListGERAN), carrierFreqsInfoList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType7), OCTET_STRING, lateNonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime)) {
	ASN_ENUM_VAL(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime), synchronousSystemTime),
	ASN_ENUM_VAL(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime), asynchronousSystemTime)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime)) {
	SIDL_UNION_CASE(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime)_synchronousSystemTime)
		B39 synchronousSystemTime; // SIZE (39)
	SIDL_UNION_CASE(ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime)_asynchronousSystemTime)
		B49 asynchronousSystemTime; // SIZE (49)
} SIDL_UNION_END;

struct ASN_NAME(SystemTimeInfoCDMA2000) {
	bool cdma_EUTRA_Synchronisation;
	struct ASN_NAME(SystemTimeInfoCDMA2000, cdma_SystemTime) cdma_SystemTime;
};

typedef uint8_t ASN_NAME(PreRegistrationZoneIdHRPD); // OF (0..255)

typedef SIDL_DYNAMIC(ASN_NAME(PreRegistrationZoneIdHRPD), ASN_NAME(SecondaryPreRegistrationZoneIdListHRPD)); // SIZE (1..2)

struct ASN_NAME(PreRegistrationInfoHRPD) {
	bool preRegistrationAllowed;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PreRegistrationInfoHRPD), ASN_NAME(PreRegistrationZoneIdHRPD), preRegistrationZoneId);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PreRegistrationInfoHRPD), ASN_NAME(SecondaryPreRegistrationZoneIdListHRPD), secondaryPreRegistrationZoneIdList);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc18_v9a0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc19_v9a0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc20_v9a0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), bc21_v9a0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(BandclassCDMA2000)), spare1)
} ASN_ENUM(ASN_NAME(BandclassCDMA2000));

struct ASN_NAME(BandClassInfoCDMA2000) {
	ASN_ENUM(ASN_NAME(BandclassCDMA2000)) bandClass;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(BandClassInfoCDMA2000), ASN_NAME(CellReselectionPriority), cellReselectionPriority);
	uint8_t threshX_High; // OF (0..63)
	uint8_t threshX_Low; // OF (0..63)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(BandClassInfoCDMA2000), ASN_NAME(BandClassListCDMA2000)); // SIZE (1..32)

typedef uint16_t ASN_NAME(ARFCN_ValueCDMA2000); // OF (0..2047)

typedef uint16_t ASN_NAME(PhysCellIdCDMA2000); // OF (0..511)

typedef SIDL_DYNAMIC(ASN_NAME(PhysCellIdCDMA2000), ASN_NAME(PhysCellIdListCDMA2000)); // SIZE (1..16)

struct ASN_NAME(NeighCellsPerBandclassCDMA2000) {
	ASN_NAME(ARFCN_ValueCDMA2000) arfcn;
	ASN_NAME(PhysCellIdListCDMA2000) physCellIdList;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(NeighCellsPerBandclassCDMA2000), ASN_NAME(NeighCellsPerBandclassListCDMA2000)); // SIZE (1..16)

struct ASN_NAME(NeighCellCDMA2000) {
	ASN_ENUM(ASN_NAME(BandclassCDMA2000)) bandClass;
	ASN_NAME(NeighCellsPerBandclassListCDMA2000) neighCellsPerFreqList;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(NeighCellCDMA2000), ASN_NAME(NeighCellListCDMA2000)); // SIZE (1..16)

struct ASN_NAME(CellReselectionParametersCDMA2000) {
	ASN_NAME(BandClassListCDMA2000) bandClassList;
	ASN_NAME(NeighCellListCDMA2000) neighCellList;
	ASN_NAME(T_Reselection) t_ReselectionCDMA2000;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CellReselectionParametersCDMA2000), ASN_NAME(SpeedStateScaleFactors), t_ReselectionCDMA2000_SF);
};

struct ASN_NAME(SystemInformationBlockType8, parametersHRPD) {
	struct ASN_NAME(PreRegistrationInfoHRPD) preRegistrationInfoHRPD;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8, parametersHRPD), ASN_NAME(CellReselectionParametersCDMA2000), cellReselectionParametersHRPD);
};

struct ASN_NAME(CSFB_RegistrationParam1XRTT) {
	B15 sid; // SIZE (15)
	B16 nid; // SIZE (16)
	bool multipleSID;
	bool multipleNID;
	bool homeReg;
	bool foreignSIDReg;
	bool foreignNIDReg;
	bool parameterReg;
	bool powerUpReg;
	B7 registrationPeriod; // SIZE (7)
	B12 registrationZone; // SIZE (12)
	B3 totalZone; // SIZE (3)
	B3 zoneTimer; // SIZE (3)
};

struct ASN_NAME(SystemInformationBlockType8, parameters1XRTT) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8, parameters1XRTT), ASN_NAME(CSFB_RegistrationParam1XRTT), csfb_RegistrationParam1XRTT);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType8, parameters1XRTT), B42, longCodeState1XRTT); // SIZE (42)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8, parameters1XRTT), ASN_NAME(CellReselectionParametersCDMA2000), cellReselectionParameters1XRTT);
};

typedef SIDL_DYNAMIC(ASN_NAME(PhysCellIdCDMA2000), ASN_NAME(PhysCellIdListCDMA2000_v920)); // SIZE (0..24)

struct ASN_NAME(NeighCellsPerBandclassCDMA2000_v920) {
	ASN_NAME(PhysCellIdListCDMA2000_v920) physCellIdList_v920;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(NeighCellsPerBandclassCDMA2000_v920), ASN_NAME(NeighCellsPerBandclassListCDMA2000_v920)); // SIZE (1..16)

struct ASN_NAME(NeighCellCDMA2000_v920) {
	ASN_NAME(NeighCellsPerBandclassListCDMA2000_v920) neighCellsPerFreqList_v920;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(NeighCellCDMA2000_v920), ASN_NAME(NeighCellListCDMA2000_v920)); // SIZE (1..16)

struct ASN_NAME(CellReselectionParametersCDMA2000_v920) {
	ASN_NAME(NeighCellListCDMA2000_v920) neighCellList_v920;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSFB_RegistrationParam1XRTT_v920, powerDownReg_r9)), true)
} ASN_ENUM(ASN_NAME(CSFB_RegistrationParam1XRTT_v920, powerDownReg_r9));

struct ASN_NAME(CSFB_RegistrationParam1XRTT_v920) {
	ASN_ENUM(ASN_NAME(CSFB_RegistrationParam1XRTT_v920, powerDownReg_r9)) powerDownReg_r9;
};

struct ASN_NAME(AC_BarringConfig1XRTT_r9) {
	uint8_t ac_Barring0to9_r9; // OF (0..63)
	uint8_t ac_Barring10_r9; // OF (0..7)
	uint8_t ac_Barring11_r9; // OF (0..7)
	uint8_t ac_Barring12_r9; // OF (0..7)
	uint8_t ac_Barring13_r9; // OF (0..7)
	uint8_t ac_Barring14_r9; // OF (0..7)
	uint8_t ac_Barring15_r9; // OF (0..7)
	uint8_t ac_BarringMsg_r9; // OF (0..7)
	uint8_t ac_BarringReg_r9; // OF (0..7)
	uint8_t ac_BarringEmg_r9; // OF (0..7)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType8, csfb_DualRxTxSupport_r10)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType8, csfb_DualRxTxSupport_r10));

SIDL_UNION_ENUM(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11)) {
	ASN_ENUM_VAL(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11), explicitValue),
	ASN_ENUM_VAL(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11), defaultValue)
};
SIDL_UNION_BEGIN(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11)) {
	SIDL_UNION_CASE(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11)_explicitValue)
		struct ASN_NAME(SystemTimeInfoCDMA2000) explicitValue;
	SIDL_UNION_CASE(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11)_defaultValue)
		Null defaultValue;
} SIDL_UNION_END;

struct ASN_NAME(NeighCellsPerBandclassCDMA2000_r11) {
	ASN_NAME(ARFCN_ValueCDMA2000) arfcn;
	SIDL_DYNAMIC(ASN_NAME(PhysCellIdCDMA2000), physCellIdList_r11); // SIZE (1..40)
};

struct ASN_NAME(NeighCellCDMA2000_r11) {
	ASN_ENUM(ASN_NAME(BandclassCDMA2000)) bandClass;
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(NeighCellCDMA2000_r11), ASN_NAME(NeighCellsPerBandclassCDMA2000_r11), neighFreqInfoList_r11); // SIZE (1..16)
};

struct ASN_NAME(CellReselectionParametersCDMA2000_r11) {
	ASN_NAME(BandClassListCDMA2000) bandClassList;
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(CellReselectionParametersCDMA2000_r11), ASN_NAME(NeighCellCDMA2000_r11), neighCellList_r11); // SIZE (1..16)
	ASN_NAME(T_Reselection) t_ReselectionCDMA2000;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CellReselectionParametersCDMA2000_r11), ASN_NAME(SpeedStateScaleFactors), t_ReselectionCDMA2000_SF);
};

struct ASN_NAME(ParametersCDMA2000_r11, parametersHRPD_r11) {
	struct ASN_NAME(PreRegistrationInfoHRPD) preRegistrationInfoHRPD_r11;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parametersHRPD_r11), ASN_NAME(CellReselectionParametersCDMA2000_r11), cellReselectionParametersHRPD_r11);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11, csfb_DualRxTxSupport_r11)), true)
} ASN_ENUM(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11, csfb_DualRxTxSupport_r11));

struct ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), ASN_NAME(CSFB_RegistrationParam1XRTT), csfb_RegistrationParam1XRTT_r11);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), ASN_NAME(CSFB_RegistrationParam1XRTT_v920), csfb_RegistrationParam1XRTT_Ext_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), B42, longCodeState1XRTT_r11); // SIZE (42)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), ASN_NAME(CellReselectionParametersCDMA2000_r11), cellReselectionParameters1XRTT_r11);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), ASN_NAME(AC_BarringConfig1XRTT_r9), ac_BarringConfig1XRTT_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), bool, csfb_SupportForDualRxUEs_r11);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11, csfb_DualRxTxSupport_r11)), csfb_DualRxTxSupport_r11);
};

struct ASN_NAME(ParametersCDMA2000_r11) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(ParametersCDMA2000_r11, systemTimeInfo_r11), systemTimeInfo_r11);
	uint8_t searchWindowSize_r11; // OF (0..15)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(ParametersCDMA2000_r11, parametersHRPD_r11), parametersHRPD_r11);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(ParametersCDMA2000_r11, parameters1XRTT_r11), parameters1XRTT_r11);
};

SIDL_UNION_ENUM(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11)) {
	ASN_ENUM_VAL(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11), explicitValue),
	ASN_ENUM_VAL(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11), defaultValue)
};
SIDL_UNION_BEGIN(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11)) {
	SIDL_UNION_CASE(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11)_explicitValue)
		struct ASN_NAME(ParametersCDMA2000_r11) explicitValue;
	SIDL_UNION_CASE(ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11)_defaultValue)
		Null defaultValue;
} SIDL_UNION_END;

struct ASN_NAME(SIB8_PerPLMN_r11) {
	uint8_t plmn_Identity_r11; // OF (1..6)
	struct ASN_NAME(SIB8_PerPLMN_r11, parametersCDMA2000_r11) parametersCDMA2000_r11;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SIB8_PerPLMN_r11), ASN_NAME(SIB8_PerPLMN_List_r11)); // SIZE (1..6)

struct ASN_NAME(SystemInformationBlockType8) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8), ASN_NAME(SystemTimeInfoCDMA2000), systemTimeInfo);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType8), uint8_t, searchWindowSize); // OF (0..15)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType8, parametersHRPD), parametersHRPD);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType8, parameters1XRTT), parameters1XRTT);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType8), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType8), bool, csfb_SupportForDualRxUEs_r9);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8), ASN_NAME(CellReselectionParametersCDMA2000_v920), cellReselectionParametersHRPD_v920);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8), ASN_NAME(CellReselectionParametersCDMA2000_v920), cellReselectionParameters1XRTT_v920);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8), ASN_NAME(CSFB_RegistrationParam1XRTT_v920), csfb_RegistrationParam1XRTT_v920);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType8), ASN_NAME(AC_BarringConfig1XRTT_r9), ac_BarringConfig1XRTT_r9);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType8, csfb_DualRxTxSupport_r10)), csfb_DualRxTxSupport_r10);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType8), ASN_NAME(SIB8_PerPLMN_List_r11), sib8_PerPLMN_List_r11);
};

struct ASN_NAME(SystemInformationBlockType9) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType9), OCTET_STRING, hnb_Name); // SIZE (1..48)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType9), OCTET_STRING, lateNonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType10) {
	B16 messageIdentifier; // SIZE (16)
	B16 serialNumber; // SIZE (16)
	O2 warningType; // SIZE (2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType10), O50, dummy); // SIZE (50)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType10), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType11, warningMessageSegmentType)), notLastSegment),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType11, warningMessageSegmentType)), lastSegment)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType11, warningMessageSegmentType));

struct ASN_NAME(SystemInformationBlockType11) {
	B16 messageIdentifier; // SIZE (16)
	B16 serialNumber; // SIZE (16)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType11, warningMessageSegmentType)) warningMessageSegmentType;
	uint8_t warningMessageSegmentNumber; // OF (0..63)
	OCTET_STRING warningMessageSegment;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType11), O1, dataCodingScheme); // SIZE (1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType11), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType12_r9, warningMessageSegmentType_r9)), notLastSegment),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType12_r9, warningMessageSegmentType_r9)), lastSegment)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType12_r9, warningMessageSegmentType_r9));

struct ASN_NAME(SystemInformationBlockType12_r9) {
	B16 messageIdentifier_r9; // SIZE (16)
	B16 serialNumber_r9; // SIZE (16)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType12_r9, warningMessageSegmentType_r9)) warningMessageSegmentType_r9;
	uint8_t warningMessageSegmentNumber_r9; // OF (0..63)
	OCTET_STRING warningMessageSegment_r9;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType12_r9), O1, dataCodingScheme_r9); // SIZE (1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType12_r9), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType12_r9), OCTET_STRING, warningAreaCoordinatesSegment_r15);
};

typedef uint8_t ASN_NAME(MBSFN_AreaId_r12); // OF (0..255)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, non_MBSFNregionLength)), s1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, non_MBSFNregionLength)), s2)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, non_MBSFNregionLength));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_RepetitionPeriod_r9)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_RepetitionPeriod_r9)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_RepetitionPeriod_r9)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_RepetitionPeriod_r9)), rf256)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_RepetitionPeriod_r9));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_ModificationPeriod_r9)), rf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_ModificationPeriod_r9)), rf1024)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_ModificationPeriod_r9));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, signallingMCS_r9)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, signallingMCS_r9)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, signallingMCS_r9)), n13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, signallingMCS_r9)), n19)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, signallingMCS_r9));

struct ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9) {
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_RepetitionPeriod_r9)) mcch_RepetitionPeriod_r9;
	uint8_t mcch_Offset_r9; // OF (0..10)
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, mcch_ModificationPeriod_r9)) mcch_ModificationPeriod_r9;
	B6 sf_AllocInfo_r9; // SIZE (6)
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9, signallingMCS_r9)) signallingMCS_r9;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430)), rf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430)), rf16)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), spare7)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430));

struct ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_RepetitionPeriod_v1430)), mcch_RepetitionPeriod_v1430);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14, mcch_ModificationPeriod_v1430)), mcch_ModificationPeriod_v1430);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, subcarrierSpacingMBMS_r14)), kHz7dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, subcarrierSpacingMBMS_r14)), kHz1dot25)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, subcarrierSpacingMBMS_r14));

struct ASN_NAME(MBSFN_AreaInfo_r9) {
	ASN_NAME(MBSFN_AreaId_r12) mbsfn_AreaId_r9;
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, non_MBSFNregionLength)) non_MBSFNregionLength;
	uint8_t notificationIndicator_r9; // OF (0..7)
	struct ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r9) mcch_Config_r9;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(MBSFN_AreaInfo_r9, mcch_Config_r14), mcch_Config_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r9, subcarrierSpacingMBMS_r14)), subcarrierSpacingMBMS_r14);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBSFN_AreaInfo_r9), ASN_NAME(MBSFN_AreaInfoList_r9)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBMS_NotificationConfig_r9, notificationRepetitionCoeff_r9)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBMS_NotificationConfig_r9, notificationRepetitionCoeff_r9)), n4)
} ASN_ENUM(ASN_NAME(MBMS_NotificationConfig_r9, notificationRepetitionCoeff_r9));

struct ASN_NAME(MBMS_NotificationConfig_r9) {
	ASN_ENUM(ASN_NAME(MBMS_NotificationConfig_r9, notificationRepetitionCoeff_r9)) notificationRepetitionCoeff_r9;
	uint8_t notificationOffset_r9; // OF (0..10)
	uint8_t notificationSF_Index_r9; // OF (1..6)
};

struct ASN_NAME(MBMS_NotificationConfig_v1430) {
	uint8_t notificationSF_Index_v1430; // OF (7..10)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)), spare1)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), rf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)), spare1)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, signallingMCS_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, signallingMCS_r16)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, signallingMCS_r16)), n13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, signallingMCS_r16)), n19)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, signallingMCS_r16));

struct ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16) {
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_RepetitionPeriod_r16)) mcch_RepetitionPeriod_r16;
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, mcch_ModificationPeriod_r16)) mcch_ModificationPeriod_r16;
	uint8_t mcch_Offset_r16; // OF (0..10)
	B10 sf_AllocInfo_r16; // SIZE (10)
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16, signallingMCS_r16)) signallingMCS_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), kHz7dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), kHz2dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), kHz1dot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), kHz0dot37),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)), spare1)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, timeSeparation_r16)), sl2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, timeSeparation_r16)), sl4)
} ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, timeSeparation_r16));

struct ASN_NAME(MBSFN_AreaInfo_r16) {
	ASN_NAME(MBSFN_AreaId_r12) mbsfn_AreaId_r16;
	uint8_t notificationIndicator_r16; // OF (0..7)
	struct ASN_NAME(MBSFN_AreaInfo_r16, mcch_Config_r16) mcch_Config_r16;
	ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, subcarrierSpacingMBMS_r16)) subcarrierSpacingMBMS_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(MBSFN_AreaInfo_r16, timeSeparation_r16)), timeSeparation_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBSFN_AreaInfo_r16), ASN_NAME(MBSFN_AreaInfoList_r16)); // SIZE (1..8)

struct ASN_NAME(SystemInformationBlockType13_r9) {
	ASN_NAME(MBSFN_AreaInfoList_r9) mbsfn_AreaInfoList_r9;
	struct ASN_NAME(MBMS_NotificationConfig_r9) notificationConfig_r9;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType13_r9), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType13_r9), ASN_NAME(MBMS_NotificationConfig_v1430), notificationConfig_v1430);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType13_r9), ASN_NAME(MBSFN_AreaInfoList_r16), mbsfn_AreaInfoList_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EAB_Config_r11, eab_Category_r11)), a),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EAB_Config_r11, eab_Category_r11)), b),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EAB_Config_r11, eab_Category_r11)), c)
} ASN_ENUM(ASN_NAME(EAB_Config_r11, eab_Category_r11));

struct ASN_NAME(EAB_Config_r11) {
	ASN_ENUM(ASN_NAME(EAB_Config_r11, eab_Category_r11)) eab_Category_r11;
	B10 eab_BarringBitmap_r11; // SIZE (10)
};

struct ASN_NAME(EAB_ConfigPLMN_r11) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(EAB_ConfigPLMN_r11), ASN_NAME(EAB_Config_r11), eab_Config_r11);
};

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11), eab_Common_r11),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11), eab_PerPLMN_List_r11)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11)_eab_Common_r11)
		struct ASN_NAME(EAB_Config_r11) eab_Common_r11;
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11)_eab_PerPLMN_List_r11)
		SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11), ASN_NAME(EAB_ConfigPLMN_r11), eab_PerPLMN_List_r11); // SIZE (1..6)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_PerRSRP_r15)), thresh0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_PerRSRP_r15)), thresh1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_PerRSRP_r15)), thresh2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_PerRSRP_r15)), thresh3)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_PerRSRP_r15));

struct ASN_NAME(SystemInformationBlockType14_r11) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType14_r11, eab_Param_r11), eab_Param_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType14_r11), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType14_r11, eab_PerRSRP_r15)), eab_PerRSRP_r15);
};

typedef uint16_t ASN_NAME(MBMS_SAI_r11); // OF (0..65535)

typedef SIDL_DYNAMIC(ASN_NAME(MBMS_SAI_r11), ASN_NAME(MBMS_SAI_List_r11)); // SIZE (1..64)

struct ASN_NAME(MBMS_SAI_InterFreq_r11) {
	ASN_NAME(ARFCN_ValueEUTRA_r9) dl_CarrierFreq_r11;
	ASN_NAME(MBMS_SAI_List_r11) mbms_SAI_List_r11;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBMS_SAI_InterFreq_r11), ASN_NAME(MBMS_SAI_InterFreqList_r11)); // SIZE (1..8)

struct ASN_NAME(MBMS_SAI_InterFreq_v1140) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MBMS_SAI_InterFreq_v1140), ASN_NAME(MultiBandInfoList_r11), multiBandInfoList_r11);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBMS_SAI_InterFreq_v1140), ASN_NAME(MBMS_SAI_InterFreqList_v1140)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBMS_CarrierType_r14, carrierType_r14)), mbms),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBMS_CarrierType_r14, carrierType_r14)), fembmsMixed),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MBMS_CarrierType_r14, carrierType_r14)), fembmsDedicated)
} ASN_ENUM(ASN_NAME(MBMS_CarrierType_r14, carrierType_r14));

struct ASN_NAME(MBMS_CarrierType_r14) {
	ASN_ENUM(ASN_NAME(MBMS_CarrierType_r14, carrierType_r14)) carrierType_r14;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MBMS_CarrierType_r14), uint8_t, frameOffset_r14); // OF (0..3)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(MBMS_CarrierType_r14), ASN_NAME(MBMS_InterFreqCarrierTypeList_r14)); // SIZE (1..8)

struct ASN_NAME(SystemInformationBlockType15_r11) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType15_r11), ASN_NAME(MBMS_SAI_List_r11), mbms_SAI_IntraFreq_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType15_r11), ASN_NAME(MBMS_SAI_InterFreqList_r11), mbms_SAI_InterFreqList_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType15_r11), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType15_r11), ASN_NAME(MBMS_SAI_InterFreqList_v1140), mbms_SAI_InterFreqList_v1140);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType15_r11), ASN_NAME(MBMS_CarrierType_r14), mbms_IntraFreqCarrierType_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType15_r11), ASN_NAME(MBMS_InterFreqCarrierTypeList_r14), mbms_InterFreqCarrierTypeList_r14);
};

struct ASN_NAME(SystemInformationBlockType16_r11, timeInfo_r11) {
	uint64_t timeInfoUTC_r11; // OF (0..549755813887)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType16_r11, timeInfo_r11), B2, dayLightSavingTime_r11); // SIZE (2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType16_r11, timeInfo_r11), int16_t, leapSeconds_r11); // OF (-127..128)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType16_r11, timeInfo_r11), int8_t, localTimeOffset_r11); // OF (-63..64)
};

struct ASN_NAME(ReferenceTime_r15) {
	uint32_t refDays_r15; // OF (0..72999)
	uint32_t refSeconds_r15; // OF (0..86399)
	uint16_t refMilliSeconds_r15; // OF (0..999)
	uint16_t refQuarterMicroSeconds_r15; // OF (0..3999)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TimeReferenceInfo_r15, timeInfoType_r15)), localClock)
} ASN_ENUM(ASN_NAME(TimeReferenceInfo_r15, timeInfoType_r15));

struct ASN_NAME(TimeReferenceInfo_r15) {
	struct ASN_NAME(ReferenceTime_r15) time_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(TimeReferenceInfo_r15), uint8_t, uncertainty_r15); // OF (0..12)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(TimeReferenceInfo_r15, timeInfoType_r15)), timeInfoType_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(TimeReferenceInfo_r15), uint16_t, referenceSFN_r15); // OF (0..1023)
};

struct ASN_NAME(SystemInformationBlockType16_r11) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType16_r11, timeInfo_r11), timeInfo_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType16_r11), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType16_r11), ASN_NAME(TimeReferenceInfo_r15), timeReferenceInfo_r15);
};

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRP_r12) {
	ASN_NAME(RSRP_Range) thresholdRSRP_Low_r12;
	ASN_NAME(RSRP_Range) thresholdRSRP_High_r12;
};

typedef uint8_t ASN_NAME(RSRQ_Range); // OF (0..34)

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_r12) {
	ASN_NAME(RSRQ_Range) thresholdRSRQ_Low_r12;
	ASN_NAME(RSRQ_Range) thresholdRSRQ_High_r12;
};

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_OnAllSymbolsWithWB_r12) {
	ASN_NAME(RSRQ_Range) thresholdRSRQ_OnAllSymbolsWithWB_Low_r12;
	ASN_NAME(RSRQ_Range) thresholdRSRQ_OnAllSymbolsWithWB_High_r12;
};

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_OnAllSymbols_r12) {
	ASN_NAME(RSRQ_Range) thresholdRSRQ_OnAllSymbolsLow_r12;
	ASN_NAME(RSRQ_Range) thresholdRSRQ_OnAllSymbolsHigh_r12;
};

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_WB_r12) {
	ASN_NAME(RSRQ_Range) thresholdRSRQ_WB_Low_r12;
	ASN_NAME(RSRQ_Range) thresholdRSRQ_WB_High_r12;
};

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdChannelUtilization_r12) {
	uint8_t thresholdChannelUtilizationLow_r12; // OF (0..255)
	uint8_t thresholdChannelUtilizationHigh_r12; // OF (0..255)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r16384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r32768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r65536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r131072),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r262144),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r524288),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r1048576),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r2097152),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r4194304),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r8388608),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r16777216),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r33554432),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r67108864),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r134217728),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r268435456),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r536870912),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r1073741824),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r2147483648),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)), r4294967296)
} ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12));

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdBackhaul_Bandwidth_r12) {
	ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)) thresholdBackhaulDL_BandwidthLow_r12;
	ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)) thresholdBackhaulDL_BandwidthHigh_r12;
	ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)) thresholdBackhaulUL_BandwidthLow_r12;
	ASN_ENUM(ASN_NAME(WLAN_backhaulRate_r12)) thresholdBackhaulUL_BandwidthHigh_r12;
};

struct ASN_NAME(WLAN_OffloadConfig_r12, thresholdWLAN_RSSI_r12) {
	uint8_t thresholdWLAN_RSSI_Low_r12; // OF (0..255)
	uint8_t thresholdWLAN_RSSI_High_r12; // OF (0..255)
};

struct ASN_NAME(WLAN_OffloadConfig_r12) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRP_r12), thresholdRSRP_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_r12), thresholdRSRQ_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_OnAllSymbolsWithWB_r12), thresholdRSRQ_OnAllSymbolsWithWB_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_OnAllSymbols_r12), thresholdRSRQ_OnAllSymbols_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdRSRQ_WB_r12), thresholdRSRQ_WB_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdChannelUtilization_r12), thresholdChannelUtilization_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdBackhaul_Bandwidth_r12), thresholdBackhaul_Bandwidth_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(WLAN_OffloadConfig_r12, thresholdWLAN_RSSI_r12), thresholdWLAN_RSSI_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(WLAN_OffloadConfig_r12), B16, offloadPreferenceIndicator_r12); // SIZE (16)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(WLAN_OffloadConfig_r12), ASN_NAME(T_Reselection), t_SteeringWLAN_r12);
};

struct ASN_NAME(WLAN_Identifiers_r12) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(WLAN_Identifiers_r12), OCTET_STRING, ssid_r12); // SIZE (1..32)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(WLAN_Identifiers_r12), O6, bssid_r12); // SIZE (6)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(WLAN_Identifiers_r12), O6, hessid_r12); // SIZE (6)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(WLAN_Identifiers_r12), ASN_NAME(WLAN_Id_List_r12)); // SIZE (1..16)

struct ASN_NAME(WLAN_OffloadInfoPerPLMN_r12) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(WLAN_OffloadInfoPerPLMN_r12), ASN_NAME(WLAN_OffloadConfig_r12), wlan_OffloadConfigCommon_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(WLAN_OffloadInfoPerPLMN_r12), ASN_NAME(WLAN_Id_List_r12), wlan_Id_List_r12);
};

struct ASN_NAME(SystemInformationBlockType17_r12) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType17_r12), ASN_NAME(WLAN_OffloadInfoPerPLMN_r12), wlan_OffloadInfoPerPLMN_List_r12); // SIZE (1..6)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType17_r12), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CP_Len_r12)), normal),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CP_Len_r12)), extended)
} ASN_ENUM(ASN_NAME(SL_CP_Len_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), sf320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)), spare)
} ASN_ENUM(ASN_NAME(SL_PeriodComm_r12));

SIDL_UNION_ENUM(ASN_NAME(SL_OffsetIndicator_r12)) {
	ASN_ENUM_VAL(ASN_NAME(SL_OffsetIndicator_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_OffsetIndicator_r12), small_r12),
	ASN_ENUM_VAL(ASN_NAME(SL_OffsetIndicator_r12), large_r12)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_OffsetIndicator_r12)) {
	SIDL_UNION_CASE(ASN_NAME(SL_OffsetIndicator_r12)_small_r12)
		uint16_t small_r12; // OF (0..319)
	SIDL_UNION_CASE(ASN_NAME(SL_OffsetIndicator_r12)_large_r12)
		uint16_t large_r12; // OF (0..10239)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(SubframeBitmapSL_r12)) {
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs4_r12),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs8_r12),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs12_r12),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs16_r12),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs30_r12),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs40_r12),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r12), bs42_r12)
};
SIDL_UNION_BEGIN(ASN_NAME(SubframeBitmapSL_r12)) {
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs4_r12)
		B4 bs4_r12; // SIZE (4)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs8_r12)
		B8 bs8_r12; // SIZE (8)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs12_r12)
		B12 bs12_r12; // SIZE (12)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs16_r12)
		B16 bs16_r12; // SIZE (16)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs30_r12)
		B30 bs30_r12; // SIZE (30)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs40_r12)
		B40 bs40_r12; // SIZE (40)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r12)_bs42_r12)
		B42 bs42_r12; // SIZE (42)
} SIDL_UNION_END;

struct ASN_NAME(SL_TF_ResourceConfig_r12) {
	uint8_t prb_Num_r12; // OF (1..100)
	uint8_t prb_Start_r12; // OF (0..99)
	uint8_t prb_End_r12; // OF (0..99)
	struct ASN_NAME(SL_OffsetIndicator_r12) offsetIndicator_r12;
	struct ASN_NAME(SubframeBitmapSL_r12) subframeBitmap_r12;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_HoppingConfigComm_r12, numSubbands_r12)), ns1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_HoppingConfigComm_r12, numSubbands_r12)), ns2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_HoppingConfigComm_r12, numSubbands_r12)), ns4)
} ASN_ENUM(ASN_NAME(SL_HoppingConfigComm_r12, numSubbands_r12));

struct ASN_NAME(SL_HoppingConfigComm_r12) {
	uint16_t hoppingParameter_r12; // OF (0..504)
	ASN_ENUM(ASN_NAME(SL_HoppingConfigComm_r12, numSubbands_r12)) numSubbands_r12;
	uint8_t rb_Offset_r12; // OF (0..110)
};

typedef BIT_STRING ASN_NAME(SL_TRPT_Subset_r12); // SIZE (3..5)

struct ASN_NAME(SL_CommResourcePool_r12, ue_SelectedResourceConfig_r12) {
	struct ASN_NAME(SL_TF_ResourceConfig_r12) data_TF_ResourceConfig_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePool_r12, ue_SelectedResourceConfig_r12), ASN_NAME(SL_TRPT_Subset_r12), trpt_Subset_r12);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)), sa6)
} ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)), ssp8)
} ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns));

struct ASN_NAME(TDD_Config) {
	ASN_ENUM(ASN_NAME(TDD_Config, subframeAssignment)) subframeAssignment;
	ASN_ENUM(ASN_NAME(TDD_Config, specialSubframePatterns)) specialSubframePatterns;
};

struct ASN_NAME(SL_CommResourcePool_r12, rxParametersNCell_r12) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CommResourcePool_r12, rxParametersNCell_r12), ASN_NAME(TDD_Config), tdd_Config_r12);
	uint8_t syncConfigIndex_r12; // OF (0..15)
};

typedef int8_t ASN_NAME(P0_SL_r12); // OF (-126..31)

struct ASN_NAME(SL_TxParameters_r12) {
	ASN_ENUM(ASN_NAME(Alpha_r12)) alpha_r12;
	ASN_NAME(P0_SL_r12) p0_r12;
};

struct ASN_NAME(SL_CommResourcePool_r12, txParameters_r12) {
	struct ASN_NAME(SL_TxParameters_r12) sc_TxParameters_r12;
	struct ASN_NAME(SL_TxParameters_r12) dataTxParameters_r12;
};

typedef uint8_t ASN_NAME(SL_Priority_r13); // OF (1..8)

typedef SIDL_DYNAMIC(ASN_NAME(SL_Priority_r13), ASN_NAME(SL_PriorityList_r13)); // SIZE (1..8)

struct ASN_NAME(SL_CommResourcePool_r12) {
	ASN_ENUM(ASN_NAME(SL_CP_Len_r12)) sc_CP_Len_r12;
	ASN_ENUM(ASN_NAME(SL_PeriodComm_r12)) sc_Period_r12;
	struct ASN_NAME(SL_TF_ResourceConfig_r12) sc_TF_ResourceConfig_r12;
	ASN_ENUM(ASN_NAME(SL_CP_Len_r12)) data_CP_Len_r12;
	struct ASN_NAME(SL_HoppingConfigComm_r12) dataHoppingConfig_r12;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_CommResourcePool_r12, ue_SelectedResourceConfig_r12), ue_SelectedResourceConfig_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_CommResourcePool_r12, rxParametersNCell_r12), rxParametersNCell_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_CommResourcePool_r12, txParameters_r12), txParameters_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePool_r12), ASN_NAME(SL_PriorityList_r13), priorityList_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CommResourcePool_r12), ASN_NAME(SL_CommRxPoolList_r12)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CommResourcePool_r12), ASN_NAME(SL_CommTxPoolList_r12)); // SIZE (1..4)

typedef uint8_t ASN_NAME(SL_OffsetIndicatorSync_r12); // OF (0..39)

typedef uint8_t ASN_NAME(SLSSID_r12); // OF (0..167)

typedef uint8_t ASN_NAME(RSRP_RangeSL_r12); // OF (0..13)

struct ASN_NAME(SL_SyncConfig_r12, txParameters_r12) {
	struct ASN_NAME(SL_TxParameters_r12) syncTxParameters_r12;
	ASN_NAME(RSRP_RangeSL_r12) syncTxThreshIC_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfig_r12, txParameters_r12), B19, syncInfoReserved_r12); // SIZE (19)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, rxParamsNCell_r12, discSyncWindow_r12)), w1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, rxParamsNCell_r12, discSyncWindow_r12)), w2)
} ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, rxParamsNCell_r12, discSyncWindow_r12));

struct ASN_NAME(SL_SyncConfig_r12, rxParamsNCell_r12) {
	ASN_NAME(PhysCellId) physCellId_r12;
	ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, rxParamsNCell_r12, discSyncWindow_r12)) discSyncWindow_r12;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, syncTxPeriodic_r13)), true)
} ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, syncTxPeriodic_r13));

typedef uint8_t ASN_NAME(SL_OffsetIndicatorSync_v1430); // OF (40..159)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, gnss_Sync_r14)), true)
} ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, gnss_Sync_r14));

typedef uint8_t ASN_NAME(SL_OffsetIndicatorSync_r14); // OF (0..159)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, slss_TxDisabled_r15)), true)
} ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, slss_TxDisabled_r15));

struct ASN_NAME(SL_SyncConfig_r12) {
	ASN_ENUM(ASN_NAME(SL_CP_Len_r12)) syncCP_Len_r12;
	ASN_NAME(SL_OffsetIndicatorSync_r12) syncOffsetIndicator_r12;
	ASN_NAME(SLSSID_r12) slssid_r12;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_SyncConfig_r12, txParameters_r12), txParameters_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_SyncConfig_r12, rxParamsNCell_r12), rxParamsNCell_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, syncTxPeriodic_r13)), syncTxPeriodic_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfig_r12), ASN_NAME(SL_OffsetIndicatorSync_v1430), syncOffsetIndicator_v1430);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, gnss_Sync_r14)), gnss_Sync_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfig_r12), ASN_NAME(SL_OffsetIndicatorSync_r14), syncOffsetIndicator2_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfig_r12), ASN_NAME(SL_OffsetIndicatorSync_r14), syncOffsetIndicator3_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncConfig_r12, slss_TxDisabled_r15)), slss_TxDisabled_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_SyncConfig_r12), ASN_NAME(SL_SyncConfigList_r12)); // SIZE (1..16)

struct ASN_NAME(SystemInformationBlockType18_r12, commConfig_r12) {
	ASN_NAME(SL_CommRxPoolList_r12) commRxPool_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType18_r12, commConfig_r12), ASN_NAME(SL_CommTxPoolList_r12), commTxPoolNormalCommon_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType18_r12, commConfig_r12), ASN_NAME(SL_CommTxPoolList_r12), commTxPoolExceptional_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType18_r12, commConfig_r12), ASN_NAME(SL_SyncConfigList_r12), commSyncConfig_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CommResourcePool_r12), ASN_NAME(SL_CommTxPoolListExt_r13)); // SIZE (1..4)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType18_r12, commTxResourceUC_ReqAllowed_r13)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType18_r12, commTxResourceUC_ReqAllowed_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType18_r12, commTxAllowRelayCommon_r13)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType18_r12, commTxAllowRelayCommon_r13));

struct ASN_NAME(SystemInformationBlockType18_r12) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType18_r12, commConfig_r12), commConfig_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType18_r12), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType18_r12), ASN_NAME(SL_CommTxPoolListExt_r13), commTxPoolNormalCommonExt_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType18_r12, commTxResourceUC_ReqAllowed_r13)), commTxResourceUC_ReqAllowed_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType18_r12, commTxAllowRelayCommon_r13)), commTxAllowRelayCommon_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), rf16_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)), spare)
} ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12));

typedef uint8_t ASN_NAME(RSRP_RangeSL2_r12); // OF (0..7)

struct ASN_NAME(SL_PoolSelectionConfig_r12) {
	ASN_NAME(RSRP_RangeSL2_r12) threshLow_r12;
	ASN_NAME(RSRP_RangeSL2_r12) threshHigh_r12;
};

SIDL_UNION_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12)) {
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12), rsrpBased_r12),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12), random_r12)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12)) {
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12)_rsrpBased_r12)
		struct ASN_NAME(SL_PoolSelectionConfig_r12) rsrpBased_r12;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12)_random_r12)
		Null random_r12;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, txProbability_r12)), p25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, txProbability_r12)), p50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, txProbability_r12)), p75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, txProbability_r12)), p100)
} ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, txProbability_r12));

struct ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12) {
	struct ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, poolSelection_r12) poolSelection_r12;
	ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12, txProbability_r12)) txProbability_r12;
};

struct ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12) {
	struct ASN_NAME(SL_TxParameters_r12) txParametersGeneral_r12;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12, ue_SelectedResourceConfig_r12), ue_SelectedResourceConfig_r12);
};

struct ASN_NAME(SL_DiscResourcePool_r12, rxParameters_r12) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_DiscResourcePool_r12, rxParameters_r12), ASN_NAME(TDD_Config), tdd_Config_r12);
	uint8_t syncConfigIndex_r12; // OF (0..15)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)), rf28)
} ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup));

SIDL_UNION_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310)) {
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310), release),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310)) {
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310)_setup)
		ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310, setup)) setup;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC(ASN_NAME(PhysCellId), ASN_NAME(PhysCellIdList_r13)); // SIZE (1..16)

struct ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13, setup) {
	ASN_NAME(PhysCellIdList_r13) physCellId_r13;
};

SIDL_UNION_ENUM(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13)) {
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13), release),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13)) {
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13)_setup)
		struct ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config_v1130, specialSubframePatterns_v1130)), ssp7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config_v1130, specialSubframePatterns_v1130)), ssp9)
} ASN_ENUM(ASN_NAME(TDD_Config_v1130, specialSubframePatterns_v1130));

struct ASN_NAME(TDD_Config_v1130) {
	ASN_ENUM(ASN_NAME(TDD_Config_v1130, specialSubframePatterns_v1130)) specialSubframePatterns_v1130;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), n100)
} ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth));

struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo), ASN_NAME(ARFCN_ValueEUTRA), ul_CarrierFreq);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo, ul_Bandwidth)), ul_Bandwidth);
	ASN_NAME(AdditionalSpectrumEmission) additionalSpectrumEmission;
};

struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup) {
	ASN_NAME(PhysCellIdList_r13) physCellId_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup), ASN_NAME(P_Max), p_Max);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup), ASN_NAME(TDD_Config), tdd_Config_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup), ASN_NAME(TDD_Config_v1130), tdd_Config_v1130);
	struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup, freqInfo) freqInfo;
	int8_t referenceSignalPower; // OF (-60..50)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup), uint8_t, syncConfigIndex_r13); // OF (0..15)
};

SIDL_UNION_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13)) {
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13), release),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13)) {
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13)_setup)
		struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13, setup) setup;
} SIDL_UNION_END;

typedef uint16_t ASN_NAME(AdditionalSpectrumEmission_v10l0); // OF (33..288)

struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370, setup, freqInfo_v1370) {
	ASN_NAME(AdditionalSpectrumEmission_v10l0) additionalSpectrumEmission_v1370;
};

struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370, setup) {
	struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370, setup, freqInfo_v1370) freqInfo_v1370;
};

SIDL_UNION_ENUM(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370)) {
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370), release),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370)) {
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370)_setup)
		struct ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(SL_DiscResourcePool_r12) {
	ASN_ENUM(ASN_NAME(SL_CP_Len_r12)) cp_Len_r12;
	ASN_ENUM(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_r12)) discPeriod_r12;
	uint8_t numRetx_r12; // OF (0..3)
	uint8_t numRepetition_r12; // OF (1..50)
	struct ASN_NAME(SL_TF_ResourceConfig_r12) tf_ResourceConfig_r12;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, txParameters_r12), txParameters_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, rxParameters_r12), rxParameters_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, discPeriod_v1310), discPeriod_v1310);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, rxParamsAddNeighFreq_r13), rxParamsAddNeighFreq_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_r13), txParamsAddNeighFreq_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12, txParamsAddNeighFreq_v1370), txParamsAddNeighFreq_v1370);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12), ASN_NAME(SL_DiscRxPoolList_r12)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_DiscResourcePool_r12), ASN_NAME(SL_DiscTxPoolList_r12)); // SIZE (1..4)

struct ASN_NAME(SL_DiscTxPowerInfo_r12) {
	ASN_NAME(P_Max) discMaxTxPower_r12;
};

typedef SIDL_STATIC_ARRAY_OF_STRUCT(ASN_NAME(SL_DiscTxPowerInfo_r12), ASN_NAME(SL_DiscTxPowerInfoList_r12), 3); // SIZE (3)

struct ASN_NAME(SystemInformationBlockType19_r12, discConfig_r12) {
	ASN_NAME(SL_DiscRxPoolList_r12) discRxPool_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12, discConfig_r12), ASN_NAME(SL_DiscTxPoolList_r12), discTxPoolCommon_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12, discConfig_r12), ASN_NAME(SL_DiscTxPowerInfoList_r12), discTxPowerInfo_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12, discConfig_r12), ASN_NAME(SL_SyncConfigList_r12), discSyncConfig_r12);
};

typedef uint8_t ASN_NAME(MCC_MNC_Digit); // OF (0..9)

typedef SIDL_STATIC_ARRAY(ASN_NAME(MCC_MNC_Digit), ASN_NAME(MCC), 3); // SIZE (3)

typedef SIDL_DYNAMIC(ASN_NAME(MCC_MNC_Digit), ASN_NAME(MNC)); // SIZE (2..3)

struct ASN_NAME(PLMN_Identity) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PLMN_Identity), ASN_NAME(MCC), mcc);
	ASN_NAME(MNC) mnc;
};

SIDL_UNION_ENUM(ASN_NAME(PLMN_IdentityInfo2_r12)) {
	ASN_ENUM_VAL(ASN_NAME(PLMN_IdentityInfo2_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PLMN_IdentityInfo2_r12), plmn_Index_r12),
	ASN_ENUM_VAL(ASN_NAME(PLMN_IdentityInfo2_r12), plmnIdentity_r12)
};
SIDL_UNION_BEGIN(ASN_NAME(PLMN_IdentityInfo2_r12)) {
	SIDL_UNION_CASE(ASN_NAME(PLMN_IdentityInfo2_r12)_plmn_Index_r12)
		uint8_t plmn_Index_r12; // OF (1..6)
	SIDL_UNION_CASE(ASN_NAME(PLMN_IdentityInfo2_r12)_plmnIdentity_r12)
		struct ASN_NAME(PLMN_Identity) plmnIdentity_r12;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_IdentityInfo2_r12), ASN_NAME(PLMN_IdentityList4_r12)); // SIZE (1..6)

struct ASN_NAME(SL_CarrierFreqInfo_r12) {
	ASN_NAME(ARFCN_ValueEUTRA_r9) carrierFreq_r12;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CarrierFreqInfo_r12), ASN_NAME(PLMN_IdentityList4_r12), plmn_IdentityList_r12);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CarrierFreqInfo_r12), ASN_NAME(SL_CarrierFreqInfoList_r12)); // SIZE (1..8)

SIDL_UNION_ENUM(ASN_NAME(SL_DiscTxResourcesInterFreq_r13)) {
	ASN_ENUM_VAL(ASN_NAME(SL_DiscTxResourcesInterFreq_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscTxResourcesInterFreq_r13), acquireSI_FromCarrier_r13),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscTxResourcesInterFreq_r13), discTxPoolCommon_r13),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscTxResourcesInterFreq_r13), requestDedicated_r13),
	ASN_ENUM_VAL(ASN_NAME(SL_DiscTxResourcesInterFreq_r13), noTxOnCarrier_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_DiscTxResourcesInterFreq_r13)) {
	SIDL_UNION_CASE(ASN_NAME(SL_DiscTxResourcesInterFreq_r13)_acquireSI_FromCarrier_r13)
		Null acquireSI_FromCarrier_r13;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscTxResourcesInterFreq_r13)_discTxPoolCommon_r13)
		ASN_NAME(SL_DiscTxPoolList_r12) discTxPoolCommon_r13;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscTxResourcesInterFreq_r13)_requestDedicated_r13)
		Null requestDedicated_r13;
	SIDL_UNION_CASE(ASN_NAME(SL_DiscTxResourcesInterFreq_r13)_noTxOnCarrier_r13)
		Null noTxOnCarrier_r13;
} SIDL_UNION_END;

struct ASN_NAME(SL_ResourcesInterFreq_r13) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_ResourcesInterFreq_r13), ASN_NAME(SL_DiscRxPoolList_r12), discRxResourcesInterFreq_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_ResourcesInterFreq_r13), ASN_NAME(SL_DiscTxResourcesInterFreq_r13), discTxResourcesInterFreq_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigOtherInterFreq_r13, refCarrierCommon_r13)), pCell)
} ASN_ENUM(ASN_NAME(SL_DiscConfigOtherInterFreq_r13, refCarrierCommon_r13));

struct ASN_NAME(SL_SyncConfigNFreq_r13, asyncParameters_r13) {
	ASN_ENUM(ASN_NAME(SL_CP_Len_r12)) syncCP_Len_r13;
	ASN_NAME(SL_OffsetIndicatorSync_r12) syncOffsetIndicator_r13;
	ASN_NAME(SLSSID_r12) slssid_r13;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, txParameters_r13, syncTxPeriodic_r13)), true)
} ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, txParameters_r13, syncTxPeriodic_r13));

struct ASN_NAME(SL_SyncConfigNFreq_r13, txParameters_r13) {
	struct ASN_NAME(SL_TxParameters_r12) syncTxParameters_r13;
	ASN_NAME(RSRP_RangeSL_r12) syncTxThreshIC_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfigNFreq_r13, txParameters_r13), B19, syncInfoReserved_r13); // SIZE (19)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, txParameters_r13, syncTxPeriodic_r13)), syncTxPeriodic_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, rxParameters_r13, discSyncWindow_r13)), w1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, rxParameters_r13, discSyncWindow_r13)), w2)
} ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, rxParameters_r13, discSyncWindow_r13));

struct ASN_NAME(SL_SyncConfigNFreq_r13, rxParameters_r13) {
	ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, rxParameters_r13, discSyncWindow_r13)) discSyncWindow_r13;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, gnss_Sync_r14)), true)
} ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, gnss_Sync_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, slss_TxDisabled_r15)), true)
} ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, slss_TxDisabled_r15));

struct ASN_NAME(SL_SyncConfigNFreq_r13) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_SyncConfigNFreq_r13, asyncParameters_r13), asyncParameters_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_SyncConfigNFreq_r13, txParameters_r13), txParameters_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_SyncConfigNFreq_r13, rxParameters_r13), rxParameters_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfigNFreq_r13), ASN_NAME(SL_OffsetIndicatorSync_v1430), syncOffsetIndicator_v1430);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, gnss_Sync_r14)), gnss_Sync_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfigNFreq_r13), ASN_NAME(SL_OffsetIndicatorSync_r14), syncOffsetIndicator2_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_SyncConfigNFreq_r13), ASN_NAME(SL_OffsetIndicatorSync_r14), syncOffsetIndicator3_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncConfigNFreq_r13, slss_TxDisabled_r15)), slss_TxDisabled_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_SyncConfigNFreq_r13), ASN_NAME(SL_SyncConfigListNFreq_r13)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)), dB24)
} ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13));

struct ASN_NAME(CellSelectionInfoNFreq_r13) {
	ASN_NAME(Q_RxLevMin) q_RxLevMin_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellSelectionInfoNFreq_r13), uint8_t, q_RxLevMinOffset); // OF (1..8)
	ASN_ENUM(ASN_NAME(CellSelectionInfoNFreq_r13, q_Hyst_r13)) q_Hyst_r13;
	ASN_NAME(Q_RxLevMin) q_RxLevMinReselection_r13;
	ASN_NAME(T_Reselection) t_ReselectionEUTRA_r13;
};

struct ASN_NAME(SL_DiscConfigOtherInterFreq_r13) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscConfigOtherInterFreq_r13), ASN_NAME(SL_DiscTxPowerInfoList_r12), txPowerInfo_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_DiscConfigOtherInterFreq_r13, refCarrierCommon_r13)), refCarrierCommon_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscConfigOtherInterFreq_r13), ASN_NAME(SL_SyncConfigListNFreq_r13), discSyncConfig_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_DiscConfigOtherInterFreq_r13), ASN_NAME(CellSelectionInfoNFreq_r13), discCellSelectionInfo_r13);
};

struct ASN_NAME(SL_CarrierFreqInfo_v1310) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CarrierFreqInfo_v1310), ASN_NAME(SL_ResourcesInterFreq_r13), discResourcesNonPS_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CarrierFreqInfo_v1310), ASN_NAME(SL_ResourcesInterFreq_r13), discResourcesPS_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CarrierFreqInfo_v1310), ASN_NAME(SL_DiscConfigOtherInterFreq_r13), discConfigOther_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CarrierFreqInfo_v1310), ASN_NAME(SL_CarrierFreqInfoList_v1310)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType19_r12, discConfig_v1310, gapRequestsAllowedCommon)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType19_r12, discConfig_v1310, gapRequestsAllowedCommon));

struct ASN_NAME(SystemInformationBlockType19_r12, discConfig_v1310) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12, discConfig_v1310), ASN_NAME(SL_CarrierFreqInfoList_v1310), discInterFreqList_v1310);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType19_r12, discConfig_v1310, gapRequestsAllowedCommon)), gapRequestsAllowedCommon);
};

typedef uint8_t ASN_NAME(RSRP_RangeSL4_r13); // OF (0..49)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), dBinf)
} ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13)), dB12)
} ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13));

struct ASN_NAME(SL_DiscConfigRelayUE_r13) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscConfigRelayUE_r13), ASN_NAME(RSRP_RangeSL4_r13), threshHigh_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscConfigRelayUE_r13), ASN_NAME(RSRP_RangeSL4_r13), threshLow_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMax_r13)), hystMax_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRelayUE_r13, hystMin_r13)), hystMin_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13)), dB12)
} ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), fc19),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(FilterCoefficient)), spare1)
} ASN_ENUM(ASN_NAME(FilterCoefficient));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), dBinf)
} ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13));

struct ASN_NAME(ReselectionInfoRelay_r13) {
	ASN_NAME(Q_RxLevMin) q_RxLevMin_r13;
	ASN_ENUM(ASN_NAME(FilterCoefficient)) filterCoefficient_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(ReselectionInfoRelay_r13, minHyst_r13)), minHyst_r13);
};

struct ASN_NAME(SL_DiscConfigRemoteUE_r13) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_DiscConfigRemoteUE_r13), ASN_NAME(RSRP_RangeSL4_r13), threshHigh_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_DiscConfigRemoteUE_r13, hystMax_r13)), hystMax_r13);
	struct ASN_NAME(ReselectionInfoRelay_r13) reselectionInfoIC_r13;
};

struct ASN_NAME(SystemInformationBlockType19_r12, discConfigRelay_r13) {
	struct ASN_NAME(SL_DiscConfigRelayUE_r13) relayUE_Config_r13;
	struct ASN_NAME(SL_DiscConfigRemoteUE_r13) remoteUE_Config_r13;
};

struct ASN_NAME(SystemInformationBlockType19_r12, discConfigPS_13) {
	ASN_NAME(SL_DiscRxPoolList_r12) discRxPoolPS_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12, discConfigPS_13), ASN_NAME(SL_DiscTxPoolList_r12), discTxPoolPS_Common_r13);
};

struct ASN_NAME(SystemInformationBlockType19_r12) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType19_r12, discConfig_r12), discConfig_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12), ASN_NAME(SL_CarrierFreqInfoList_r12), discInterFreqList_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType19_r12), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType19_r12, discConfig_v1310), discConfig_v1310);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType19_r12, discConfigRelay_r13), discConfigRelay_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType19_r12, discConfigPS_13), discConfigPS_13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)), rf256)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), r2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf16384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf32768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)), rf65536)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, dummy)), rf1)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, dummy));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, dummy2)), rf1)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, dummy2));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)), r256)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v1dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v2dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)), v10)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)), v20)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14));

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14), fdd_r14),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14), tdd_r14)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14)_fdd_r14)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, fdd_r14)) fdd_r14;
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14)_tdd_r14)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14, tdd_r14)) tdd_r14;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_PDSCH_HoppingConfig_SC_MCCH_r14)), off),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_PDSCH_HoppingConfig_SC_MCCH_r14)), ce_ModeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_PDSCH_HoppingConfig_SC_MCCH_r14)), ce_ModeB)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_PDSCH_HoppingConfig_SC_MCCH_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)), rf16384)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf16384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf32768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf65536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf131072),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf262144),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf524288),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)), rf1048576)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14));

struct ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14) {
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, dummy)) dummy;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, dummy2)) dummy2;
	uint8_t mpdcch_Narrowband_SC_MCCH_r14; // OF (1..16)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_NumRepetition_SC_MCCH_r14)) mpdcch_NumRepetition_SC_MCCH_r14;
	struct ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_StartSF_SC_MCCH_r14) mpdcch_StartSF_SC_MCCH_r14;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, mpdcch_PDSCH_HoppingConfig_SC_MCCH_r14)) mpdcch_PDSCH_HoppingConfig_SC_MCCH_r14;
	ASN_NAME(ARFCN_ValueEUTRA_r9) sc_mcch_CarrierFreq_r14;
	uint8_t sc_mcch_Offset_BR_r14; // OF (0..10)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_RepetitionPeriod_BR_r14)) sc_mcch_RepetitionPeriod_BR_r14;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14, sc_mcch_ModificationPeriod_BR_r14)) sc_mcch_ModificationPeriod_BR_r14;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf1200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)), psf1600)
} ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), ps512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)), psf16384)
} ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14));

SIDL_UNION_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)) {
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf10),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf20),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf32),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf40),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf64),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf80),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf128),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf160),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf256),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf320),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf512),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf640),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf1024),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf2048),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf4096),
	ASN_ENUM_VAL(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14), sf8192)
};
SIDL_UNION_BEGIN(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)) {
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf10)
		uint8_t sf10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf20)
		uint8_t sf20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf32)
		uint8_t sf32; // OF (0..31)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf40)
		uint8_t sf40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf64)
		uint8_t sf64; // OF (0..63)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf80)
		uint8_t sf80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf128)
		uint8_t sf128; // OF (0..127)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf160)
		uint8_t sf160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf256)
		uint8_t sf256; // OF (0..255)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf320)
		uint16_t sf320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf512)
		uint16_t sf512; // OF (0..511)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf640)
		uint16_t sf640; // OF (0..639)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf1024)
		uint16_t sf1024; // OF (0..1023)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf2048)
		uint16_t sf2048; // OF (0..2047)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf4096)
		uint16_t sf4096; // OF (0..4095)
	SIDL_UNION_CASE(ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14)_sf8192)
		uint16_t sf8192; // OF (0..8191)
} SIDL_UNION_END;

struct ASN_NAME(SC_MCCH_SchedulingInfo_r14) {
	ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, onDurationTimerSCPTM_r14)) onDurationTimerSCPTM_r14;
	ASN_ENUM(ASN_NAME(SC_MCCH_SchedulingInfo_r14, drx_InactivityTimerSCPTM_r14)) drx_InactivityTimerSCPTM_r14;
	struct ASN_NAME(SC_MCCH_SchedulingInfo_r14, schedulingPeriodStartOffsetSCPTM_r14) schedulingPeriodStartOffsetSCPTM_r14;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeA_SC_MTCH_r14)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeA_SC_MTCH_r14)), r32)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeA_SC_MTCH_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r1536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), r2048)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_v1470)), rf1)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_v1470));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_v1470)), rf1)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_v1470));

struct ASN_NAME(SystemInformationBlockType20_r13) {
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_r13)) sc_mcch_RepetitionPeriod_r13;
	uint8_t sc_mcch_Offset_r13; // OF (0..10)
	uint8_t sc_mcch_FirstSubframe_r13; // OF (0..9)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType20_r13), uint8_t, sc_mcch_duration_r13); // OF (2..9)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_r13)) sc_mcch_ModificationPeriod_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType20_r13), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType20_r13, br_BCCH_Config_r14), br_BCCH_Config_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType20_r13), ASN_NAME(SC_MCCH_SchedulingInfo_r14), sc_mcch_SchedulingInfo_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeA_SC_MTCH_r14)), pdsch_maxNumRepetitionCEmodeA_SC_MTCH_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14)), pdsch_maxNumRepetitionCEmodeB_SC_MTCH_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_RepetitionPeriod_v1470)), sc_mcch_RepetitionPeriod_v1470);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType20_r13, sc_mcch_ModificationPeriod_v1470)), sc_mcch_ModificationPeriod_v1470);
};

SIDL_UNION_ENUM(ASN_NAME(SubframeBitmapSL_r14)) {
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs10_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs16_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs20_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs30_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs40_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs50_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs60_r14),
	ASN_ENUM_VAL(ASN_NAME(SubframeBitmapSL_r14), bs100_r14)
};
SIDL_UNION_BEGIN(ASN_NAME(SubframeBitmapSL_r14)) {
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs10_r14)
		B10 bs10_r14; // SIZE (10)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs16_r14)
		B16 bs16_r14; // SIZE (16)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs20_r14)
		B20 bs20_r14; // SIZE (20)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs30_r14)
		B30 bs30_r14; // SIZE (30)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs40_r14)
		B40 bs40_r14; // SIZE (40)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs50_r14)
		B50 bs50_r14; // SIZE (50)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs60_r14)
		B60 bs60_r14; // SIZE (60)
	SIDL_UNION_CASE(ASN_NAME(SubframeBitmapSL_r14)_bs100_r14)
		B100 bs100_r14; // SIZE (100)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n72),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14));

struct ASN_NAME(SL_CommResourcePoolV2X_r14, rxParametersNCell_r14) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14, rxParametersNCell_r14), ASN_NAME(TDD_Config), tdd_Config_r14);
	uint8_t syncConfigIndex_r14; // OF (0..15)
};

typedef uint8_t ASN_NAME(SL_V2X_TxPoolReportIdentity_r14); // OF (1..72)

typedef uint8_t ASN_NAME(Tx_ConfigIndex_r14); // OF (0..63)

struct ASN_NAME(SL_PPPP_TxConfigIndex_r14) {
	ASN_NAME(SL_Priority_r13) priorityThreshold_r14;
	uint8_t defaultTxConfigIndex_r14; // OF (0..15)
	uint8_t cbr_ConfigIndex_r14; // OF (0..3)
	SIDL_DYNAMIC(ASN_NAME(Tx_ConfigIndex_r14), tx_ConfigIndexList_r14); // SIZE (1..16)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_PPPP_TxConfigIndex_r14), ASN_NAME(SL_CBR_PPPP_TxConfigList_r14)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_P2X_ResourceSelectionConfig_r14, partialSensing_r14)), true)
} ASN_ENUM(ASN_NAME(SL_P2X_ResourceSelectionConfig_r14, partialSensing_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_P2X_ResourceSelectionConfig_r14, randomSelection_r14)), true)
} ASN_ENUM(ASN_NAME(SL_P2X_ResourceSelectionConfig_r14, randomSelection_r14));

struct ASN_NAME(SL_P2X_ResourceSelectionConfig_r14) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_P2X_ResourceSelectionConfig_r14, partialSensing_r14)), partialSensing_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_P2X_ResourceSelectionConfig_r14, randomSelection_r14)), randomSelection_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, gnss_Sync_r14)), true)
} ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, gnss_Sync_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, enb_Sync_r14)), true)
} ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, enb_Sync_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, ue_Sync_r14)), true)
} ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, ue_Sync_r14));

struct ASN_NAME(SL_SyncAllowed_r14) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, gnss_Sync_r14)), gnss_Sync_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, enb_Sync_r14)), enb_Sync_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_SyncAllowed_r14, ue_Sync_r14)), ue_Sync_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v0dot2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v0dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), v10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14));

typedef SIDL_DYNAMIC(ASN_ENUM(ASN_NAME(SL_RestrictResourceReservationPeriod_r14)), ASN_NAME(SL_RestrictResourceReservationPeriodList_r14)); // SIZE (1..16)

struct ASN_NAME(SL_MinT2Value_r15) {
	ASN_NAME(SL_PriorityList_r13) priorityList_r15;
	uint8_t minT2Value_r15; // OF (10..20)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_MinT2Value_r15), ASN_NAME(SL_MinT2ValueList_r15)); // SIZE (1..8)

struct ASN_NAME(MCS_PSSCH_Range_r15) {
	uint8_t minMCS_PSSCH_r15; // OF (0..31)
	uint8_t maxMCS_PSSCH_r15; // OF (0..31)
};

struct ASN_NAME(SL_PPPP_TxConfigIndex_v1530) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_PPPP_TxConfigIndex_v1530), ASN_NAME(MCS_PSSCH_Range_r15), mcs_PSSCH_RangeList_r15); // SIZE (1..16)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_PPPP_TxConfigIndex_v1530), ASN_NAME(SL_CBR_PPPP_TxConfigList_v1530)); // SIZE (1..8)

struct ASN_NAME(SL_CommResourcePoolV2X_r14) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_OffsetIndicator_r12), sl_OffsetIndicator_r14);
	struct ASN_NAME(SubframeBitmapSL_r14) sl_Subframe_r14;
	bool adjacencyPSCCH_PSSCH_r14;
	ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, sizeSubchannel_r14)) sizeSubchannel_r14;
	ASN_ENUM(ASN_NAME(SL_CommResourcePoolV2X_r14, numSubchannel_r14)) numSubchannel_r14;
	uint8_t startRB_Subchannel_r14; // OF (0..99)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), uint8_t, startRB_PSCCH_Pool_r14); // OF (0..99)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_CommResourcePoolV2X_r14, rxParametersNCell_r14), rxParametersNCell_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_TxParameters_r12), dataTxParameters_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), uint8_t, zoneID_r14); // OF (0..7)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), uint8_t, threshS_RSSI_CBR_r14); // OF (0..45)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_V2X_TxPoolReportIdentity_r14), poolReportId_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_CBR_PPPP_TxConfigList_r14), cbr_pssch_TxConfigList_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_P2X_ResourceSelectionConfig_r14), resourceSelectionConfigP2X_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_SyncAllowed_r14), syncAllowed_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_RestrictResourceReservationPeriodList_r14), restrictResourceReservationPeriod_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_MinT2ValueList_r15), sl_MinT2ValueList_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_CBR_PPPP_TxConfigList_v1530), cbr_pssch_TxConfigList_v1530);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_CommRxPoolListV2X_r14)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_CommResourcePoolV2X_r14), ASN_NAME(SL_CommTxPoolListV2X_r14)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_SyncConfig_r12), ASN_NAME(SL_SyncConfigListV2X_r14)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse)), reserved),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse)), notReserved)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse));

struct ASN_NAME(PLMN_IdentityInfo) {
	struct ASN_NAME(PLMN_Identity) plmn_Identity;
	ASN_ENUM(ASN_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse)) cellReservedForOperatorUse;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_IdentityInfo), ASN_NAME(PLMN_IdentityList)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), n100)
} ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14)), gnss),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14)), enb),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14)), ue)
} ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14));

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_SyncConfigNFreq_r13), ASN_NAME(SL_SyncConfigListNFreqV2X_r14)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)), kmph200)
} ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxParameters_r14, allowedRetxNumberPSSCH_r14)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxParameters_r14, allowedRetxNumberPSSCH_r14)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxParameters_r14, allowedRetxNumberPSSCH_r14)), both),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_PSSCH_TxParameters_r14, allowedRetxNumberPSSCH_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_PSSCH_TxParameters_r14, allowedRetxNumberPSSCH_r14));

SIDL_UNION_ENUM(ASN_NAME(SL_TxPower_r14)) {
	ASN_ENUM_VAL(ASN_NAME(SL_TxPower_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_TxPower_r14), minusinfinity_r14),
	ASN_ENUM_VAL(ASN_NAME(SL_TxPower_r14), txPower_r14)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_TxPower_r14)) {
	SIDL_UNION_CASE(ASN_NAME(SL_TxPower_r14)_minusinfinity_r14)
		Null minusinfinity_r14;
	SIDL_UNION_CASE(ASN_NAME(SL_TxPower_r14)_txPower_r14)
		int8_t txPower_r14; // OF (-41..31)
} SIDL_UNION_END;

struct ASN_NAME(SL_PSSCH_TxParameters_r14) {
	uint8_t minMCS_PSSCH_r14; // OF (0..31)
	uint8_t maxMCS_PSSCH_r14; // OF (0..31)
	uint8_t minSubChannel_NumberPSSCH_r14; // OF (1..20)
	uint8_t maxSubchannel_NumberPSSCH_r14; // OF (1..20)
	ASN_ENUM(ASN_NAME(SL_PSSCH_TxParameters_r14, allowedRetxNumberPSSCH_r14)) allowedRetxNumberPSSCH_r14;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_PSSCH_TxParameters_r14), ASN_NAME(SL_TxPower_r14), maxTxPower_r14);
};

struct ASN_NAME(SL_PSSCH_TxParameters_v1530) {
	uint8_t minMCS_PSSCH_r15; // OF (0..31)
	uint8_t maxMCS_PSSCH_r15; // OF (0..31)
};

struct ASN_NAME(SL_PSSCH_TxConfig_r14) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_PSSCH_TxConfig_r14), ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14)), typeTxSync_r14);
	ASN_ENUM(ASN_NAME(SL_PSSCH_TxConfig_r14, thresUE_Speed_r14)) thresUE_Speed_r14;
	struct ASN_NAME(SL_PSSCH_TxParameters_r14) parametersAboveThres_r14;
	struct ASN_NAME(SL_PSSCH_TxParameters_r14) parametersBelowThres_r14;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_PSSCH_TxConfig_r14), ASN_NAME(SL_PSSCH_TxParameters_v1530), parametersAboveThres_v1530);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_PSSCH_TxConfig_r14), ASN_NAME(SL_PSSCH_TxParameters_v1530), parametersBelowThres_v1530);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_PSSCH_TxConfig_r14), ASN_NAME(SL_PSSCH_TxConfigList_r14)); // SIZE (1..16)

typedef uint8_t ASN_NAME(SL_ThresPSSCH_RSRP_r14); // OF (0..66)

typedef SIDL_STATIC_ARRAY(ASN_NAME(SL_ThresPSSCH_RSRP_r14), ASN_NAME(SL_ThresPSSCH_RSRP_List_r14), 64); // SIZE (64)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), v0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), v0dot2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), v0dot4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), v0dot6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), v0dot8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14));

struct ASN_NAME(SL_CommTxPoolSensingConfig_r14, p2x_SensingConfig_r14) {
	uint8_t minNumCandidateSF_r14; // OF (1..13)
	B10 gapCandidateSensing_r14; // SIZE (10)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), n9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14));

struct ASN_NAME(SL_CommTxPoolSensingConfig_r14) {
	ASN_NAME(SL_PSSCH_TxConfigList_r14) pssch_TxConfigList_r14;
	ASN_NAME(SL_ThresPSSCH_RSRP_List_r14) thresPSSCH_RSRP_List_r14;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_CommTxPoolSensingConfig_r14), ASN_NAME(SL_RestrictResourceReservationPeriodList_r14), restrictResourceReservationPeriod_r14);
	ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, probResourceKeep_r14)) probResourceKeep_r14;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_CommTxPoolSensingConfig_r14, p2x_SensingConfig_r14), p2x_SensingConfig_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_CommTxPoolSensingConfig_r14, sl_ReselectAfter_r14)), sl_ReselectAfter_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), m500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), m500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)), spare1)
} ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14));

struct ASN_NAME(SL_ZoneConfig_r14) {
	ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneLength_r14)) zoneLength_r14;
	ASN_ENUM(ASN_NAME(SL_ZoneConfig_r14, zoneWidth_r14)) zoneWidth_r14;
	uint8_t zoneIdLongiMod_r14; // OF (1..4)
	uint8_t zoneIdLatiMod_r14; // OF (1..4)
};

struct ASN_NAME(SL_V2X_InterFreqUE_Config_r14) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(PhysCellIdList_r13), physCellIdList_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14)), typeTxSync_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_SyncConfigListNFreqV2X_r14), v2x_SyncConfig_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_CommRxPoolListV2X_r14), v2x_CommRxPool_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_CommTxPoolListV2X_r14), v2x_CommTxPoolNormal_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_CommTxPoolListV2X_r14), p2x_CommTxPoolNormal_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_CommResourcePoolV2X_r14), v2x_CommTxPoolExceptional_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_CommTxPoolSensingConfig_r14), v2x_ResourceSelectionConfig_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_ZoneConfig_r14), zoneConfig_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), uint16_t, offsetDFN_r14); // OF (0..1000)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_V2X_InterFreqUE_Config_r14), ASN_NAME(SL_V2X_UE_ConfigList_r14)); // SIZE (1..16)

SIDL_UNION_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14)) {
	ASN_ENUM_VAL(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14), additionalSpectrumEmission_r14),
	ASN_ENUM_VAL(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14), additionalSpectrumEmission_v1440)
};
SIDL_UNION_BEGIN(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14)) {
	SIDL_UNION_CASE(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14)_additionalSpectrumEmission_r14)
		ASN_NAME(AdditionalSpectrumEmission) additionalSpectrumEmission_r14;
	SIDL_UNION_CASE(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14)_additionalSpectrumEmission_v1440)
		ASN_NAME(AdditionalSpectrumEmission_v10l0) additionalSpectrumEmission_v1440;
} SIDL_UNION_END;

typedef uint8_t ASN_NAME(SL_CBR_r14); // OF (0..100)

struct ASN_NAME(SL_V2X_FreqSelectionConfig_r15) {
	ASN_NAME(SL_PriorityList_r13) priorityList_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_FreqSelectionConfig_r15), ASN_NAME(SL_CBR_r14), threshCBR_FreqReselection_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_FreqSelectionConfig_r15), ASN_NAME(SL_CBR_r14), threshCBR_FreqKeeping_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_V2X_FreqSelectionConfig_r15), ASN_NAME(SL_V2X_FreqSelectionConfigList_r15)); // SIZE (1..8)

struct ASN_NAME(SL_InterFreqInfoV2X_r14) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_InterFreqInfoV2X_r14), ASN_NAME(PLMN_IdentityList), plmn_IdentityList_r14);
	ASN_NAME(ARFCN_ValueEUTRA_r9) v2x_CommCarrierFreq_r14;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_InterFreqInfoV2X_r14), ASN_NAME(P_Max), sl_MaxTxPower_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SL_InterFreqInfoV2X_r14, sl_Bandwidth_r14)), sl_Bandwidth_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_InterFreqInfoV2X_r14), ASN_NAME(SL_CommResourcePoolV2X_r14), v2x_SchedulingPool_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_InterFreqInfoV2X_r14), ASN_NAME(SL_V2X_UE_ConfigList_r14), v2x_UE_ConfigList_r14);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SL_InterFreqInfoV2X_r14, additionalSpectrumEmissionV2X_r14), additionalSpectrumEmissionV2X_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_InterFreqInfoV2X_r14), ASN_NAME(SL_V2X_FreqSelectionConfigList_r15), v2x_FreqSelectionConfigList_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_InterFreqInfoV2X_r14), ASN_NAME(SL_InterFreqInfoListV2X_r14)); // SIZE (0..7)

typedef SIDL_DYNAMIC(ASN_NAME(ARFCN_ValueEUTRA_r9), ASN_NAME(SL_AnchorCarrierFreqList_V2X_r14)); // SIZE (1..8)

typedef SIDL_DYNAMIC(ASN_NAME(SL_CBR_r14), ASN_NAME(SL_CBR_Levels_Config_r14)); // SIZE (1..16)

struct ASN_NAME(SL_CBR_PSSCH_TxConfig_r14) {
	uint16_t cr_Limit_r14; // OF (0..10000)
	struct ASN_NAME(SL_PSSCH_TxParameters_r14) tx_Parameters_r14;
};

struct ASN_NAME(SL_CBR_CommonTxConfigList_r14) {
	SIDL_DYNAMIC(ASN_NAME(SL_CBR_Levels_Config_r14), cbr_RangeCommonConfigList_r14); // SIZE (1..4)
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(SL_CBR_CommonTxConfigList_r14), ASN_NAME(SL_CBR_PSSCH_TxConfig_r14), sl_CBR_PSSCH_TxConfigList_r14); // SIZE (1..64)
};

struct ASN_NAME(SL_V2X_ConfigCommon_r14) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_CommRxPoolListV2X_r14), v2x_CommRxPool_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_CommTxPoolListV2X_r14), v2x_CommTxPoolNormalCommon_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_CommTxPoolListV2X_r14), p2x_CommTxPoolNormalCommon_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_CommResourcePoolV2X_r14), v2x_CommTxPoolExceptional_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_SyncConfigListV2X_r14), v2x_SyncConfig_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_InterFreqInfoListV2X_r14), v2x_InterFreqInfoList_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_CommTxPoolSensingConfig_r14), v2x_ResourceSelectionConfig_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_ZoneConfig_r14), zoneConfig_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_ENUM(ASN_NAME(SL_TypeTxSync_r14)), typeTxSync_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_Priority_r13), thresSL_TxPrioritization_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_AnchorCarrierFreqList_V2X_r14), anchorCarrierFreqList_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), uint16_t, offsetDFN_r14); // OF (0..1000)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_V2X_ConfigCommon_r14), ASN_NAME(SL_CBR_CommonTxConfigList_r14), cbr_CommonTxConfigList_r14);
};

typedef SIDL_DYNAMIC(ASN_NAME(ARFCN_ValueNR_r15), ASN_NAME(SL_NR_AnchorCarrierFreqList_r16)); // SIZE (1..8)

struct ASN_NAME(SystemInformationBlockType21_r14) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType21_r14), ASN_NAME(SL_V2X_ConfigCommon_r14), sl_V2X_ConfigCommon_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType21_r14), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType21_r14), ASN_NAME(SL_NR_AnchorCarrierFreqList_r16), anchorCarrierFreqListNR_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNR_r15, subcarrierSpacingSSB_r15)), kHz15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNR_r15, subcarrierSpacingSSB_r15)), kHz30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNR_r15, subcarrierSpacingSSB_r15)), kHz120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNR_r15, subcarrierSpacingSSB_r15)), kHz240)
} ASN_ENUM(ASN_NAME(CarrierFreqNR_r15, subcarrierSpacingSSB_r15));

struct ASN_NAME(CarrierFreqNR_r15, threshX_Q_r15) {
	ASN_NAME(ReselectionThresholdQ_r9) threshX_HighQ_r15;
	ASN_NAME(ReselectionThresholdQ_r9) threshX_LowQ_r15;
};

typedef int8_t ASN_NAME(P_MaxNR_r15); // OF (-30..33)

typedef uint8_t ASN_NAME(AdditionalSpectrumEmissionNR_r15); // OF (0..7)

struct ASN_NAME(NS_PmaxValueNR_r15) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(NS_PmaxValueNR_r15), ASN_NAME(P_MaxNR_r15), additionalPmaxNR_r15);
	ASN_NAME(AdditionalSpectrumEmissionNR_r15) additionalSpectrumEmissionNR_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(NS_PmaxValueNR_r15), ASN_NAME(NS_PmaxListNR_r15)); // SIZE (1..8)

typedef SIDL_DYNAMIC(ASN_NAME(NS_PmaxListNR_r15), ASN_NAME(MultiBandNsPmaxListNR_1_v1550)); // SIZE (1..31)

typedef SIDL_DYNAMIC(ASN_NAME(NS_PmaxListNR_r15), ASN_NAME(MultiBandNsPmaxListNR_v1550)); // SIZE (1..32)

struct ASN_NAME(CarrierFreqNR_r15) {
	ASN_NAME(ARFCN_ValueNR_r15) carrierFreq_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(MultiFrequencyBandListNR_r15), multiBandInfoList_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(MultiFrequencyBandListNR_r15), multiBandInfoListSUL_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(MTC_SSB_NR_r15), measTimingConfig_r15);
	ASN_ENUM(ASN_NAME(CarrierFreqNR_r15, subcarrierSpacingSSB_r15)) subcarrierSpacingSSB_r15;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(SS_RSSI_Measurement_r15), ss_RSSI_Measurement_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(CellReselectionPriority), cellReselectionPriority_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_ENUM(ASN_NAME(CellReselectionSubPriority_r13)), cellReselectionSubPriority_r15);
	ASN_NAME(ReselectionThreshold) threshX_High_r15;
	ASN_NAME(ReselectionThreshold) threshX_Low_r15;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CarrierFreqNR_r15, threshX_Q_r15), threshX_Q_r15);
	int8_t q_RxLevMin_r15; // OF (-70..-22)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), int8_t, q_RxLevMinSUL_r15); // OF (-70..-22)
	ASN_NAME(P_MaxNR_r15) p_MaxNR_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(NS_PmaxListNR_r15), ns_PmaxListNR_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), int8_t, q_QualMin_r15); // OF (-43..-12)
	bool deriveSSB_IndexFromCell_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(MaxRS_IndexCellQualNR_r15), maxRS_IndexCellQual_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(ThresholdListNR_r15), threshRS_Index_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(MultiBandNsPmaxListNR_1_v1550), multiBandNsPmaxListNR_v1550);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(MultiBandNsPmaxListNR_v1550), multiBandNsPmaxListNR_SUL_v1550);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(SSB_ToMeasure_r15), ssb_ToMeasure_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqNR_r15), ASN_NAME(CarrierFreqListNR_r15)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)), spare1)
} ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16));

struct ASN_NAME(MTC_SSB2_LP_NR_r16) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(MTC_SSB2_LP_NR_r16), ASN_NAME(PhysCellIdNR_r15), pci_List_r16); // SIZE (1..64)
	ASN_ENUM(ASN_NAME(MTC_SSB2_LP_NR_r16, periodicity_r16)) periodicity_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SSB_PositionQCL_RelationNR_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SSB_PositionQCL_RelationNR_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SSB_PositionQCL_RelationNR_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SSB_PositionQCL_RelationNR_r16)), n8)
} ASN_ENUM(ASN_NAME(SSB_PositionQCL_RelationNR_r16));

typedef SIDL_DYNAMIC(ASN_NAME(PhysCellIdNR_r15), ASN_NAME(WhiteCellListNR_r16)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNR_v1610, highSpeedCarrierNR_r16)), true)
} ASN_ENUM(ASN_NAME(CarrierFreqNR_v1610, highSpeedCarrierNR_r16));

struct ASN_NAME(CarrierFreqNR_v1610) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CarrierFreqNR_v1610), ASN_NAME(MTC_SSB2_LP_NR_r16), smtc2_LP_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_v1610), ASN_ENUM(ASN_NAME(SSB_PositionQCL_RelationNR_r16)), ssb_PositionQCL_CommonNR_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CarrierFreqNR_v1610), ASN_NAME(WhiteCellListNR_r16), whiteCellListNR_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CarrierFreqNR_v1610, highSpeedCarrierNR_r16)), highSpeedCarrierNR_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqNR_v1610), ASN_NAME(CarrierFreqListNR_v1610)); // SIZE (1..8)

struct ASN_NAME(SystemInformationBlockType24_r15) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType24_r15), ASN_NAME(CarrierFreqListNR_r15), carrierFreqListNR_r15);
	ASN_NAME(T_Reselection) t_ReselectionNR_r15;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType24_r15), ASN_NAME(SpeedStateScaleFactors), t_ReselectionNR_SF_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType24_r15), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType24_r15), ASN_NAME(CarrierFreqListNR_v1610), carrierFreqListNR_v1610);
};

typedef uint8_t ASN_NAME(UAC_BarringInfoSetIndex_r15); // OF (1..8)

struct ASN_NAME(UAC_BarringPerCat_r15) {
	uint8_t accessCategory_r15; // OF (1..63)
	ASN_NAME(UAC_BarringInfoSetIndex_r15) uac_barringInfoSetIndex_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(UAC_BarringPerCat_r15), ASN_NAME(UAC_BarringPerCatList_r15)); // SIZE (1..63)

SIDL_UNION_ENUM(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15)) {
	ASN_ENUM_VAL(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15), uac_ImplicitAC_BarringList_r15),
	ASN_ENUM_VAL(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15), uac_ExplicitAC_BarringList_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15)) {
	SIDL_UNION_CASE(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15)_uac_ImplicitAC_BarringList_r15)
		SIDL_STATIC_ARRAY(ASN_NAME(UAC_BarringInfoSetIndex_r15), uac_ImplicitAC_BarringList_r15, 63); // SIZE (63)
	SIDL_UNION_CASE(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15)_uac_ExplicitAC_BarringList_r15)
		ASN_NAME(UAC_BarringPerCatList_r15) uac_ExplicitAC_BarringList_r15;
} SIDL_UNION_END;

struct ASN_NAME(UAC_BarringPerPLMN_r15) {
	uint8_t plmn_IdentityIndex_r15; // OF (1..6)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(UAC_BarringPerPLMN_r15, uac_AC_BarringListType_r15), uac_AC_BarringListType_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(UAC_BarringPerPLMN_r15), ASN_NAME(UAC_BarringPerPLMN_List_r15)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p00),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)), p95)
} ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)), s512)
} ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15));

struct ASN_NAME(UAC_BarringInfoSet_r15) {
	ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringFactor_r15)) uac_BarringFactor_r15;
	ASN_ENUM(ASN_NAME(UAC_BarringInfoSet_r15, uac_BarringTime_r15)) uac_BarringTime_r15;
	B7 uac_BarringForAccessIdentity_r15; // SIZE (7)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(UAC_BarringInfoSet_r15), ASN_NAME(UAC_BarringInfoSetList_r15)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_AC1_SelectAssistInfo_r15)), a),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_AC1_SelectAssistInfo_r15)), b),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UAC_AC1_SelectAssistInfo_r15)), c)
} ASN_ENUM(ASN_NAME(UAC_AC1_SelectAssistInfo_r15));

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15), plmnCommon_r15),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15), individualPLMNList_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15)_plmnCommon_r15)
		ASN_ENUM(ASN_NAME(UAC_AC1_SelectAssistInfo_r15)) plmnCommon_r15;
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15)_individualPLMNList_r15)
		SIDL_DYNAMIC(ASN_ENUM(ASN_NAME(UAC_AC1_SelectAssistInfo_r15)), individualPLMNList_r15); // SIZE (2..6)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType25_r15, ab_PerRSRP_r16)), thresh0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType25_r15, ab_PerRSRP_r16)), thresh1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType25_r15, ab_PerRSRP_r16)), thresh2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType25_r15, ab_PerRSRP_r16)), thresh3)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType25_r15, ab_PerRSRP_r16));

struct ASN_NAME(SystemInformationBlockType25_r15) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType25_r15), ASN_NAME(UAC_BarringPerCatList_r15), uac_BarringForCommon_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType25_r15), ASN_NAME(UAC_BarringPerPLMN_List_r15), uac_BarringPerPLMN_List_r15);
	ASN_NAME(UAC_BarringInfoSetList_r15) uac_BarringInfoSetList_r15;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType25_r15, uac_AC1_SelectAssistInfo_r15), uac_AC1_SelectAssistInfo_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType25_r15), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType25_r15, ab_PerRSRP_r16)), ab_PerRSRP_r16);
};

struct ASN_NAME(SL_PPPP_TxConfigIndex_r15) {
	ASN_NAME(SL_Priority_r13) priorityThreshold_r15;
	uint8_t defaultTxConfigIndex_r15; // OF (0..15)
	uint8_t cbr_ConfigIndex_r15; // OF (0..3)
	SIDL_DYNAMIC(ASN_NAME(Tx_ConfigIndex_r14), tx_ConfigIndexList_r15); // SIZE (1..16)
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(SL_PPPP_TxConfigIndex_r15), ASN_NAME(MCS_PSSCH_Range_r15), mcs_PSSCH_RangeList_r15); // SIZE (1..16)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_PPPP_TxConfigIndex_r15), ASN_NAME(SL_CBR_PPPP_TxConfigList_r15)); // SIZE (1..8)

typedef uint8_t ASN_NAME(SL_Reliability_r15); // OF (1..8)

typedef B24 ASN_NAME(SL_DestinationIdentity_r12); // SIZE (24)

typedef SIDL_DYNAMIC(ASN_NAME(SL_DestinationIdentity_r12), ASN_NAME(SL_DestinationInfoList_r12)); // SIZE (1..16)

struct ASN_NAME(SL_AllowedCarrierFreqList_r15) {
	SIDL_DYNAMIC(ASN_NAME(ARFCN_ValueEUTRA_r9), allowedCarrierFreqSet1); // SIZE (1..8)
	SIDL_DYNAMIC(ASN_NAME(ARFCN_ValueEUTRA_r9), allowedCarrierFreqSet2); // SIZE (1..8)
};

struct ASN_NAME(SL_PPPR_Dest_CarrierFreq) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_PPPR_Dest_CarrierFreq), ASN_NAME(SL_DestinationInfoList_r12), destinationInfoList_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SL_PPPR_Dest_CarrierFreq), ASN_NAME(SL_AllowedCarrierFreqList_r15), allowedCarrierFreqList_r15);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SL_PPPR_Dest_CarrierFreq), ASN_NAME(SL_PPPR_Dest_CarrierFreqList_r15)); // SIZE (1..16)

struct ASN_NAME(SL_V2X_PacketDuplicationConfig_r15) {
	ASN_NAME(SL_Reliability_r15) threshSL_Reliability_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SL_V2X_PacketDuplicationConfig_r15), ASN_NAME(SL_PPPR_Dest_CarrierFreqList_r15), allowedCarrierFreqConfig_r15);
};

typedef SIDL_DYNAMIC(ASN_NAME(ARFCN_ValueEUTRA_r9), ASN_NAME(SL_V2X_SyncFreqList_r15)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType26_r15, slss_TxMultiFreq_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType26_r15, slss_TxMultiFreq_r15));

struct ASN_NAME(SystemInformationBlockType26_r15) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), ASN_NAME(SL_InterFreqInfoListV2X_r14), v2x_InterFreqInfoList_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), ASN_NAME(SL_CBR_PPPP_TxConfigList_r15), cbr_pssch_TxConfigList_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), ASN_NAME(SL_V2X_PacketDuplicationConfig_r15), v2x_PacketDuplicationConfig_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), ASN_NAME(SL_V2X_SyncFreqList_r15), syncFreqList_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType26_r15, slss_TxMultiFreq_r15)), slss_TxMultiFreq_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), ASN_NAME(SL_V2X_FreqSelectionConfigList_r15), v2x_FreqSelectionConfigList_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), uint8_t, threshS_RSSI_CBR_r15); // OF (0..45)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26_r15), OCTET_STRING, lateNonCriticalExtension);
};

struct ASN_NAME(PLMN_Info_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PLMN_Info_r16), B10, nr_BandList_r16); // SIZE (10)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_Info_r16), ASN_NAME(PLMN_InfoList_r16)); // SIZE (0..6)

typedef SIDL_DYNAMIC(ASN_NAME(FreqBandIndicatorNR_r15), ASN_NAME(BandListENDC_r16)); // SIZE (1..10)

struct ASN_NAME(SystemInformationBlockType26a_r16) {
	ASN_NAME(PLMN_InfoList_r16) plmn_InfoList_r16;
	ASN_NAME(BandListENDC_r16) bandListENDC_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType26a_r16), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_8dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_4dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v_0dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v3dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v7dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)), v9)
} ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16));

struct ASN_NAME(CarrierFreqNBIOT_r16) {
	ASN_NAME(ARFCN_ValueEUTRA_r9) carrierFreq_r16;
	ASN_ENUM(ASN_NAME(CarrierFreqNBIOT_r16, carrierFreqOffset_r16)) carrierFreqOffset_r16;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CarrierFreqNBIOT_r16), ASN_NAME(CarrierFreqListNBIOT_r16)); // SIZE (1..8)

struct ASN_NAME(SystemInformationBlockType27_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType27_r16), ASN_NAME(CarrierFreqListNBIOT_r16), carrierFreqListNBIOT_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType27_r16), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType28_r16, segmentType_r16)), notLastSegment),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType28_r16, segmentType_r16)), lastSegment)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType28_r16, segmentType_r16));

struct ASN_NAME(SystemInformationBlockType28_r16) {
	uint8_t segmentNumber_r16; // OF (0..63)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType28_r16, segmentType_r16)) segmentType_r16;
	OCTET_STRING segmentContainer_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType28_r16), OCTET_STRING, lateNonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NAME(PeriodicityStartPos_r16)) {
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), periodicity10ms),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), periodicity20ms),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), periodicity40ms),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), periodicity80ms),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), periodicity160ms),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), spare3),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), spare2),
	ASN_ENUM_VAL(ASN_NAME(PeriodicityStartPos_r16), spare1)
};
SIDL_UNION_BEGIN(ASN_NAME(PeriodicityStartPos_r16)) {
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_periodicity10ms)
		Null periodicity10ms;
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_periodicity20ms)
		uint8_t periodicity20ms; // OF (0..1)
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_periodicity40ms)
		uint8_t periodicity40ms; // OF (0..3)
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_periodicity80ms)
		uint8_t periodicity80ms; // OF (0..7)
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_periodicity160ms)
		uint8_t periodicity160ms; // OF (0..15)
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_spare3)
		Null spare3;
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_spare2)
		Null spare2;
	SIDL_UNION_CASE(ASN_NAME(PeriodicityStartPos_r16)_spare1)
		Null spare1;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)) {
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), rbg_Bitmap1dot4),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), rbg_Bitmap3),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), rbg_Bitmap5),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), rbg_Bitmap10),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), rbg_Bitmap15),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), rbg_Bitmap20)
};
SIDL_UNION_BEGIN(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)) {
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)_rbg_Bitmap1dot4)
		B6 rbg_Bitmap1dot4; // SIZE (6)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)_rbg_Bitmap3)
		B8 rbg_Bitmap3; // SIZE (8)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)_rbg_Bitmap5)
		B13 rbg_Bitmap5; // SIZE (13)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)_rbg_Bitmap10)
		B17 rbg_Bitmap10; // SIZE (17)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)_rbg_Bitmap15)
		B19 rbg_Bitmap15; // SIZE (19)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16)_rbg_Bitmap20)
		B25 rbg_Bitmap20; // SIZE (25)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16)) {
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16), slotPattern10ms),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16), slotPattern40ms)
};
SIDL_UNION_BEGIN(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16)) {
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16)_slotPattern10ms)
		B20 slotPattern10ms; // SIZE (20)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16)_slotPattern40ms)
		B80 slotPattern40ms; // SIZE (80)
} SIDL_UNION_END;

struct ASN_NAME(ResourceReservationConfigDL_r16) {
	struct ASN_NAME(PeriodicityStartPos_r16) periodicityStartPos_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(ResourceReservationConfigDL_r16, resourceReservationFreq_r16), resourceReservationFreq_r16);
	struct ASN_NAME(ResourceReservationConfigDL_r16, slotBitmap_r16) slotBitmap_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ResourceReservationConfigDL_r16), B7, symbolBitmap1_r16); // SIZE (7)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ResourceReservationConfigDL_r16), B7, symbolBitmap2_r16); // SIZE (7)
};

SIDL_UNION_ENUM(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16)) {
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16), slotPattern10ms),
	ASN_ENUM_VAL(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16), slotPattern40ms)
};
SIDL_UNION_BEGIN(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16)) {
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16)_slotPattern10ms)
		B20 slotPattern10ms; // SIZE (20)
	SIDL_UNION_CASE(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16)_slotPattern40ms)
		B80 slotPattern40ms; // SIZE (80)
} SIDL_UNION_END;

struct ASN_NAME(ResourceReservationConfigUL_r16) {
	struct ASN_NAME(PeriodicityStartPos_r16) periodicityStartPos_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(ResourceReservationConfigUL_r16, slotBitmap_r16), slotBitmap_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ResourceReservationConfigUL_r16), B7, symbolBitmap1_r16); // SIZE (7)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(ResourceReservationConfigUL_r16), B7, symbolBitmap2_r16); // SIZE (7)
};

struct ASN_NAME(SystemInformationBlockType29_r16) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType29_r16), ASN_NAME(ResourceReservationConfigDL_r16), resourceReservationConfigCommonDL_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType29_r16), ASN_NAME(ResourceReservationConfigUL_r16), resourceReservationConfigCommonUL_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType29_r16), OCTET_STRING, lateNonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib2),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib3),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib4),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib5),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib6),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib7),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib8),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib9),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib10),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib11),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib12_v920),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib13_v920),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib14_v1130),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib15_v1130),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib16_v1130),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib17_v1250),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib18_v1250),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib19_v1250),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib20_v1310),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib21_v1430),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib24_v1530),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib25_v1530),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib26_v1530),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib26a_v1610),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib27_v1610),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib28_v1610),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), sib29_v1610)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib2)
		struct ASN_NAME(SystemInformationBlockType2) sib2;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib3)
		struct ASN_NAME(SystemInformationBlockType3) sib3;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib4)
		struct ASN_NAME(SystemInformationBlockType4) sib4;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib5)
		struct ASN_NAME(SystemInformationBlockType5) sib5;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib6)
		struct ASN_NAME(SystemInformationBlockType6) sib6;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib7)
		struct ASN_NAME(SystemInformationBlockType7) sib7;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib8)
		struct ASN_NAME(SystemInformationBlockType8) sib8;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib9)
		struct ASN_NAME(SystemInformationBlockType9) sib9;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib10)
		struct ASN_NAME(SystemInformationBlockType10) sib10;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib11)
		struct ASN_NAME(SystemInformationBlockType11) sib11;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib12_v920)
		struct ASN_NAME(SystemInformationBlockType12_r9) sib12_v920;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib13_v920)
		struct ASN_NAME(SystemInformationBlockType13_r9) sib13_v920;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib14_v1130)
		struct ASN_NAME(SystemInformationBlockType14_r11) sib14_v1130;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib15_v1130)
		struct ASN_NAME(SystemInformationBlockType15_r11) sib15_v1130;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib16_v1130)
		struct ASN_NAME(SystemInformationBlockType16_r11) sib16_v1130;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib17_v1250)
		struct ASN_NAME(SystemInformationBlockType17_r12) sib17_v1250;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib18_v1250)
		struct ASN_NAME(SystemInformationBlockType18_r12) sib18_v1250;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib19_v1250)
		struct ASN_NAME(SystemInformationBlockType19_r12) sib19_v1250;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib20_v1310)
		struct ASN_NAME(SystemInformationBlockType20_r13) sib20_v1310;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib21_v1430)
		struct ASN_NAME(SystemInformationBlockType21_r14) sib21_v1430;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib24_v1530)
		struct ASN_NAME(SystemInformationBlockType24_r15) sib24_v1530;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib25_v1530)
		struct ASN_NAME(SystemInformationBlockType25_r15) sib25_v1530;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib26_v1530)
		struct ASN_NAME(SystemInformationBlockType26_r15) sib26_v1530;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib26a_v1610)
		struct ASN_NAME(SystemInformationBlockType26a_r16) sib26a_v1610;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib27_v1610)
		struct ASN_NAME(SystemInformationBlockType27_r16) sib27_v1610;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib28_v1610)
		struct ASN_NAME(SystemInformationBlockType28_r16) sib28_v1610;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s)_sib29_v1610)
		struct ASN_NAME(SystemInformationBlockType29_r16) sib29_v1610;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo_s), ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo)); // SIZE (1..32)

struct ASN_NAME(SystemInformation_v8a0_IEs, nonCriticalExtension) {
};

struct ASN_NAME(SystemInformation_v8a0_IEs) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformation_v8a0_IEs), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformation_v8a0_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NAME(SystemInformation_r8_IEs) {
	ASN_NAME(SystemInformation_r8_IEs, sib_TypeAndInfo) sib_TypeAndInfo;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformation_r8_IEs), ASN_NAME(SystemInformation_v8a0_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockPos_r15) {
	OCTET_STRING assistanceDataSIB_Element_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockPos_r15), OCTET_STRING, lateNonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)) {
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_1_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_2_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_3_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_4_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_5_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_6_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib1_7_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_1_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_2_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_3_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_4_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_5_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_6_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_7_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_8_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_9_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_10_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_11_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_12_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_13_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_14_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_15_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_16_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_17_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_18_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib2_19_r15),
	ASN_ENUM_VAL(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), posSib3_1_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)) {
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_1_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_1_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_2_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_2_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_3_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_3_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_4_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_4_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_5_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_5_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_6_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_6_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib1_7_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib1_7_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_1_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_1_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_2_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_2_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_3_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_3_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_4_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_4_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_5_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_5_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_6_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_6_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_7_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_7_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_8_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_8_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_9_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_9_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_10_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_10_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_11_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_11_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_12_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_12_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_13_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_13_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_14_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_14_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_15_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_15_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_16_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_16_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_17_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_17_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_18_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_18_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib2_19_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib2_19_r15;
	SIDL_UNION_CASE(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s)_posSib3_1_r15)
		struct ASN_NAME(SystemInformationBlockPos_r15) posSib3_1_r15;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15_s), ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15)); // SIZE (1..32)

struct ASN_NAME(PosSystemInformation_r15_IEs, nonCriticalExtension) {
};

struct ASN_NAME(PosSystemInformation_r15_IEs) {
	ASN_NAME(PosSystemInformation_r15_IEs, posSIB_TypeAndInfo_r15) posSIB_TypeAndInfo_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PosSystemInformation_r15_IEs), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PosSystemInformation_r15_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15, criticalExtensionsFuture) {
};

SIDL_UNION_ENUM(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15), posSystemInformation_r15),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15), criticalExtensionsFuture)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15)_posSystemInformation_r15)
		struct ASN_NAME(PosSystemInformation_r15_IEs) posSystemInformation_r15;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15)_criticalExtensionsFuture)
		struct ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15, criticalExtensionsFuture) criticalExtensionsFuture;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(SystemInformation, criticalExtensions)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformation, criticalExtensions), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation, criticalExtensions), systemInformation_r8),
	ASN_ENUM_VAL(ASN_NAME(SystemInformation, criticalExtensions), criticalExtensionsFuture_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformation, criticalExtensions)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformation, criticalExtensions)_systemInformation_r8)
		struct ASN_NAME(SystemInformation_r8_IEs) systemInformation_r8;
	SIDL_UNION_CASE(ASN_NAME(SystemInformation, criticalExtensions)_criticalExtensionsFuture_r15)
		struct ASN_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r15) criticalExtensionsFuture_r15;
} SIDL_UNION_END;

struct ASN_NAME(SystemInformation) {
	struct ASN_NAME(SystemInformation, criticalExtensions) criticalExtensions;
};

typedef B16 ASN_NAME(TrackingAreaCode); // SIZE (16)

typedef B28 ASN_NAME(CellIdentity); // SIZE (28)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, cellBarred)), barred),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, cellBarred)), notBarred)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, cellBarred));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, intraFreqReselection)), allowed),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, intraFreqReselection)), notAllowed)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, intraFreqReselection));

typedef B27 ASN_NAME(CSG_Identity); // SIZE (27)

struct ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo) {
	ASN_NAME(PLMN_IdentityList) plmn_IdentityList;
	ASN_NAME(TrackingAreaCode) trackingAreaCode;
	ASN_NAME(CellIdentity) cellIdentity;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, cellBarred)) cellBarred;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo, intraFreqReselection)) intraFreqReselection;
	bool csg_Indication;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo), ASN_NAME(CSG_Identity), csg_Identity);
};

struct ASN_NAME(SystemInformationBlockType1, cellSelectionInfo) {
	ASN_NAME(Q_RxLevMin) q_RxLevMin;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1, cellSelectionInfo), uint8_t, q_RxLevMinOffset); // OF (1..8)
};

typedef uint8_t ASN_NAME(FreqBandIndicator); // OF (1..64)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SI_Periodicity_r12)), rf512)
} ASN_ENUM(ASN_NAME(SI_Periodicity_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType12_v920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType13_v920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType14_v1130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType15_v1130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType16_v1130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType17_v1250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType18_v1250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType19_v1250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType20_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType21_v1430),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType24_v1530),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType25_v1530),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType26_v1530),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType26a_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType27_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType28_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SIB_Type)), sibType29_v1610)
} ASN_ENUM(ASN_NAME(SIB_Type));

typedef SIDL_DYNAMIC(ASN_ENUM(ASN_NAME(SIB_Type)), ASN_NAME(SIB_MappingInfo)); // SIZE (0..31)

struct ASN_NAME(SchedulingInfo) {
	ASN_ENUM(ASN_NAME(SI_Periodicity_r12)) si_Periodicity;
	ASN_NAME(SIB_MappingInfo) sib_MappingInfo;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SchedulingInfo), ASN_NAME(SchedulingInfoList)); // SIZE (1..32)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)), ms40)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v920_IEs, ims_EmergencySupport_r9)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v920_IEs, ims_EmergencySupport_r9));

struct ASN_NAME(CellSelectionInfo_v920) {
	ASN_NAME(Q_QualMin_r9) q_QualMin_r9;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellSelectionInfo_v920), uint8_t, q_QualMinOffset_r9); // OF (1..8)
};

struct ASN_NAME(CellSelectionInfo_v1130) {
	ASN_NAME(Q_QualMin_r9) q_QualMinWB_r11;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1250_IEs, cellAccessRelatedInfo_v1250, category0Allowed_r12)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1250_IEs, cellAccessRelatedInfo_v1250, category0Allowed_r12));

struct ASN_NAME(SystemInformationBlockType1_v1250_IEs, cellAccessRelatedInfo_v1250) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1250_IEs, cellAccessRelatedInfo_v1250, category0Allowed_r12)), category0Allowed_r12);
};

struct ASN_NAME(CellSelectionInfo_v1250) {
	ASN_NAME(Q_QualMin_r9) q_QualMinRSRQ_OnAllSymbols_r12;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1250_IEs, freqBandIndicatorPriority_r12)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1250_IEs, freqBandIndicatorPriority_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, eDRX_Allowed_r13)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, eDRX_Allowed_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)), spare)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_RepetitionPattern_r13)), everyRF),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_RepetitionPattern_r13)), every2ndRF),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_RepetitionPattern_r13)), every4thRF),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_RepetitionPattern_r13)), every8thRF)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_RepetitionPattern_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b152),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b208),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b328),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b408),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b504),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b712),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b808),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)), b936)
} ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13));

struct ASN_NAME(SchedulingInfo_BR_r13) {
	uint8_t si_Narrowband_r13; // OF (1..16)
	ASN_ENUM(ASN_NAME(SchedulingInfo_BR_r13, si_TBS_r13)) si_TBS_r13;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(SchedulingInfo_BR_r13), ASN_NAME(SchedulingInfoList_BR_r13)); // SIZE (1..32)

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13), subframePattern10_r13),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13), subframePattern40_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13)_subframePattern10_r13)
		B10 subframePattern10_r13; // SIZE (10)
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13)_subframePattern40_r13)
		B40 subframePattern40_r13; // SIZE (40)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_HoppingConfigCommon_r13)), on),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_HoppingConfigCommon_r13)), off)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_HoppingConfigCommon_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_ValidityTime_r13)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_ValidityTime_r13));

typedef uint8_t ASN_NAME(SystemInfoValueTagSI_r13); // OF (0..3)

typedef SIDL_DYNAMIC(ASN_NAME(SystemInfoValueTagSI_r13), ASN_NAME(SystemInfoValueTagList_r13)); // SIZE (1..32)

struct ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13) {
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_WindowLength_BR_r13)) si_WindowLength_BR_r13;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_RepetitionPattern_r13)) si_RepetitionPattern_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13), ASN_NAME(SchedulingInfoList_BR_r13), schedulingInfoList_BR_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, fdd_DownlinkOrTddSubframeBitmapBR_r13), fdd_DownlinkOrTddSubframeBitmapBR_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13), B10, fdd_UplinkSubframeBitmapBR_r13); // SIZE (10)
	uint8_t startSymbolBR_r13; // OF (1..4)
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_HoppingConfigCommon_r13)) si_HoppingConfigCommon_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13, si_ValidityTime_r13)), si_ValidityTime_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13), ASN_NAME(SystemInfoValueTagList_r13), systemInfoValueTagList_r13);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, mpdcch_pdsch_HoppingNB_r13)), nb2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, mpdcch_pdsch_HoppingNB_r13)), nb4)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, mpdcch_pdsch_HoppingNB_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_FDD_r13)), int1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_FDD_r13)), int2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_FDD_r13)), int4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_FDD_r13)), int8)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_FDD_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_TDD_r13)), int1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_TDD_r13)), int5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_TDD_r13)), int10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_TDD_r13)), int20)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_TDD_r13));

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13), interval_FDD_r13),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13), interval_TDD_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13)_interval_FDD_r13)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_FDD_r13)) interval_FDD_r13;
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13)_interval_TDD_r13)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13, interval_TDD_r13)) interval_TDD_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_FDD_r13)), int2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_FDD_r13)), int4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_FDD_r13)), int8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_FDD_r13)), int16)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_FDD_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_TDD_r13)), int5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_TDD_r13)), int10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_TDD_r13)), int20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_TDD_r13)), int40)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_TDD_r13));

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13), interval_FDD_r13),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13), interval_TDD_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13)_interval_FDD_r13)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_FDD_r13)) interval_FDD_r13;
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13)_interval_TDD_r13)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13, interval_TDD_r13)) interval_TDD_r13;
} SIDL_UNION_END;

struct ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, mpdcch_pdsch_HoppingNB_r13)), mpdcch_pdsch_HoppingNB_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeA_r13), interval_DLHoppingConfigCommonModeA_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13, interval_DLHoppingConfigCommonModeB_r13), interval_DLHoppingConfigCommonModeB_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13), uint8_t, mpdcch_pdsch_HoppingOffset_r13); // OF (1..16)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1430_IEs, eCallOverIMS_Support_r14)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1430_IEs, eCallOverIMS_Support_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config_v1430, specialSubframePatterns_v1430)), ssp10)
} ASN_ENUM(ASN_NAME(TDD_Config_v1430, specialSubframePatterns_v1430));

struct ASN_NAME(TDD_Config_v1430) {
	ASN_ENUM(ASN_NAME(TDD_Config_v1430, specialSubframePatterns_v1430)) specialSubframePatterns_v1430;
};

struct ASN_NAME(CellAccessRelatedInfo_r14) {
	ASN_NAME(PLMN_IdentityList) plmn_IdentityList_r14;
	ASN_NAME(TrackingAreaCode) trackingAreaCode_r14;
	ASN_NAME(CellIdentity) cellIdentity_r14;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_Config_v1450, specialSubframePatterns_v1450)), ssp10_CRS_LessDwPTS)
} ASN_ENUM(ASN_NAME(TDD_Config_v1450, specialSubframePatterns_v1450));

struct ASN_NAME(TDD_Config_v1450) {
	ASN_ENUM(ASN_NAME(TDD_Config_v1450, specialSubframePatterns_v1450)) specialSubframePatterns_v1450;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, hsdn_Cell_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, hsdn_Cell_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15, crs_IntfMitigNumPRBs)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15, crs_IntfMitigNumPRBs)), n24)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15, crs_IntfMitigNumPRBs));

SIDL_UNION_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15)) {
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15), crs_IntfMitigEnabled),
	ASN_ENUM_VAL(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15), crs_IntfMitigNumPRBs)
};
SIDL_UNION_BEGIN(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15)) {
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15)_crs_IntfMitigEnabled)
		Null crs_IntfMitigEnabled;
	SIDL_UNION_CASE(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15)_crs_IntfMitigNumPRBs)
		ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15, crs_IntfMitigNumPRBs)) crs_IntfMitigNumPRBs;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellBarred_CRS_r15)), barred),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellBarred_CRS_r15)), notBarred)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellBarred_CRS_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1530, cellReservedForOperatorUse_CRS_r15)), reserved),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1530, cellReservedForOperatorUse_CRS_r15)), notReserved)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1530, cellReservedForOperatorUse_CRS_r15));

struct ASN_NAME(PLMN_IdentityInfo_v1530) {
	ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1530, cellReservedForOperatorUse_CRS_r15)) cellReservedForOperatorUse_CRS_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_IdentityInfo_v1530), ASN_NAME(PLMN_IdentityList_v1530)); // SIZE (1..6)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)), rf512)
} ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, encrypted_r15)), true)
} ASN_ENUM(ASN_NAME(PosSIB_Type_r15, encrypted_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), gps),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), sbas),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), qzss),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), galileo),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), glonass),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), bds),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)), navic_v1610)
} ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15));

struct ASN_NAME(GNSS_ID_r15) {
	ASN_ENUM(ASN_NAME(GNSS_ID_r15, gnss_id_r15)) gnss_id_r15;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SBAS_ID_r15, sbas_id_r15)), waas),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SBAS_ID_r15, sbas_id_r15)), egnos),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SBAS_ID_r15, sbas_id_r15)), msas),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SBAS_ID_r15, sbas_id_r15)), gagan)
} ASN_ENUM(ASN_NAME(SBAS_ID_r15, sbas_id_r15));

struct ASN_NAME(SBAS_ID_r15) {
	ASN_ENUM(ASN_NAME(SBAS_ID_r15, sbas_id_r15)) sbas_id_r15;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_19),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType3_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType1_8_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_20_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_21_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_22_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_23_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_24_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType2_25_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType4_1_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)), posSibType5_1_v1610)
} ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15));

struct ASN_NAME(PosSIB_Type_r15) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PosSIB_Type_r15, encrypted_r15)), encrypted_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PosSIB_Type_r15), ASN_NAME(GNSS_ID_r15), gnss_id_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PosSIB_Type_r15), ASN_NAME(SBAS_ID_r15), sbas_id_r15);
	ASN_ENUM(ASN_NAME(PosSIB_Type_r15, posSibType_r15)) posSibType_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PosSIB_Type_r15), ASN_NAME(PosSIB_MappingInfo_r15)); // SIZE (1..32)

struct ASN_NAME(PosSchedulingInfo_r15) {
	ASN_ENUM(ASN_NAME(PosSchedulingInfo_r15, posSI_Periodicity_r15)) posSI_Periodicity_r15;
	ASN_NAME(PosSIB_MappingInfo_r15) posSIB_MappingInfo_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PosSchedulingInfo_r15), ASN_NAME(PosSchedulingInfoList_r15)); // SIZE (1..32)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_r15)), barred),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_r15)), notBarred)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_CRS_r15)), barred),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_CRS_r15)), notBarred)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_CRS_r15));

SIDL_UNION_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15)) {
	ASN_ENUM_VAL(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15), plmn_Identity_r15),
	ASN_ENUM_VAL(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15), plmn_Index_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15)) {
	SIDL_UNION_CASE(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15)_plmn_Identity_r15)
		struct ASN_NAME(PLMN_Identity) plmn_Identity_r15;
	SIDL_UNION_CASE(ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15)_plmn_Index_r15)
		uint8_t plmn_Index_r15; // OF (1..6)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_r15)), reserved),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_r15)), notReserved)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_CRS_r15)), reserved),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_CRS_r15)), notReserved)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_CRS_r15));

struct ASN_NAME(PLMN_IdentityInfo_r15) {
	struct ASN_NAME(PLMN_IdentityInfo_r15, plmn_Identity_5GC_r15) plmn_Identity_5GC_r15;
	ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_r15)) cellReservedForOperatorUse_r15;
	ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_r15, cellReservedForOperatorUse_CRS_r15)) cellReservedForOperatorUse_CRS_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_IdentityInfo_r15), ASN_NAME(PLMN_IdentityList_r15)); // SIZE (1..6)

typedef uint8_t ASN_NAME(RAN_AreaCode_r15); // OF (0..255)

typedef B24 ASN_NAME(TrackingAreaCode_5GC_r15); // SIZE (24)

SIDL_UNION_ENUM(ASN_NAME(CellIdentity_5GC_r15)) {
	ASN_ENUM_VAL(ASN_NAME(CellIdentity_5GC_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CellIdentity_5GC_r15), cellIdentity_r15),
	ASN_ENUM_VAL(ASN_NAME(CellIdentity_5GC_r15), cellId_Index_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(CellIdentity_5GC_r15)) {
	SIDL_UNION_CASE(ASN_NAME(CellIdentity_5GC_r15)_cellIdentity_r15)
		ASN_NAME(CellIdentity) cellIdentity_r15;
	SIDL_UNION_CASE(ASN_NAME(CellIdentity_5GC_r15)_cellId_Index_r15)
		uint8_t cellId_Index_r15; // OF (1..6)
} SIDL_UNION_END;

struct ASN_NAME(CellAccessRelatedInfo_5GC_r15) {
	ASN_NAME(PLMN_IdentityList_r15) plmn_IdentityList_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CellAccessRelatedInfo_5GC_r15), ASN_NAME(RAN_AreaCode_r15), ran_AreaCode_r15);
	ASN_NAME(TrackingAreaCode_5GC_r15) trackingAreaCode_5GC_r15;
	struct ASN_NAME(CellIdentity_5GC_r15) cellIdentity_5GC_r15;
};

struct ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15) {
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_r15)) cellBarred_5GC_r15;
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15, cellBarred_5GC_CRS_r15)) cellBarred_5GC_CRS_r15;
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15), ASN_NAME(CellAccessRelatedInfo_5GC_r15), cellAccessRelatedInfoList_5GC_r15); // SIZE (1..6)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, ims_EmergencySupport5GC_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, ims_EmergencySupport5GC_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, eCallOverIMS_Support5GC_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, eCallOverIMS_Support5GC_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1540_IEs, si_posOffset_r15)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1540_IEs, si_posOffset_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, eDRX_Allowed_5GC_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, eDRX_Allowed_5GC_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, transmissionInControlChRegion_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, transmissionInControlChRegion_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, campingAllowedInCE_r16)), true)
} ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, campingAllowedInCE_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, cp_CIoT_5GS_Optimisation_r16)), true)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, cp_CIoT_5GS_Optimisation_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, up_CIoT_5GS_Optimisation_r16)), true)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, up_CIoT_5GS_Optimisation_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, iab_Support_r16)), true)
} ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, iab_Support_r16));

struct ASN_NAME(PLMN_IdentityInfo_v1610) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, cp_CIoT_5GS_Optimisation_r16)), cp_CIoT_5GS_Optimisation_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, up_CIoT_5GS_Optimisation_r16)), up_CIoT_5GS_Optimisation_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PLMN_IdentityInfo_v1610, iab_Support_r16)), iab_Support_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PLMN_IdentityInfo_v1610), ASN_NAME(PLMN_IdentityList_v1610)); // SIZE (1..6)

struct ASN_NAME(SystemInformationBlockType1_v1610_IEs, nonCriticalExtension) {
};

struct ASN_NAME(SystemInformationBlockType1_v1610_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, eDRX_Allowed_5GC_r16)), eDRX_Allowed_5GC_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, transmissionInControlChRegion_r16)), transmissionInControlChRegion_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1610_IEs, campingAllowedInCE_r16)), campingAllowedInCE_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1610_IEs), ASN_NAME(PLMN_IdentityList_v1610), plmn_IdentityList_v1610);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1610_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1540_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1540_IEs, si_posOffset_r15)), si_posOffset_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1540_IEs), ASN_NAME(SystemInformationBlockType1_v1610_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1530_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, hsdn_Cell_r15)), hsdn_Cell_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1530_IEs), ASN_NAME(CellSelectionInfoCE_v1530), cellSelectionInfoCE_v1530);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1530_IEs, crs_IntfMitigConfig_r15), crs_IntfMitigConfig_r15);
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellBarred_CRS_r15)) cellBarred_CRS_r15;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1530_IEs), ASN_NAME(PLMN_IdentityList_v1530), plmn_IdentityList_v1530);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1530_IEs), ASN_NAME(PosSchedulingInfoList_r15), posSchedulingInfoList_r15);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1530_IEs, cellAccessRelatedInfo_5GC_r15), cellAccessRelatedInfo_5GC_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, ims_EmergencySupport5GC_r15)), ims_EmergencySupport5GC_r15);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1530_IEs, eCallOverIMS_Support5GC_r15)), eCallOverIMS_Support5GC_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1530_IEs), ASN_NAME(SystemInformationBlockType1_v1540_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1450_IEs) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1450_IEs), ASN_NAME(TDD_Config_v1450), tdd_Config_v1450);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1450_IEs), ASN_NAME(SystemInformationBlockType1_v1530_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1430_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1430_IEs, eCallOverIMS_Support_r14)), eCallOverIMS_Support_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1430_IEs), ASN_NAME(TDD_Config_v1430), tdd_Config_v1430);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1430_IEs), ASN_NAME(CellAccessRelatedInfo_r14), cellAccessRelatedInfoList_r14); // SIZE (1..5)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1430_IEs), ASN_NAME(SystemInformationBlockType1_v1450_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1360_IEs) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1360_IEs), ASN_NAME(CellSelectionInfoCE1_v1360), cellSelectionInfoCE1_v1360);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1360_IEs), ASN_NAME(SystemInformationBlockType1_v1430_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1350_IEs) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1350_IEs), ASN_NAME(CellSelectionInfoCE1_r13), cellSelectionInfoCE1_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1350_IEs), ASN_NAME(SystemInformationBlockType1_v1360_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1320_IEs) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1320_IEs, freqHoppingParametersDL_r13), freqHoppingParametersDL_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1320_IEs), ASN_NAME(SystemInformationBlockType1_v1350_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1310_IEs) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1310_IEs), B10, hyperSFN_r13); // SIZE (10)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1310_IEs, eDRX_Allowed_r13)), eDRX_Allowed_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1310_IEs), ASN_NAME(CellSelectionInfoCE_r13), cellSelectionInfoCE_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13), bandwidthReducedAccessRelatedInfo_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1310_IEs), ASN_NAME(SystemInformationBlockType1_v1320_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1250_IEs) {
	struct ASN_NAME(SystemInformationBlockType1_v1250_IEs, cellAccessRelatedInfo_v1250) cellAccessRelatedInfo_v1250;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1250_IEs), ASN_NAME(CellSelectionInfo_v1250), cellSelectionInfo_v1250);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v1250_IEs, freqBandIndicatorPriority_r12)), freqBandIndicatorPriority_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1250_IEs), ASN_NAME(SystemInformationBlockType1_v1310_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v1130_IEs) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1130_IEs), ASN_NAME(TDD_Config_v1130), tdd_Config_v1130);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1130_IEs), ASN_NAME(CellSelectionInfo_v1130), cellSelectionInfo_v1130);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v1130_IEs), ASN_NAME(SystemInformationBlockType1_v1250_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v920_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(SystemInformationBlockType1_v920_IEs, ims_EmergencySupport_r9)), ims_EmergencySupport_r9);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v920_IEs), ASN_NAME(CellSelectionInfo_v920), cellSelectionInfo_v920);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v920_IEs), ASN_NAME(SystemInformationBlockType1_v1130_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1_v890_IEs) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v890_IEs), OCTET_STRING, lateNonCriticalExtension); // CONTAINING (ASN_NAME(SystemInformationBlockType1_v8h0_IEs))
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1_v890_IEs), ASN_NAME(SystemInformationBlockType1_v920_IEs), nonCriticalExtension);
};

struct ASN_NAME(SystemInformationBlockType1) {
	struct ASN_NAME(SystemInformationBlockType1, cellAccessRelatedInfo) cellAccessRelatedInfo;
	struct ASN_NAME(SystemInformationBlockType1, cellSelectionInfo) cellSelectionInfo;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SystemInformationBlockType1), ASN_NAME(P_Max), p_Max);
	ASN_NAME(FreqBandIndicator) freqBandIndicator;
	ASN_NAME(SchedulingInfoList) schedulingInfoList;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1), ASN_NAME(TDD_Config), tdd_Config);
	ASN_ENUM(ASN_NAME(SystemInformationBlockType1, si_WindowLength)) si_WindowLength;
	uint8_t systemInfoValueTag; // OF (0..31)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SystemInformationBlockType1), ASN_NAME(SystemInformationBlockType1_v890_IEs), nonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NAME(BCCH_DL_SCH_MessageType, c1)) {
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType, c1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType, c1), systemInformation),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType, c1), systemInformationBlockType1)
};
SIDL_UNION_BEGIN(ASN_NAME(BCCH_DL_SCH_MessageType, c1)) {
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType, c1)_systemInformation)
		struct ASN_NAME(SystemInformation) systemInformation;
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType, c1)_systemInformationBlockType1)
		struct ASN_NAME(SystemInformationBlockType1) systemInformationBlockType1;
} SIDL_UNION_END;

struct ASN_NAME(BCCH_DL_SCH_MessageType, messageClassExtension) {
};

SIDL_UNION_ENUM(ASN_NAME(BCCH_DL_SCH_MessageType)) {
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType), c1),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType), messageClassExtension)
};
SIDL_UNION_BEGIN(ASN_NAME(BCCH_DL_SCH_MessageType)) {
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType)_c1)
		struct ASN_NAME(BCCH_DL_SCH_MessageType, c1) c1;
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType)_messageClassExtension)
		struct ASN_NAME(BCCH_DL_SCH_MessageType, messageClassExtension) messageClassExtension;
} SIDL_UNION_END;

struct ASN_NAME(BCCH_DL_SCH_Message) {
	struct ASN_NAME(BCCH_DL_SCH_MessageType) message;
};

SIDL_UNION_ENUM(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1)) {
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1), systemInformation_BR_r13),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1), systemInformationBlockType1_BR_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1)) {
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1)_systemInformation_BR_r13)
		struct ASN_NAME(SystemInformation) systemInformation_BR_r13;
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1)_systemInformationBlockType1_BR_r13)
		struct ASN_NAME(SystemInformationBlockType1) systemInformationBlockType1_BR_r13;
} SIDL_UNION_END;

struct ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, messageClassExtension) {
};

SIDL_UNION_ENUM(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13)) {
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13), c1),
	ASN_ENUM_VAL(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13), messageClassExtension)
};
SIDL_UNION_BEGIN(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13)) {
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13)_c1)
		struct ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, c1) c1;
	SIDL_UNION_CASE(ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13)_messageClassExtension)
		struct ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13, messageClassExtension) messageClassExtension;
} SIDL_UNION_END;

struct ASN_NAME(BCCH_DL_SCH_Message_BR) {
	struct ASN_NAME(BCCH_DL_SCH_MessageType_BR_r13) message;
};

typedef B16 ASN_NAME(C_RNTI); // SIZE (16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm31),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm32_v1250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm10_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), rm11_v1310)
} ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic));

struct ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic, subbandCQI) {
	uint8_t k; // OF (1..4)
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic), widebandCQI),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic), subbandCQI)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic)_widebandCQI)
		Null widebandCQI;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic)_subbandCQI)
		struct ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic, subbandCQI) subbandCQI;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportPeriodic, setup) {
	uint16_t cqi_PUCCH_ResourceIndex; // OF (0..1185)
	uint16_t cqi_pmi_ConfigIndex; // OF (0..1023)
	struct ASN_NAME(CQI_ReportPeriodic, setup, cqi_FormatIndicatorPeriodic) cqi_FormatIndicatorPeriodic;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodic, setup), uint16_t, ri_ConfigIndex); // OF (0..1023)
	bool simultaneousAckNackAndCQI;
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodic)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodic)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic)_setup)
		struct ASN_NAME(CQI_ReportPeriodic, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportConfig) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportConfig), ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)), cqi_ReportModeAperiodic);
	int8_t nomPDSCH_RS_EPRE_Offset; // OF (-1..6)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportConfig), ASN_NAME(CQI_ReportPeriodic), cqi_ReportPeriodic);
};

struct ASN_NAME(CQI_ReportAperiodic_r10, setup, aperiodicCSI_Trigger_r10) {
	B8 trigger1_r10; // SIZE (8)
	B8 trigger2_r10; // SIZE (8)
};

struct ASN_NAME(CQI_ReportAperiodic_r10, setup) {
	ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)) cqi_ReportModeAperiodic_r10;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CQI_ReportAperiodic_r10, setup, aperiodicCSI_Trigger_r10), aperiodicCSI_Trigger_r10);
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportAperiodic_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportAperiodic_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportAperiodic_r10), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportAperiodic_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportAperiodic_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportAperiodic_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportAperiodic_r10)_setup)
		struct ASN_NAME(CQI_ReportAperiodic_r10, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, widebandCQI_r10, csi_ReportMode_r10)), submode1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, widebandCQI_r10, csi_ReportMode_r10)), submode2)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, widebandCQI_r10, csi_ReportMode_r10));

struct ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, widebandCQI_r10) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, widebandCQI_r10, csi_ReportMode_r10)), csi_ReportMode_r10);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, subbandCQI_r10, periodicityFactor_r10)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, subbandCQI_r10, periodicityFactor_r10)), n4)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, subbandCQI_r10, periodicityFactor_r10));

struct ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, subbandCQI_r10) {
	uint8_t k; // OF (1..4)
	ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, subbandCQI_r10, periodicityFactor_r10)) periodicityFactor_r10;
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10), widebandCQI_r10),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10), subbandCQI_r10)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10)_widebandCQI_r10)
		struct ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, widebandCQI_r10) widebandCQI_r10;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10)_subbandCQI_r10)
		struct ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10, subbandCQI_r10) subbandCQI_r10;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_Mask_r9)), setup)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_Mask_r9));

struct ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10, setup) {
	uint16_t cqi_pmi_ConfigIndex2_r10; // OF (0..1023)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10, setup), uint16_t, ri_ConfigIndex2_r10); // OF (0..1023)
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10)_setup)
		struct ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportPeriodic_r10, setup) {
	uint16_t cqi_PUCCH_ResourceIndex_r10; // OF (0..1184)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodic_r10, setup), uint16_t, cqi_PUCCH_ResourceIndexP1_r10); // OF (0..1184)
	uint16_t cqi_pmi_ConfigIndex; // OF (0..1023)
	struct ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_FormatIndicatorPeriodic_r10) cqi_FormatIndicatorPeriodic_r10;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodic_r10, setup), uint16_t, ri_ConfigIndex); // OF (0..1023)
	bool simultaneousAckNackAndCQI;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_r10, setup, cqi_Mask_r9)), cqi_Mask_r9);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CQI_ReportPeriodic_r10, setup, csi_ConfigIndex_r10), csi_ConfigIndex_r10);
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodic_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodic_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodic_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodic_r10)_setup)
		struct ASN_NAME(CQI_ReportPeriodic_r10, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_r10, pmi_RI_Report_r9)), setup)
} ASN_ENUM(ASN_NAME(CQI_ReportConfig_r10, pmi_RI_Report_r9));

SIDL_UNION_ENUM(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10)) {
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10), subframeConfig1_5_r10),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10), subframeConfig0_r10),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10), subframeConfig6_r10)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10)) {
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10)_subframeConfig1_5_r10)
		B20 subframeConfig1_5_r10; // SIZE (20)
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10)_subframeConfig0_r10)
		B70 subframeConfig0_r10; // SIZE (70)
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10)_subframeConfig6_r10)
		B60 subframeConfig6_r10; // SIZE (60)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(MeasSubframePattern_r10)) {
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10), subframePatternFDD_r10),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePattern_r10), subframePatternTDD_r10)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasSubframePattern_r10)) {
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePattern_r10)_subframePatternFDD_r10)
		B40 subframePatternFDD_r10; // SIZE (40)
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePattern_r10)_subframePatternTDD_r10)
		struct ASN_NAME(MeasSubframePattern_r10, subframePatternTDD_r10) subframePatternTDD_r10;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10, setup) {
	struct ASN_NAME(MeasSubframePattern_r10) csi_MeasSubframeSet1_r10;
	struct ASN_NAME(MeasSubframePattern_r10) csi_MeasSubframeSet2_r10;
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10)_setup)
		struct ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportConfig_r10) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportConfig_r10), ASN_NAME(CQI_ReportAperiodic_r10), cqi_ReportAperiodic_r10);
	int8_t nomPDSCH_RS_EPRE_Offset; // OF (-1..6)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportConfig_r10), ASN_NAME(CQI_ReportPeriodic_r10), cqi_ReportPeriodic_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_r10, pmi_RI_Report_r9)), pmi_RI_Report_r9);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CQI_ReportConfig_r10, csi_SubframePatternConfig_r10), csi_SubframePatternConfig_r10);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_v1130, simultaneousAckNackAndCQI_Format3_r11)), setup)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_v1130, simultaneousAckNackAndCQI_Format3_r11));

typedef uint8_t ASN_NAME(CQI_ReportPeriodicProcExtId_r11); // OF (1..3)

typedef SIDL_DYNAMIC(ASN_NAME(CQI_ReportPeriodicProcExtId_r11), ASN_NAME(CQI_ReportPeriodicProcExtToReleaseList_r11)); // SIZE (1..3)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, widebandCQI_r11, csi_ReportMode_r11)), submode1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, widebandCQI_r11, csi_ReportMode_r11)), submode2)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, widebandCQI_r11, csi_ReportMode_r11));

struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, widebandCQI_r11) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, widebandCQI_r11, csi_ReportMode_r11)), csi_ReportMode_r11);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, subbandCQI_r11, periodicityFactor_r11)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, subbandCQI_r11, periodicityFactor_r11)), n4)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, subbandCQI_r11, periodicityFactor_r11));

struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, subbandCQI_r11) {
	uint8_t k; // OF (1..4)
	ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, subbandCQI_r11, periodicityFactor_r11)) periodicityFactor_r11;
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11), widebandCQI_r11),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11), subbandCQI_r11)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11)_widebandCQI_r11)
		struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, widebandCQI_r11) widebandCQI_r11;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11)_subbandCQI_r11)
		struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11, subbandCQI_r11) subbandCQI_r11;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11, setup) {
	uint16_t cqi_pmi_ConfigIndex2_r11; // OF (0..1023)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11, setup), uint16_t, ri_ConfigIndex2_r11); // OF (0..1023)
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11)_setup)
		struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11, setup) setup;
} SIDL_UNION_END;

typedef uint16_t ASN_NAME(CRI_ConfigIndex_r13); // OF (0..1023)

struct ASN_NAME(CRI_ReportConfig_r13, setup) {
	ASN_NAME(CRI_ConfigIndex_r13) cri_ConfigIndex_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CRI_ReportConfig_r13, setup), ASN_NAME(CRI_ConfigIndex_r13), cri_ConfigIndex2_r13);
};

SIDL_UNION_ENUM(ASN_NAME(CRI_ReportConfig_r13)) {
	ASN_ENUM_VAL(ASN_NAME(CRI_ReportConfig_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CRI_ReportConfig_r13), release),
	ASN_ENUM_VAL(ASN_NAME(CRI_ReportConfig_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CRI_ReportConfig_r13)) {
	SIDL_UNION_CASE(ASN_NAME(CRI_ReportConfig_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CRI_ReportConfig_r13)_setup)
		struct ASN_NAME(CRI_ReportConfig_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, periodicityFactorWB_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, periodicityFactorWB_r13)), n4)
} ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, periodicityFactorWB_r13));

struct ASN_NAME(CQI_ReportPeriodicProcExt_r11) {
	ASN_NAME(CQI_ReportPeriodicProcExtId_r11) cqi_ReportPeriodicProcExtId_r11;
	uint16_t cqi_pmi_ConfigIndex_r11; // OF (0..1023)
	struct ASN_NAME(CQI_ReportPeriodicProcExt_r11, cqi_FormatIndicatorPeriodic_r11) cqi_FormatIndicatorPeriodic_r11;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodicProcExt_r11), uint16_t, ri_ConfigIndex_r11); // OF (0..1023)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CQI_ReportPeriodicProcExt_r11, csi_ConfigIndex_r11), csi_ConfigIndex_r11);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportPeriodicProcExt_r11), ASN_NAME(CRI_ReportConfig_r13), cri_ReportConfig_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodicProcExt_r11, periodicityFactorWB_r13)), periodicityFactorWB_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CQI_ReportPeriodicProcExt_r11), ASN_NAME(CQI_ReportPeriodicProcExtToAddModList_r11)); // SIZE (1..3)

struct ASN_NAME(CQI_ReportPeriodic_v1130) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportPeriodic_v1130, simultaneousAckNackAndCQI_Format3_r11)), simultaneousAckNackAndCQI_Format3_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodic_v1130), ASN_NAME(CQI_ReportPeriodicProcExtToReleaseList_r11), cqi_ReportPeriodicProcExtToReleaseList_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportPeriodic_v1130), ASN_NAME(CQI_ReportPeriodicProcExtToAddModList_r11), cqi_ReportPeriodicProcExtToAddModList_r11);
};

typedef uint8_t ASN_NAME(CSI_IM_ConfigId_r11); // OF (1..3)

typedef SIDL_DYNAMIC(ASN_NAME(CSI_IM_ConfigId_r11), ASN_NAME(CSI_IM_ConfigToReleaseList_r11)); // SIZE (1..3)

struct ASN_NAME(CSI_IM_Config_r11) {
	ASN_NAME(CSI_IM_ConfigId_r11) csi_IM_ConfigId_r11;
	uint8_t resourceConfig_r11; // OF (0..31)
	uint8_t subframeConfig_r11; // OF (0..154)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_IM_Config_r11), bool, interferenceMeasRestriction_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CSI_IM_Config_r11), ASN_NAME(CSI_IM_ConfigToAddModList_r11)); // SIZE (1..3)

typedef uint8_t ASN_NAME(CSI_ProcessId_r11); // OF (1..4)

typedef SIDL_DYNAMIC(ASN_NAME(CSI_ProcessId_r11), ASN_NAME(CSI_ProcessToReleaseList_r11)); // SIZE (1..4)

typedef uint8_t ASN_NAME(CSI_RS_ConfigNZPId_r11); // OF (1..3)

struct ASN_NAME(P_C_AndCBSR_r11) {
	int8_t p_C_r11; // OF (-8..15)
	BIT_STRING codebookSubsetRestriction_r11;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(P_C_AndCBSR_r11), ASN_NAME(P_C_AndCBSR_Pair_r13a)); // SIZE (1..2)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportBothProc_r11, pmi_RI_Report_r11)), setup)
} ASN_ENUM(ASN_NAME(CQI_ReportBothProc_r11, pmi_RI_Report_r11));

struct ASN_NAME(CQI_ReportBothProc_r11) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportBothProc_r11), ASN_NAME(CSI_ProcessId_r11), ri_Ref_CSI_ProcessId_r11);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportBothProc_r11, pmi_RI_Report_r11)), pmi_RI_Report_r11);
};

struct ASN_NAME(CQI_ReportAperiodicProc_r11) {
	ASN_ENUM(ASN_NAME(CQI_ReportModeAperiodic)) cqi_ReportModeAperiodic_r11;
	bool trigger01_r11;
	bool trigger10_r11;
	bool trigger11_r11;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_Process_r11, alternativeCodebookEnabledFor4TXProc_r12)), true)
} ASN_ENUM(ASN_NAME(CSI_Process_r11, alternativeCodebookEnabledFor4TXProc_r12));

typedef uint8_t ASN_NAME(CSI_IM_ConfigId_r12); // OF (1..4)

SIDL_UNION_ENUM(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12)_setup)
		SIDL_DYNAMIC(ASN_NAME(CSI_IM_ConfigId_r12), setup); // SIZE (1..2)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12)_setup)
		struct ASN_NAME(CQI_ReportAperiodicProc_r11) setup;
} SIDL_UNION_END;

struct ASN_NAME(CQI_ReportAperiodicProc_v1310) {
	bool trigger001_r13;
	bool trigger010_r13;
	bool trigger011_r13;
	bool trigger100_r13;
	bool trigger101_r13;
	bool trigger110_r13;
	bool trigger111_r13;
};

SIDL_UNION_ENUM(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310)_setup)
		struct ASN_NAME(CQI_ReportAperiodicProc_v1310) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310)_setup)
		struct ASN_NAME(CQI_ReportAperiodicProc_v1310) setup;
} SIDL_UNION_END;

struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13, nonPrecoded_r13) {
	BIT_STRING codebookSubsetRestriction1_r13;
	BIT_STRING codebookSubsetRestriction2_r13;
};

struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13, beamformedK1a_r13) {
	BIT_STRING codebookSubsetRestriction3_r13;
};

struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13, beamformedKN_r13) {
	BIT_STRING codebookSubsetRestriction_r13;
};

SIDL_UNION_ENUM(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13)) {
	ASN_ENUM_VAL(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13), nonPrecoded_r13),
	ASN_ENUM_VAL(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13), beamformedK1a_r13),
	ASN_ENUM_VAL(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13), beamformedKN_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13)) {
	SIDL_UNION_CASE(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13)_nonPrecoded_r13)
		struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13, nonPrecoded_r13) nonPrecoded_r13;
	SIDL_UNION_CASE(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13)_beamformedK1a_r13)
		struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13, beamformedK1a_r13) beamformedK1a_r13;
	SIDL_UNION_CASE(ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13)_beamformedKN_r13)
		struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13, beamformedKN_r13) beamformedKN_r13;
} SIDL_UNION_END;

struct ASN_NAME(P_C_AndCBSR_r13) {
	int8_t p_C_r13; // OF (-8..15)
	struct ASN_NAME(P_C_AndCBSR_r13, cbsr_Selection_r13) cbsr_Selection_r13;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(P_C_AndCBSR_r13), ASN_NAME(P_C_AndCBSR_Pair_r13)); // SIZE (1..2)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13)), n8)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13)), n8)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O1_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O1_r13)), n8)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O1_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O2_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O2_r13)), n8)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O2_r13));

typedef uint8_t ASN_NAME(CSI_IM_ConfigId_r13); // OF (1..24)

typedef uint8_t ASN_NAME(ResourceConfig_r13); // OF (0..31)

typedef uint8_t ASN_NAME(NZP_TransmissionComb_r14); // OF (0..2)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14)), d1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14)), d2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14)), d3)
} ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14));

struct ASN_NAME(NZP_ResourceConfig_r13) {
	ASN_NAME(ResourceConfig_r13) resourceConfig_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(NZP_ResourceConfig_r13), ASN_NAME(NZP_TransmissionComb_r14), transmissionComb_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(NZP_ResourceConfig_r13), ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14)), frequencyDensity_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup, cdmType_r13)), cdm2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup, cdmType_r13)), cdm4)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup, cdmType_r13));

struct ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup), ASN_NAME(NZP_ResourceConfig_r13), nzp_resourceConfigList_r13); // SIZE (1..2)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup, cdmType_r13)), cdmType_r13);
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13)_setup)
		struct ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CSI_RS_ConfigNonPrecoded_r13) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13), ASN_NAME(P_C_AndCBSR_Pair_r13), p_C_AndCBSRList_r13);
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN1_r13)) codebookConfigN1_r13;
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookConfigN2_r13)) codebookConfigN2_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O1_r13)), codebookOverSamplingRateConfig_O1_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13, codebookOverSamplingRateConfig_O2_r13)), codebookOverSamplingRateConfig_O2_r13);
	uint8_t codebookConfig_r13; // OF (1..4)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13), ASN_NAME(CSI_IM_ConfigId_r13), csi_IM_ConfigIdList_r13); // SIZE (1..2)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigNonPrecoded_r13), ASN_NAME(CSI_RS_ConfigNZP_EMIMO_r13), csi_RS_ConfigNZP_EMIMO_r13);
};

typedef uint8_t ASN_NAME(CSI_RS_ConfigNZPId_r13); // OF (1..24)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r13, alternativeCodebookEnabledBeamformed_r13)), true)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r13, alternativeCodebookEnabledBeamformed_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r13, channelMeasRestriction_r13)), on)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r13, channelMeasRestriction_r13));

struct ASN_NAME(CSI_RS_ConfigBeamformed_r13) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r13), ASN_NAME(CSI_RS_ConfigNZPId_r13), csi_RS_ConfigNZPIdListExt_r13); // SIZE (1..7)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r13), ASN_NAME(CSI_IM_ConfigId_r13), csi_IM_ConfigIdList_r13); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r13), ASN_NAME(P_C_AndCBSR_Pair_r13), p_C_AndCBSR_PerResourceConfigList_r13); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r13), bool, ace_For4Tx_PerResourceConfigList_r13); // SIZE (1..7)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r13, alternativeCodebookEnabledBeamformed_r13)), alternativeCodebookEnabledBeamformed_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r13, channelMeasRestriction_r13)), channelMeasRestriction_r13);
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup), nonPrecoded_r13),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup), beamformed_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup)_nonPrecoded_r13)
		struct ASN_NAME(CSI_RS_ConfigNonPrecoded_r13) nonPrecoded_r13;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup)_beamformed_r13)
		struct ASN_NAME(CSI_RS_ConfigBeamformed_r13) beamformed_r13;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_r13)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_r13), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_r13)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_r13)_setup)
		struct ASN_NAME(CSI_RS_ConfigEMIMO_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430, cdmType_v1430)), cdm8)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430, cdmType_v1430));

struct ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430), ASN_NAME(NZP_ResourceConfig_r13), nzp_resourceConfigListExt_r14); // SIZE (0..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430, cdmType_v1430)), cdmType_v1430);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)), n16)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN2_v1430)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN2_v1430)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN2_v1430)), n7)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN2_v1430));

struct ASN_NAME(CSI_RS_Config_NZP_v1430) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_Config_NZP_v1430), ASN_NAME(NZP_TransmissionComb_r14), transmissionComb_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_Config_NZP_v1430), ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14)), frequencyDensity_r14);
};

struct ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430), ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430), csi_RS_ConfigNZP_EMIMO_v1430);
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN1_v1430)) codebookConfigN1_v1430;
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430, codebookConfigN2_v1430)) codebookConfigN2_v1430;
	struct ASN_NAME(CSI_RS_Config_NZP_v1430) nzp_ResourceConfigTM9_Original_v1430;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, antennaPortsCount_r11)), an1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, antennaPortsCount_r11)), an2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, antennaPortsCount_r11)), an4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, antennaPortsCount_r11)), an8)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, antennaPortsCount_r11));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, crs_PortsCount_r11)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, crs_PortsCount_r11)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, crs_PortsCount_r11)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, crs_PortsCount_r11)), spare1)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, crs_PortsCount_r11));

struct ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11, setup) {
	ASN_NAME(MBSFN_SubframeConfigList) subframeConfigList;
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11)_setup)
		struct ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11) {
	uint16_t qcl_ScramblingIdentity_r11; // OF (0..503)
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, crs_PortsCount_r11)) crs_PortsCount_r11;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11, mbsfn_SubframeConfigList_r11), mbsfn_SubframeConfigList_r11);
};

typedef uint8_t ASN_NAME(CSI_RS_ConfigNZPId_v1310); // OF (4..24)

struct ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430, setup) {
	ASN_NAME(MBSFN_SubframeConfigList_v1430) subframeConfigList_v1430;
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430)_setup)
		struct ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CSI_RS_ConfigNZP_r11) {
	ASN_NAME(CSI_RS_ConfigNZPId_r11) csi_RS_ConfigNZPId_r11;
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_r11, antennaPortsCount_r11)) antennaPortsCount_r11;
	uint8_t resourceConfig_r11; // OF (0..31)
	uint8_t subframeConfig_r11; // OF (0..154)
	uint16_t scramblingIdentity_r11; // OF (0..503)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_RS_ConfigNZP_r11, qcl_CRS_Info_r11), qcl_CRS_Info_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigNZP_r11), ASN_NAME(CSI_RS_ConfigNZPId_v1310), csi_RS_ConfigNZPId_v1310);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigNZP_r11), ASN_NAME(NZP_TransmissionComb_r14), transmissionComb_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigNZP_r11), ASN_ENUM(ASN_NAME(NZP_FrequencyDensity_r14)), frequencyDensity_r14);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_RS_ConfigNZP_r11, mbsfn_SubframeConfigList_v1430), mbsfn_SubframeConfigList_v1430);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_Activation_r14, csi_RS_NZP_mode_r14)), semiPersistent),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_Activation_r14, csi_RS_NZP_mode_r14)), aperiodic)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_Activation_r14, csi_RS_NZP_mode_r14));

struct ASN_NAME(CSI_RS_ConfigNZP_Activation_r14) {
	ASN_ENUM(ASN_NAME(CSI_RS_ConfigNZP_Activation_r14, csi_RS_NZP_mode_r14)) csi_RS_NZP_mode_r14;
	uint8_t activatedResources_r14; // OF (0..4)
};

struct ASN_NAME(CSI_RS_ConfigBeamformed_v1430) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_v1430), ASN_NAME(CSI_RS_ConfigNZP_r11), csi_RS_ConfigNZP_ApList_r14); // SIZE (1..8)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_v1430), ASN_NAME(CSI_RS_Config_NZP_v1430), nzp_ResourceConfigOriginal_v1430);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_v1430), ASN_NAME(CSI_RS_ConfigNZP_Activation_r14), csi_RS_NZP_Activation_r14);
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup), nonPrecoded_v1430),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup), beamformed_v1430)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup)_nonPrecoded_v1430)
		struct ASN_NAME(CSI_RS_ConfigNonPrecoded_v1430) nonPrecoded_v1430;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup)_beamformed_v1430)
		struct ASN_NAME(CSI_RS_ConfigBeamformed_v1430) beamformed_v1430;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_v1430)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1430), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1430), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1430), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_v1430)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1430)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1430)_setup)
		struct ASN_NAME(CSI_RS_ConfigEMIMO_v1430, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r14, alternativeCodebookEnabledBeamformed_r14)), true)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r14, alternativeCodebookEnabledBeamformed_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r14, channelMeasRestriction_r14)), on)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r14, channelMeasRestriction_r14));

struct ASN_NAME(CSI_RS_ConfigBeamformed_r14) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), ASN_NAME(CSI_RS_ConfigNZPId_r13), csi_RS_ConfigNZPIdListExt_r14); // SIZE (1..7)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), ASN_NAME(CSI_IM_ConfigId_r13), csi_IM_ConfigIdList_r14); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), ASN_NAME(P_C_AndCBSR_Pair_r13), p_C_AndCBSR_PerResourceConfigList_r14); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), bool, ace_For4Tx_PerResourceConfigList_r14); // SIZE (1..7)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r14, alternativeCodebookEnabledBeamformed_r14)), alternativeCodebookEnabledBeamformed_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigBeamformed_r14, channelMeasRestriction_r14)), channelMeasRestriction_r14);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), ASN_NAME(CSI_RS_ConfigNZP_r11), csi_RS_ConfigNZP_ApList_r14); // SIZE (1..8)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), ASN_NAME(CSI_RS_Config_NZP_v1430), nzp_ResourceConfigOriginal_v1430);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigBeamformed_r14), ASN_NAME(CSI_RS_ConfigNZP_Activation_r14), csi_RS_NZP_Activation_r14);
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO2_r14)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO2_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO2_r14), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO2_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO2_r14)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO2_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO2_r14)_setup)
		struct ASN_NAME(CSI_RS_ConfigBeamformed_r14) setup;
} SIDL_UNION_END;

struct ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14, setup) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14, setup), uint16_t, periodicityOffsetIndex_r14); // OF (0..1023)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14, setup), ASN_NAME(CSI_RS_ConfigEMIMO2_r14), eMIMO_Type2_r14);
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14)_setup)
		struct ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), n16)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN2_r1480)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN2_r1480)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN2_r1480)), n7)
} ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN2_r1480));

struct ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480), ASN_NAME(CSI_RS_ConfigNZP_EMIMO_v1430), csi_RS_ConfigNZP_EMIMO_v1480);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN1_v1480)), codebookConfigN1_v1480);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480, codebookConfigN2_r1480)), codebookConfigN2_r1480);
	struct ASN_NAME(CSI_RS_Config_NZP_v1430) nzp_ResourceConfigTM9_Original_v1480;
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup), nonPrecoded_v1480),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup), beamformed_v1480)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup)_nonPrecoded_v1480)
		struct ASN_NAME(CSI_RS_ConfigNonPrecoded_v1480) nonPrecoded_v1480;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup)_beamformed_v1480)
		struct ASN_NAME(CSI_RS_ConfigBeamformed_v1430) beamformed_v1480;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_v1480)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1480), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1480), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1480), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_v1480)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1480)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1480)_setup)
		struct ASN_NAME(CSI_RS_ConfigEMIMO_v1480, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(P_C_AndCBSR_r15) {
	int8_t p_C_r15; // OF (-8..15)
	BIT_STRING codebookSubsetRestriction4_r15;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(P_C_AndCBSR_r15), ASN_NAME(P_C_AndCBSR_Pair_r15)); // SIZE (1..2)

struct ASN_NAME(CSI_RS_ConfigNonPrecoded_v1530) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_RS_ConfigNonPrecoded_v1530), ASN_NAME(P_C_AndCBSR_Pair_r15), p_C_AndCBSRList_r15);
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_v1530, setup)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1530, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1530, setup), nonPrecoded_v1530)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_v1530, setup)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1530, setup)_nonPrecoded_v1530)
		struct ASN_NAME(CSI_RS_ConfigNonPrecoded_v1530) nonPrecoded_v1530;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_ConfigEMIMO_v1530)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1530), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1530), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_ConfigEMIMO_v1530), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_ConfigEMIMO_v1530)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1530)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_ConfigEMIMO_v1530)_setup)
		struct ASN_NAME(CSI_RS_ConfigEMIMO_v1530, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(CSI_Process_r11) {
	ASN_NAME(CSI_ProcessId_r11) csi_ProcessId_r11;
	ASN_NAME(CSI_RS_ConfigNZPId_r11) csi_RS_ConfigNZPId_r11;
	ASN_NAME(CSI_IM_ConfigId_r11) csi_IM_ConfigId_r11;
	ASN_NAME(P_C_AndCBSR_Pair_r13a) p_C_AndCBSRList_r11;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CQI_ReportBothProc_r11), cqi_ReportBothProc_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_Process_r11), uint8_t, cqi_ReportPeriodicProcId_r11); // OF (0..3)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CQI_ReportAperiodicProc_r11), cqi_ReportAperiodicProc_r11);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CSI_Process_r11, alternativeCodebookEnabledFor4TXProc_r12)), alternativeCodebookEnabledFor4TXProc_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_Process_r11, csi_IM_ConfigIdList_r12), csi_IM_ConfigIdList_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_r12), cqi_ReportAperiodicProc2_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc_v1310), cqi_ReportAperiodicProc_v1310);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_Process_r11, cqi_ReportAperiodicProc2_v1310), cqi_ReportAperiodicProc2_v1310);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CSI_RS_ConfigEMIMO_r13), eMIMO_Type_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CSI_RS_ConfigEMIMO_v1430), dummy);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CSI_RS_ConfigEMIMO_Hybrid_r14), eMIMO_Hybrid_r14);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_Process_r11), bool, advancedCodebookEnabled_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CSI_RS_ConfigEMIMO_v1480), eMIMO_Type_v1480);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_Process_r11), bool, feCOMP_CSI_Enabled_v1530);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_Process_r11), ASN_NAME(CSI_RS_ConfigEMIMO_v1530), eMIMO_Type_v1530);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CSI_Process_r11), ASN_NAME(CSI_ProcessToAddModList_r11)); // SIZE (1..4)

struct ASN_NAME(CQI_ReportBoth_r11) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportBoth_r11), ASN_NAME(CSI_IM_ConfigToReleaseList_r11), csi_IM_ConfigToReleaseList_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportBoth_r11), ASN_NAME(CSI_IM_ConfigToAddModList_r11), csi_IM_ConfigToAddModList_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportBoth_r11), ASN_NAME(CSI_ProcessToReleaseList_r11), csi_ProcessToReleaseList_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportBoth_r11), ASN_NAME(CSI_ProcessToAddModList_r11), csi_ProcessToAddModList_r11);
};

struct ASN_NAME(CQI_ReportConfig_v1130) {
	struct ASN_NAME(CQI_ReportPeriodic_v1130) cqi_ReportPeriodic_v1130;
	struct ASN_NAME(CQI_ReportBoth_r11) cqi_ReportBoth_r11;
};

struct ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12, setup) {
	B10 csi_MeasSubframeSets_r12; // SIZE (10)
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12)_setup)
		struct ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12, setup) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NAME(CSI_IM_ConfigId_v1250); // OF (4)

typedef uint8_t ASN_NAME(CSI_IM_ConfigId_v1310); // OF (5..24)

struct ASN_NAME(CSI_IM_ConfigExt_r12) {
	ASN_NAME(CSI_IM_ConfigId_v1250) csi_IM_ConfigId_v1250;
	uint8_t resourceConfig_r12; // OF (0..31)
	uint8_t subframeConfig_r12; // OF (0..154)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_IM_ConfigExt_r12), bool, interferenceMeasRestriction_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CSI_IM_ConfigExt_r12), ASN_NAME(CSI_IM_ConfigId_v1310), csi_IM_ConfigId_v1310);
};

struct ASN_NAME(CQI_ReportBoth_v1250) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(CQI_ReportBoth_v1250), ASN_NAME(CSI_IM_ConfigId_v1250), csi_IM_ConfigToReleaseListExt_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportBoth_v1250), ASN_NAME(CSI_IM_ConfigExt_r12), csi_IM_ConfigToAddModListExt_r12);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportAperiodic_v1250, setup, aperiodicCSI_Trigger_v1250, trigger_SubframeSetIndicator_r12)), s1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportAperiodic_v1250, setup, aperiodicCSI_Trigger_v1250, trigger_SubframeSetIndicator_r12)), s2)
} ASN_ENUM(ASN_NAME(CQI_ReportAperiodic_v1250, setup, aperiodicCSI_Trigger_v1250, trigger_SubframeSetIndicator_r12));

struct ASN_NAME(CQI_ReportAperiodic_v1250, setup, aperiodicCSI_Trigger_v1250) {
	ASN_ENUM(ASN_NAME(CQI_ReportAperiodic_v1250, setup, aperiodicCSI_Trigger_v1250, trigger_SubframeSetIndicator_r12)) trigger_SubframeSetIndicator_r12;
	B8 trigger1_SubframeSetIndicator_r12; // SIZE (8)
	B8 trigger2_SubframeSetIndicator_r12; // SIZE (8)
};

struct ASN_NAME(CQI_ReportAperiodic_v1250, setup) {
	struct ASN_NAME(CQI_ReportAperiodic_v1250, setup, aperiodicCSI_Trigger_v1250) aperiodicCSI_Trigger_v1250;
};

SIDL_UNION_ENUM(ASN_NAME(CQI_ReportAperiodic_v1250)) {
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportAperiodic_v1250), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportAperiodic_v1250), release),
	ASN_ENUM_VAL(ASN_NAME(CQI_ReportAperiodic_v1250), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CQI_ReportAperiodic_v1250)) {
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportAperiodic_v1250)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CQI_ReportAperiodic_v1250)_setup)
		struct ASN_NAME(CQI_ReportAperiodic_v1250, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v1250, altCQI_Table_r12)), allSubframes),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v1250, altCQI_Table_r12)), csi_SubframeSet1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v1250, altCQI_Table_r12)), csi_SubframeSet2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v1250, altCQI_Table_r12)), spare1)
} ASN_ENUM(ASN_NAME(CQI_ReportConfig_v1250, altCQI_Table_r12));

struct ASN_NAME(CQI_ReportConfig_v1250) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CQI_ReportConfig_v1250, csi_SubframePatternConfig_r12), csi_SubframePatternConfig_r12);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportConfig_v1250), ASN_NAME(CQI_ReportBoth_v1250), cqi_ReportBoth_v1250);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CQI_ReportConfig_v1250), ASN_NAME(CQI_ReportAperiodic_v1250), cqi_ReportAperiodic_v1250);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v1250, altCQI_Table_r12)), altCQI_Table_r12);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v920, cqi_Mask_r9)), setup)
} ASN_ENUM(ASN_NAME(CQI_ReportConfig_v920, cqi_Mask_r9));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v920, pmi_RI_Report_r9)), setup)
} ASN_ENUM(ASN_NAME(CQI_ReportConfig_v920, pmi_RI_Report_r9));

struct ASN_NAME(CQI_ReportConfig_v920) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v920, cqi_Mask_r9)), cqi_Mask_r9);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(CQI_ReportConfig_v920, pmi_RI_Report_r9)), pmi_RI_Report_r9);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup, antennaPortsCount_r10)), an1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup, antennaPortsCount_r10)), an2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup, antennaPortsCount_r10)), an4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup, antennaPortsCount_r10)), an8)
} ASN_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup, antennaPortsCount_r10));

struct ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup) {
	ASN_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup, antennaPortsCount_r10)) antennaPortsCount_r10;
	uint8_t resourceConfig_r10; // OF (0..31)
	uint8_t subframeConfig_r10; // OF (0..154)
	int8_t p_C_r10; // OF (-8..15)
};

SIDL_UNION_ENUM(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10), release),
	ASN_ENUM_VAL(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10)_setup)
		struct ASN_NAME(CSI_RS_Config_r10, csi_RS_r10, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(ZeroTxPowerCSI_RS_r12) {
	B16 zeroTxPowerResourceConfigList_r12; // SIZE (16)
	uint8_t zeroTxPowerSubframeConfig_r12; // OF (0..154)
};

SIDL_UNION_ENUM(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12)) {
	ASN_ENUM_VAL(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12), release),
	ASN_ENUM_VAL(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12)) {
	SIDL_UNION_CASE(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12)_setup)
		struct ASN_NAME(ZeroTxPowerCSI_RS_r12) setup;
} SIDL_UNION_END;

struct ASN_NAME(CSI_RS_Config_r10) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(CSI_RS_Config_r10, csi_RS_r10), csi_RS_r10);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(CSI_RS_Config_r10), ASN_NAME(ZeroTxPowerCSI_RS_Conf_r12), zeroTxPowerCSI_RS_r10);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CSI_RS_ConfigNZP_r11), ASN_NAME(CSI_RS_ConfigNZPToAddModList_r11)); // SIZE (1..3)

typedef SIDL_DYNAMIC(ASN_NAME(CSI_RS_ConfigNZPId_r11), ASN_NAME(CSI_RS_ConfigNZPToReleaseList_r11)); // SIZE (1..3)

typedef uint8_t ASN_NAME(CSI_RS_ConfigZPId_r11); // OF (1..4)

struct ASN_NAME(CSI_RS_ConfigZP_r11) {
	ASN_NAME(CSI_RS_ConfigZPId_r11) csi_RS_ConfigZPId_r11;
	B16 resourceConfigList_r11; // SIZE (16)
	uint8_t subframeConfig_r11; // OF (0..154)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(CSI_RS_ConfigZP_r11), ASN_NAME(CSI_RS_ConfigZPToAddModList_r11)); // SIZE (1..4)

typedef SIDL_DYNAMIC(ASN_NAME(CSI_RS_ConfigZPId_r11), ASN_NAME(CSI_RS_ConfigZPToReleaseList_r11)); // SIZE (1..4)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth)), spare1)
} ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, dl_Bandwidth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth)), spare1)
} ASN_ENUM(ASN_NAME(CarrierBandwidthEUTRA, ul_Bandwidth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), eea0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), eea1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), eea2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), eea3_v1130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12)), spare1)
} ASN_ENUM(ASN_NAME(CipheringAlgorithm_r12));

struct ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10, own_r10) {
	bool cif_Presence_r10;
};

typedef uint8_t ASN_NAME(ServCellIndex_r10); // OF (0..7)

struct ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10, other_r10) {
	ASN_NAME(ServCellIndex_r10) schedulingCellId_r10;
	uint8_t pdsch_Start_r10; // OF (1..4)
};

SIDL_UNION_ENUM(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10)) {
	ASN_ENUM_VAL(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10), own_r10),
	ASN_ENUM_VAL(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10), other_r10)
};
SIDL_UNION_BEGIN(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10)) {
	SIDL_UNION_CASE(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10)_own_r10)
		struct ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10, own_r10) own_r10;
	SIDL_UNION_CASE(ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10)_other_r10)
		struct ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10, other_r10) other_r10;
} SIDL_UNION_END;

struct ASN_NAME(CrossCarrierSchedulingConfig_r10) {
	struct ASN_NAME(CrossCarrierSchedulingConfig_r10, schedulingCellInfo_r10) schedulingCellInfo_r10;
};

struct ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13, own_r13) {
	bool cif_Presence_r13;
};

typedef uint8_t ASN_NAME(ServCellIndex_r13); // OF (0..31)

struct ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13, other_r13) {
	ASN_NAME(ServCellIndex_r13) schedulingCellId_r13;
	uint8_t pdsch_Start_r13; // OF (1..4)
	uint8_t cif_InSchedulingCell_r13; // OF (1..7)
};

SIDL_UNION_ENUM(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13)) {
	ASN_ENUM_VAL(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13), own_r13),
	ASN_ENUM_VAL(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13), other_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13)) {
	SIDL_UNION_CASE(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13)_own_r13)
		struct ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13, own_r13) own_r13;
	SIDL_UNION_CASE(ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13)_other_r13)
		struct ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13, other_r13) other_r13;
} SIDL_UNION_END;

struct ASN_NAME(CrossCarrierSchedulingConfig_r13) {
	struct ASN_NAME(CrossCarrierSchedulingConfig_r13, schedulingCellInfo_r13) schedulingCellInfo_r13;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms55),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms95),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms170),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms190),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_Reordering)), ms1600_v1310)
} ASN_ENUM(ASN_NAME(T_Reordering));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms55),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms95),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms105),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms115),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms125),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms135),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms145),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms155),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms165),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms170),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms175),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms185),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms190),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms195),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms205),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms210),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms215),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms220),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms225),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms230),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms235),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms245),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms350),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms450),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms800_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms1000_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms1200_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms1600_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms2000_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), ms2400_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_StatusProhibit)), spare1)
} ASN_ENUM(ASN_NAME(T_StatusProhibit));

struct ASN_NAME(DL_AM_RLC) {
	ASN_ENUM(ASN_NAME(T_Reordering)) t_Reordering;
	ASN_ENUM(ASN_NAME(T_StatusProhibit)) t_StatusProhibit;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SN_FieldLength)), size5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SN_FieldLength)), size10)
} ASN_ENUM(ASN_NAME(SN_FieldLength));

struct ASN_NAME(DL_UM_RLC) {
	ASN_ENUM(ASN_NAME(SN_FieldLength)) sn_FieldLength;
	ASN_ENUM(ASN_NAME(T_Reordering)) t_Reordering;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)), psf200)
} ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf1920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), psf0_v1020),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)), spare1)
} ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)), psf33)
} ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer));

SIDL_UNION_ENUM(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)) {
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf10),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf20),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf32),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf40),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf64),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf80),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf128),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf160),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf256),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf320),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf512),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf640),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf1024),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf1280),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf2048),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset), sf2560)
};
SIDL_UNION_BEGIN(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)) {
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf10)
		uint8_t sf10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf20)
		uint8_t sf20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf32)
		uint8_t sf32; // OF (0..31)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf40)
		uint8_t sf40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf64)
		uint8_t sf64; // OF (0..63)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf80)
		uint8_t sf80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf128)
		uint8_t sf128; // OF (0..127)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf160)
		uint8_t sf160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf256)
		uint8_t sf256; // OF (0..255)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf320)
		uint16_t sf320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf512)
		uint16_t sf512; // OF (0..511)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf640)
		uint16_t sf640; // OF (0..639)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf1024)
		uint16_t sf1024; // OF (0..1023)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf1280)
		uint16_t sf1280; // OF (0..1279)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf2048)
		uint16_t sf2048; // OF (0..2047)
	SIDL_UNION_CASE(ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset)_sf2560)
		uint16_t sf2560; // OF (0..2559)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)), sf640)
} ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle));

struct ASN_NAME(DRX_Config, setup, shortDRX) {
	ASN_ENUM(ASN_NAME(DRX_Config, setup, shortDRX, shortDRX_Cycle)) shortDRX_Cycle;
	uint8_t drxShortCycleTimer; // OF (1..16)
};

struct ASN_NAME(DRX_Config, setup) {
	ASN_ENUM(ASN_NAME(DRX_Config, setup, onDurationTimer)) onDurationTimer;
	ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_InactivityTimer)) drx_InactivityTimer;
	ASN_ENUM(ASN_NAME(DRX_Config, setup, drx_RetransmissionTimer)) drx_RetransmissionTimer;
	struct ASN_NAME(DRX_Config, setup, longDRX_CycleStartOffset) longDRX_CycleStartOffset;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(DRX_Config, setup, shortDRX), shortDRX);
};

SIDL_UNION_ENUM(ASN_NAME(DRX_Config)) {
	ASN_ENUM_VAL(ASN_NAME(DRX_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config), release),
	ASN_ENUM_VAL(ASN_NAME(DRX_Config), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(DRX_Config)) {
	SIDL_UNION_CASE(ASN_NAME(DRX_Config)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(DRX_Config)_setup)
		struct ASN_NAME(DRX_Config, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfig_r12, setup, eimta_CommandPeriodicity_r12)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfig_r12, setup, eimta_CommandPeriodicity_r12)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfig_r12, setup, eimta_CommandPeriodicity_r12)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfig_r12, setup, eimta_CommandPeriodicity_r12)), sf80)
} ASN_ENUM(ASN_NAME(EIMTA_MainConfig_r12, setup, eimta_CommandPeriodicity_r12));

struct ASN_NAME(EIMTA_MainConfig_r12, setup) {
	ASN_NAME(C_RNTI) eimta_RNTI_r12;
	ASN_ENUM(ASN_NAME(EIMTA_MainConfig_r12, setup, eimta_CommandPeriodicity_r12)) eimta_CommandPeriodicity_r12;
	B10 eimta_CommandSubframeSet_r12; // SIZE (10)
};

SIDL_UNION_ENUM(ASN_NAME(EIMTA_MainConfig_r12)) {
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfig_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfig_r12), release),
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfig_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EIMTA_MainConfig_r12)) {
	SIDL_UNION_CASE(ASN_NAME(EIMTA_MainConfig_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EIMTA_MainConfig_r12)_setup)
		struct ASN_NAME(EIMTA_MainConfig_r12, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, eimta_HARQ_ReferenceConfig_r12)), sa2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, eimta_HARQ_ReferenceConfig_r12)), sa4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, eimta_HARQ_ReferenceConfig_r12)), sa5)
} ASN_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, eimta_HARQ_ReferenceConfig_r12));

struct ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250, setup) {
	ASN_NAME(MBSFN_SubframeConfigList) subframeConfigList_r12;
};

SIDL_UNION_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250)) {
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250), release),
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250)) {
	SIDL_UNION_CASE(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250)_setup)
		struct ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(EIMTA_MainConfigServCell_r12, setup) {
	uint8_t eimta_UL_DL_ConfigIndex_r12; // OF (1..5)
	ASN_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12, setup, eimta_HARQ_ReferenceConfig_r12)) eimta_HARQ_ReferenceConfig_r12;
	struct ASN_NAME(EIMTA_MainConfigServCell_r12, setup, mbsfn_SubframeConfigList_v1250) mbsfn_SubframeConfigList_v1250;
};

SIDL_UNION_ENUM(ASN_NAME(EIMTA_MainConfigServCell_r12)) {
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfigServCell_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfigServCell_r12), release),
	ASN_ENUM_VAL(ASN_NAME(EIMTA_MainConfigServCell_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EIMTA_MainConfigServCell_r12)) {
	SIDL_UNION_CASE(ASN_NAME(EIMTA_MainConfigServCell_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EIMTA_MainConfigServCell_r12)_setup)
		struct ASN_NAME(EIMTA_MainConfigServCell_r12, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11, setup) {
	struct ASN_NAME(MeasSubframePattern_r10) subframePattern_r11;
};

SIDL_UNION_ENUM(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11)) {
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11), release),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11)) {
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11)_setup)
		struct ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11, setup) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NAME(EPDCCH_SetConfigId_r11); // OF (0..1)

typedef SIDL_DYNAMIC(ASN_NAME(EPDCCH_SetConfigId_r11), ASN_NAME(EPDCCH_SetConfigToReleaseList_r11)); // SIZE (1..2)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, transmissionType_r11)), localised),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, transmissionType_r11)), distributed)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, transmissionType_r11));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11, numberPRB_Pairs_r11)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11, numberPRB_Pairs_r11)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11, numberPRB_Pairs_r11)), n8)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11, numberPRB_Pairs_r11));

struct ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11) {
	ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11, numberPRB_Pairs_r11)) numberPRB_Pairs_r11;
	BIT_STRING resourceBlockAssignment_r11; // SIZE (4..38)
};

typedef uint8_t ASN_NAME(PDSCH_RE_MappingQCL_ConfigId_r11); // OF (1..4)

SIDL_UNION_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12)) {
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12), release),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12)) {
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12)_setup)
		ASN_NAME(CSI_RS_ConfigZPId_r11) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310, setup)), n6)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310, setup));

SIDL_UNION_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310)) {
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310), release),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310)) {
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310)_setup)
		ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310, setup)) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)), sf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)), sf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)), sf32)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_pdsch_HoppingConfig_r13)), on),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_pdsch_HoppingConfig_r13)), off)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_pdsch_HoppingConfig_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v1dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v2dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)), v10)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), v20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)), spare1)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13));

SIDL_UNION_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13)) {
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13), fdd_r13),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13), tdd_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13)) {
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13)_fdd_r13)
		ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, fdd_r13)) fdd_r13;
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13)_tdd_r13)
		ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13, tdd_r13)) tdd_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)), r256)
} ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13));

struct ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup) {
	ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, csi_NumRepetitionCE_r13)) csi_NumRepetitionCE_r13;
	ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_pdsch_HoppingConfig_r13)) mpdcch_pdsch_HoppingConfig_r13;
	struct ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_StartSF_UESS_r13) mpdcch_StartSF_UESS_r13;
	ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup, mpdcch_NumRepetition_r13)) mpdcch_NumRepetition_r13;
	uint8_t mpdcch_Narrowband_r13; // OF (1..16)
};

SIDL_UNION_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13)) {
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13), release),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13)) {
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13)_setup)
		struct ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(EPDCCH_SetConfig_r11) {
	ASN_NAME(EPDCCH_SetConfigId_r11) setConfigId_r11;
	ASN_ENUM(ASN_NAME(EPDCCH_SetConfig_r11, transmissionType_r11)) transmissionType_r11;
	struct ASN_NAME(EPDCCH_SetConfig_r11, resourceBlockAssignment_r11) resourceBlockAssignment_r11;
	uint16_t dmrs_ScramblingSequenceInt_r11; // OF (0..503)
	uint16_t pucch_ResourceStartOffset_r11; // OF (0..2047)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(EPDCCH_SetConfig_r11), ASN_NAME(PDSCH_RE_MappingQCL_ConfigId_r11), re_MappingQCL_ConfigId_r11);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EPDCCH_SetConfig_r11, csi_RS_ConfigZPId2_r12), csi_RS_ConfigZPId2_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EPDCCH_SetConfig_r11, numberPRB_Pairs_v1310), numberPRB_Pairs_v1310);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EPDCCH_SetConfig_r11, mpdcch_config_r13), mpdcch_config_r13);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(EPDCCH_SetConfig_r11), ASN_NAME(EPDCCH_SetConfigToAddModList_r11)); // SIZE (1..2)

struct ASN_NAME(EPDCCH_Config_r11, config_r11, setup) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EPDCCH_Config_r11, config_r11, setup, subframePatternConfig_r11), subframePatternConfig_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(EPDCCH_Config_r11, config_r11, setup), uint8_t, startSymbol_r11); // OF (1..4)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(EPDCCH_Config_r11, config_r11, setup), ASN_NAME(EPDCCH_SetConfigToReleaseList_r11), setConfigToReleaseList_r11);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(EPDCCH_Config_r11, config_r11, setup), ASN_NAME(EPDCCH_SetConfigToAddModList_r11), setConfigToAddModList_r11);
};

SIDL_UNION_ENUM(ASN_NAME(EPDCCH_Config_r11, config_r11)) {
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_Config_r11, config_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_Config_r11, config_r11), release),
	ASN_ENUM_VAL(ASN_NAME(EPDCCH_Config_r11, config_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(EPDCCH_Config_r11, config_r11)) {
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_Config_r11, config_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(EPDCCH_Config_r11, config_r11)_setup)
		struct ASN_NAME(EPDCCH_Config_r11, config_r11, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(EPDCCH_Config_r11) {
	struct ASN_NAME(EPDCCH_Config_r11, config_r11) config_r11;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_r13, subframeStartPosition_r13)), s0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_r13, subframeStartPosition_r13)), s07)
} ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_r13, subframeStartPosition_r13));

struct ASN_NAME(LAA_SCellConfiguration_r13) {
	ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_r13, subframeStartPosition_r13)) subframeStartPosition_r13;
	B8 laa_SCellSubframeConfig_r13; // SIZE (8)
};

struct ASN_NAME(CrossCarrierSchedulingConfigLAA_UL_r14) {
	ASN_NAME(ServCellIndex_r13) schedulingCellId_r14;
	uint8_t cif_InSchedulingCell_r14; // OF (1..7)
};

struct ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14, setup) {
	struct ASN_NAME(CrossCarrierSchedulingConfigLAA_UL_r14) crossCarrierSchedulingConfigLAA_UL_r14;
};

SIDL_UNION_ENUM(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14)) {
	ASN_ENUM_VAL(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14), release),
	ASN_ENUM_VAL(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14)) {
	SIDL_UNION_CASE(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14)_setup)
		struct ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14, setup) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(LBT_Config_r14)) {
	ASN_ENUM_VAL(ASN_NAME(LBT_Config_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(LBT_Config_r14), maxEnergyDetectionThreshold_r14),
	ASN_ENUM_VAL(ASN_NAME(LBT_Config_r14), energyDetectionThresholdOffset_r14)
};
SIDL_UNION_BEGIN(ASN_NAME(LBT_Config_r14)) {
	SIDL_UNION_CASE(ASN_NAME(LBT_Config_r14)_maxEnergyDetectionThreshold_r14)
		int8_t maxEnergyDetectionThreshold_r14; // OF (-85..-52)
	SIDL_UNION_CASE(ASN_NAME(LBT_Config_r14)_energyDetectionThresholdOffset_r14)
		int8_t energyDetectionThresholdOffset_r14; // OF (-13..20)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format0B_r14)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format0B_r14)), sf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format0B_r14)), sf4)
} ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format0B_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format4B_r14)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format4B_r14)), sf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format4B_r14)), sf4)
} ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format4B_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, skipMonitoringDCI_Format0A_r14)), true)
} ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, skipMonitoringDCI_Format0A_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, skipMonitoringDCI_Format4A_r14)), true)
} ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, skipMonitoringDCI_Format4A_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)), n33),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)), n66),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)), n100)
} ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13));

struct ASN_NAME(PDCCH_CandidateReductions_r13, setup) {
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL1_r13;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL2_r13;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL3_r13;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL4_r13;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL5_r13;
};

SIDL_UNION_ENUM(ASN_NAME(PDCCH_CandidateReductions_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PDCCH_CandidateReductions_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCCH_CandidateReductions_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PDCCH_CandidateReductions_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCCH_CandidateReductions_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PDCCH_CandidateReductions_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PDCCH_CandidateReductions_r13)_setup)
		struct ASN_NAME(PDCCH_CandidateReductions_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)), n150)
} ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14));

struct ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14, setup) {
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL1_r14;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r13)) pdcch_candidateReductionAL2_r14;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)) pdcch_candidateReductionAL3_r14;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)) pdcch_candidateReductionAL4_r14;
	ASN_ENUM(ASN_NAME(PDCCH_CandidateReductionValue_r14)) pdcch_candidateReductionAL5_r14;
};

SIDL_UNION_ENUM(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14)) {
	ASN_ENUM_VAL(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14), release),
	ASN_ENUM_VAL(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14)) {
	SIDL_UNION_CASE(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14)_setup)
		struct ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PDCCH_ConfigLAA_r14) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format0B_r14)), maxNumberOfSchedSubframes_Format0B_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, maxNumberOfSchedSubframes_Format4B_r14)), maxNumberOfSchedSubframes_Format4B_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, skipMonitoringDCI_Format0A_r14)), skipMonitoringDCI_Format0A_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCCH_ConfigLAA_r14, skipMonitoringDCI_Format4A_r14)), skipMonitoringDCI_Format4A_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PDCCH_ConfigLAA_r14), ASN_NAME(PDCCH_CandidateReductions_r13), pdcch_CandidateReductions_Format0A_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PDCCH_ConfigLAA_r14), ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14), pdcch_CandidateReductions_Format4A_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PDCCH_ConfigLAA_r14), ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14), pdcch_CandidateReductions_Format0B_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PDCCH_ConfigLAA_r14), ASN_NAME(PDCCH_CandidateReductionsLAA_UL_r14), pdcch_CandidateReductions_Format4B_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_v1430, absenceOfAnyOtherTechnology_r14)), true)
} ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_v1430, absenceOfAnyOtherTechnology_r14));

struct ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430, setup) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430, setup), uint8_t, srs_SubframeIndication_r14); // OF (1..4)
};

SIDL_UNION_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430)) {
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430), release),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430)) {
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430)_setup)
		struct ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(LAA_SCellConfiguration_v1430) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(LAA_SCellConfiguration_v1430, crossCarrierSchedulingConfig_UL_r14), crossCarrierSchedulingConfig_UL_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(LAA_SCellConfiguration_v1430), ASN_NAME(LBT_Config_r14), lbt_Config_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(LAA_SCellConfiguration_v1430), ASN_NAME(PDCCH_ConfigLAA_r14), pdcch_ConfigLAA_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(LAA_SCellConfiguration_v1430, absenceOfAnyOtherTechnology_r14)), absenceOfAnyOtherTechnology_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(LAA_SCellConfiguration_v1430), ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_v1430), soundingRS_UL_ConfigDedicatedAperiodic_v1430);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), infinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps512_v1020),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps1024_v1020),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps2048_v1020),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), spare1)
} ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)), spare1)
} ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration));

struct ASN_NAME(LogicalChannelConfig, ul_SpecificParameters) {
	uint8_t priority; // OF (1..16)
	ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)) prioritisedBitRate;
	ASN_ENUM(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters, bucketSizeDuration)) bucketSizeDuration;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters), uint8_t, logicalChannelGroup); // OF (0..3)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Mask_r9)), setup)
} ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Mask_r9));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s0dot4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s0dot8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s1dot6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), s30)
} ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14));

struct ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15, setup) {
	bool shortTTI_r15;
	bool subframeTTI_r15;
};

SIDL_UNION_ENUM(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15)) {
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15), release),
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15)) {
	SIDL_UNION_CASE(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15)_setup)
		struct ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15, setup)), spucch),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15, setup)), pucch)
} ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15, setup));

SIDL_UNION_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15)) {
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15), release),
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15)) {
	SIDL_UNION_CASE(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15)_setup)
		ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15, setup)) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15)) {
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15), release),
	ASN_ENUM_VAL(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15)) {
	SIDL_UNION_CASE(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15)_setup)
		uint8_t setup; // OF (1..4)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateMultiplier_r16)), x40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateMultiplier_r16)), x70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateMultiplier_r16)), x100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateMultiplier_r16)), x200)
} ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateMultiplier_r16));

struct ASN_NAME(LogicalChannelConfig) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(LogicalChannelConfig, ul_SpecificParameters), ul_SpecificParameters);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Mask_r9)), logicalChannelSR_Mask_r9);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(LogicalChannelConfig), bool, logicalChannelSR_Prohibit_r12);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(LogicalChannelConfig), bool, laa_UL_Allowed_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateQueryProhibitTimer_r14)), bitRateQueryProhibitTimer_r14);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(LogicalChannelConfig, allowedTTI_Lengths_r15), allowedTTI_Lengths_r15);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(LogicalChannelConfig, logicalChannelSR_Restriction_r15), logicalChannelSR_Restriction_r15);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(LogicalChannelConfig, channelAccessPriority_r15), channelAccessPriority_r15);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(LogicalChannelConfig), B32, lch_CellRestriction_r15); // SIZE (32)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(LogicalChannelConfig, bitRateMultiplier_r16)), bitRateMultiplier_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf1200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), psf1600)
} ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf112),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), psf320)
} ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf33),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf112),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), psf320)
} ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13));

struct ASN_NAME(DRX_Config_r13) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, onDurationTimer_v1310)), onDurationTimer_v1310);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_RetransmissionTimer_v1310)), drx_RetransmissionTimer_v1310);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(DRX_Config_r13, drx_ULRetransmissionTimer_r13)), drx_ULRetransmissionTimer_r13);
};

SIDL_UNION_ENUM(ASN_NAME(MAC_MainConfig, drx_Config_r13)) {
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, drx_Config_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, drx_Config_r13), release),
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, drx_Config_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(MAC_MainConfig, drx_Config_r13)) {
	SIDL_UNION_CASE(ASN_NAME(MAC_MainConfig, drx_Config_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(MAC_MainConfig, drx_Config_r13)_setup)
		struct ASN_NAME(DRX_Config_r13) setup;
} SIDL_UNION_END;

typedef bool ASN_NAME(MAC_MainConfig, e_HARQ_Pattern_r12);

SIDL_UNION_ENUM(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup)) {
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup), sf5120),
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup), sf10240)
};
SIDL_UNION_BEGIN(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup)) {
	SIDL_UNION_CASE(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup)_sf5120)
		uint8_t sf5120; // OF (0..1)
	SIDL_UNION_CASE(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup)_sf10240)
		uint8_t sf10240; // OF (0..3)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13)) {
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13), release),
	ASN_ENUM_VAL(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13)) {
	SIDL_UNION_CASE(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13)_setup)
		struct ASN_NAME(MAC_MainConfig, eDRX_Config_CycleStartOffset_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10)), spare)
} ASN_ENUM(ASN_NAME(MAC_MainConfig, mac_MainConfig_v1020, sCellDeactivationTimer_r10));

typedef bool ASN_NAME(MAC_MainConfig, ul_SCH_Config, ttiBundling);

typedef uint8_t ASN_NAME(MBMS_SessionInfo_r9, logicalChannelIdentity_r9); // OF (0..28)

SIDL_UNION_ENUM(ASN_NAME(TMGI_r9, plmn_Id_r9)) {
	ASN_ENUM_VAL(ASN_NAME(TMGI_r9, plmn_Id_r9), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(TMGI_r9, plmn_Id_r9), plmn_Index_r9),
	ASN_ENUM_VAL(ASN_NAME(TMGI_r9, plmn_Id_r9), explicitValue_r9)
};
SIDL_UNION_BEGIN(ASN_NAME(TMGI_r9, plmn_Id_r9)) {
	SIDL_UNION_CASE(ASN_NAME(TMGI_r9, plmn_Id_r9)_plmn_Index_r9)
		uint8_t plmn_Index_r9; // OF (1..6)
	SIDL_UNION_CASE(ASN_NAME(TMGI_r9, plmn_Id_r9)_explicitValue_r9)
		struct ASN_NAME(PLMN_Identity) explicitValue_r9;
} SIDL_UNION_END;

struct ASN_NAME(TMGI_r9) {
	struct ASN_NAME(TMGI_r9, plmn_Id_r9) plmn_Id_r9;
	O3 serviceId_r9; // SIZE (3)
};

struct ASN_NAME(MBMSSessionInfo_r13) {
	struct ASN_NAME(TMGI_r9) tmgi_r13;
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(MBMSSessionInfo_r13), O1, sessionId_r13); // SIZE (1)
};

typedef uint8_t ASN_NAME(MasterInformationBlock, schedulingInfoSIB1_BR_r13); // OF (0..31)

SIDL_UNION_ENUM(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12)) {
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12), ms40_r12),
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12), ms80_r12),
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12), ms160_r12)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12)) {
	SIDL_UNION_CASE(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12)_ms40_r12)
		uint8_t ms40_r12; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12)_ms80_r12)
		uint8_t ms80_r12; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MeasDS_Config_r12, setup, dmtc_PeriodOffset_r12)_ms160_r12)
		uint8_t ms160_r12; // OF (0..159)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12)) {
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12), durationFDD_r12),
	ASN_ENUM_VAL(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12), durationTDD_r12)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12)) {
	SIDL_UNION_CASE(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12)_durationFDD_r12)
		uint8_t durationFDD_r12; // OF (1..5)
	SIDL_UNION_CASE(ASN_NAME(MeasDS_Config_r12, setup, ds_OccasionDuration_r12)_durationTDD_r12)
		uint8_t durationTDD_r12; // OF (2..5)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(MeasGapConfig, setup, gapOffset)) {
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp0),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp1),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp2_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp3_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_ncsg0_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_ncsg1_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_ncsg2_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_ncsg3_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_nonUniform1_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_nonUniform2_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_nonUniform3_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp_nonUniform4_r14),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp4_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp5_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp6_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp7_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp8_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp9_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp10_r15),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig, setup, gapOffset), gp11_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasGapConfig, setup, gapOffset)) {
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp0)
		uint8_t gp0; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp1)
		uint8_t gp1; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp2_r14)
		uint8_t gp2_r14; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp3_r14)
		uint8_t gp3_r14; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_ncsg0_r14)
		uint8_t gp_ncsg0_r14; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_ncsg1_r14)
		uint8_t gp_ncsg1_r14; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_ncsg2_r14)
		uint8_t gp_ncsg2_r14; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_ncsg3_r14)
		uint8_t gp_ncsg3_r14; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_nonUniform1_r14)
		uint16_t gp_nonUniform1_r14; // OF (0..1279)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_nonUniform2_r14)
		uint16_t gp_nonUniform2_r14; // OF (0..2559)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_nonUniform3_r14)
		uint16_t gp_nonUniform3_r14; // OF (0..5119)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp_nonUniform4_r14)
		uint16_t gp_nonUniform4_r14; // OF (0..10239)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp4_r15)
		uint8_t gp4_r15; // OF (0..19)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp5_r15)
		uint8_t gp5_r15; // OF (0..159)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp6_r15)
		uint8_t gp6_r15; // OF (0..19)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp7_r15)
		uint8_t gp7_r15; // OF (0..39)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp8_r15)
		uint8_t gp8_r15; // OF (0..79)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp9_r15)
		uint8_t gp9_r15; // OF (0..159)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp10_r15)
		uint8_t gp10_r15; // OF (0..19)
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig, setup, gapOffset)_gp11_r15)
		uint8_t gp11_r15; // OF (0..159)
} SIDL_UNION_END;

struct ASN_NAME(MeasGapConfig, setup) {
	struct ASN_NAME(MeasGapConfig, setup, gapOffset) gapOffset;
};

SIDL_UNION_ENUM(ASN_NAME(MeasGapConfig)) {
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig), release),
	ASN_ENUM_VAL(ASN_NAME(MeasGapConfig), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasGapConfig)) {
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(MeasGapConfig)_setup)
		struct ASN_NAME(MeasGapConfig, setup) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(MeasSubframePatternPCell_r10)) {
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePatternPCell_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePatternPCell_r10), release),
	ASN_ENUM_VAL(ASN_NAME(MeasSubframePatternPCell_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(MeasSubframePatternPCell_r10)) {
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePatternPCell_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(MeasSubframePatternPCell_r10)_setup)
		struct ASN_NAME(MeasSubframePattern_r10) setup;
} SIDL_UNION_END;

typedef B8 ASN_NAME(MMEC); // SIZE (8)

struct ASN_NAME(S_TMSI) {
	ASN_NAME(MMEC) mmec;
	B32 m_TMSI; // SIZE (32)
};

typedef uint8_t ASN_NAME(IMSI_Digit); // OF (0..9)

typedef SIDL_DYNAMIC(ASN_NAME(IMSI_Digit), ASN_NAME(IMSI)); // SIZE (6..21)

typedef B48 ASN_NAME(NG_5G_S_TMSI_r15); // SIZE (48)

typedef B40 ASN_NAME(I_RNTI_r15); // SIZE (40)

SIDL_UNION_ENUM(ASN_NAME(PagingUE_Identity)) {
	ASN_ENUM_VAL(ASN_NAME(PagingUE_Identity), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PagingUE_Identity), s_TMSI),
	ASN_ENUM_VAL(ASN_NAME(PagingUE_Identity), imsi),
	ASN_ENUM_VAL(ASN_NAME(PagingUE_Identity), ng_5G_S_TMSI_r15),
	ASN_ENUM_VAL(ASN_NAME(PagingUE_Identity), fullI_RNTI_r15)
};
SIDL_UNION_BEGIN(ASN_NAME(PagingUE_Identity)) {
	SIDL_UNION_CASE(ASN_NAME(PagingUE_Identity)_s_TMSI)
		struct ASN_NAME(S_TMSI) s_TMSI;
	SIDL_UNION_CASE(ASN_NAME(PagingUE_Identity)_imsi)
		ASN_NAME(IMSI) imsi;
	SIDL_UNION_CASE(ASN_NAME(PagingUE_Identity)_ng_5G_S_TMSI_r15)
		ASN_NAME(NG_5G_S_TMSI_r15) ng_5G_S_TMSI_r15;
	SIDL_UNION_CASE(ASN_NAME(PagingUE_Identity)_fullI_RNTI_r15)
		ASN_NAME(I_RNTI_r15) fullI_RNTI_r15;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PagingRecord, cn_Domain)), ps),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PagingRecord, cn_Domain)), cs)
} ASN_ENUM(ASN_NAME(PagingRecord, cn_Domain));

struct ASN_NAME(PagingRecord) {
	struct ASN_NAME(PagingUE_Identity) ue_Identity;
	ASN_ENUM(ASN_NAME(PagingRecord, cn_Domain)) cn_Domain;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PagingRecord), ASN_NAME(PagingRecordList)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging, systemInfoModification)), true)
} ASN_ENUM(ASN_NAME(Paging, systemInfoModification));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging, etws_Indication)), true)
} ASN_ENUM(ASN_NAME(Paging, etws_Indication));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging_v920_IEs, cmas_Indication_r9)), true)
} ASN_ENUM(ASN_NAME(Paging_v920_IEs, cmas_Indication_r9));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging_v1130_IEs, eab_ParamModification_r11)), true)
} ASN_ENUM(ASN_NAME(Paging_v1130_IEs, eab_ParamModification_r11));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging_v1310_IEs, redistributionIndication_r13)), true)
} ASN_ENUM(ASN_NAME(Paging_v1310_IEs, redistributionIndication_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging_v1310_IEs, systemInfoModification_eDRX_r13)), true)
} ASN_ENUM(ASN_NAME(Paging_v1310_IEs, systemInfoModification_eDRX_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging_v1530_IEs, accessType)), non3GPP)
} ASN_ENUM(ASN_NAME(Paging_v1530_IEs, accessType));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PagingRecord_v1610, accessType_r16)), non3GPP)
} ASN_ENUM(ASN_NAME(PagingRecord_v1610, accessType_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PagingRecord_v1610, mt_EDT_r16)), true)
} ASN_ENUM(ASN_NAME(PagingRecord_v1610, mt_EDT_r16));

struct ASN_NAME(PagingRecord_v1610) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PagingRecord_v1610, accessType_r16)), accessType_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PagingRecord_v1610, mt_EDT_r16)), mt_EDT_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(PagingRecord_v1610), ASN_NAME(PagingRecordList_v1610)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(Paging_v1610_IEs, uac_ParamModification_r16)), true)
} ASN_ENUM(ASN_NAME(Paging_v1610_IEs, uac_ParamModification_r16));

struct ASN_NAME(Paging_v1610_IEs, nonCriticalExtension) {
};

struct ASN_NAME(Paging_v1610_IEs) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(Paging_v1610_IEs), ASN_NAME(PagingRecordList_v1610), pagingRecordList_v1610);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging_v1610_IEs, uac_ParamModification_r16)), uac_ParamModification_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(Paging_v1610_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NAME(Paging_v1530_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging_v1530_IEs, accessType)), accessType);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(Paging_v1530_IEs), ASN_NAME(Paging_v1610_IEs), nonCriticalExtension);
};

struct ASN_NAME(Paging_v1310_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging_v1310_IEs, redistributionIndication_r13)), redistributionIndication_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging_v1310_IEs, systemInfoModification_eDRX_r13)), systemInfoModification_eDRX_r13);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(Paging_v1310_IEs), ASN_NAME(Paging_v1530_IEs), nonCriticalExtension);
};

struct ASN_NAME(Paging_v1130_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging_v1130_IEs, eab_ParamModification_r11)), eab_ParamModification_r11);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(Paging_v1130_IEs), ASN_NAME(Paging_v1310_IEs), nonCriticalExtension);
};

struct ASN_NAME(Paging_v920_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging_v920_IEs, cmas_Indication_r9)), cmas_Indication_r9);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(Paging_v920_IEs), ASN_NAME(Paging_v1130_IEs), nonCriticalExtension);
};

struct ASN_NAME(Paging_v890_IEs) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(Paging_v890_IEs), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(Paging_v890_IEs), ASN_NAME(Paging_v920_IEs), nonCriticalExtension);
};

struct ASN_NAME(Paging) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(Paging), ASN_NAME(PagingRecordList), pagingRecordList);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging, systemInfoModification)), systemInfoModification);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(Paging, etws_Indication)), etws_Indication);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(Paging), ASN_NAME(Paging_v890_IEs), nonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NAME(PCCH_MessageType, c1)) {
	ASN_ENUM_VAL(ASN_NAME(PCCH_MessageType, c1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PCCH_MessageType, c1), paging)
};
SIDL_UNION_BEGIN(ASN_NAME(PCCH_MessageType, c1)) {
	SIDL_UNION_CASE(ASN_NAME(PCCH_MessageType, c1)_paging)
		struct ASN_NAME(Paging) paging;
} SIDL_UNION_END;

struct ASN_NAME(PCCH_MessageType, messageClassExtension) {
};

SIDL_UNION_ENUM(ASN_NAME(PCCH_MessageType)) {
	ASN_ENUM_VAL(ASN_NAME(PCCH_MessageType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PCCH_MessageType), c1),
	ASN_ENUM_VAL(ASN_NAME(PCCH_MessageType), messageClassExtension)
};
SIDL_UNION_BEGIN(ASN_NAME(PCCH_MessageType)) {
	SIDL_UNION_CASE(ASN_NAME(PCCH_MessageType)_c1)
		struct ASN_NAME(PCCH_MessageType, c1) c1;
	SIDL_UNION_CASE(ASN_NAME(PCCH_MessageType)_messageClassExtension)
		struct ASN_NAME(PCCH_MessageType, messageClassExtension) messageClassExtension;
} SIDL_UNION_END;

struct ASN_NAME(PCCH_Message) {
	struct ASN_NAME(PCCH_MessageType) message;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), ms1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), infinity)
} ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer));

struct ASN_NAME(PDCP_Config, rlc_AM) {
	bool statusReportRequired;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, rlc_UM, pdcp_SN_Size)), len7bits),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, rlc_UM, pdcp_SN_Size)), len12bits)
} ASN_ENUM(ASN_NAME(PDCP_Config, rlc_UM, pdcp_SN_Size));

struct ASN_NAME(PDCP_Config, rlc_UM) {
	ASN_ENUM(ASN_NAME(PDCP_Config, rlc_UM, pdcp_SN_Size)) pdcp_SN_Size;
};

struct ASN_NAME(PDCP_Config, headerCompression, rohc, profiles) {
	bool profile0x0001;
	bool profile0x0002;
	bool profile0x0003;
	bool profile0x0004;
	bool profile0x0006;
	bool profile0x0101;
	bool profile0x0102;
	bool profile0x0103;
	bool profile0x0104;
};

struct ASN_NAME(PDCP_Config, headerCompression, rohc) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PDCP_Config, headerCompression, rohc), uint16_t, maxCID); // OF (1..16383)
	struct ASN_NAME(PDCP_Config, headerCompression, rohc, profiles) profiles;
};

SIDL_UNION_ENUM(ASN_NAME(PDCP_Config, headerCompression)) {
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, headerCompression), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, headerCompression), notUsed),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, headerCompression), rohc)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCP_Config, headerCompression)) {
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, headerCompression)_notUsed)
		Null notUsed;
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, headerCompression)_rohc)
		struct ASN_NAME(PDCP_Config, headerCompression, rohc) rohc;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, rn_IntegrityProtection_r10)), enabled)
} ASN_ENUM(ASN_NAME(PDCP_Config, rn_IntegrityProtection_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_SN_Size_v1130)), len15bits)
} ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_SN_Size_v1130));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms220),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms260),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), ms750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), spare1)
} ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b1600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b3200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b6400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b12800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b25600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b51200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b102400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b204800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b409600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), b819200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)), spare1)
} ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup));

SIDL_UNION_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13)_setup)
		ASN_ENUM(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13, setup)) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_SN_Size_v1310)), len18bits)
} ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_SN_Size_v1310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_TypeForPolling_r13)), type1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_TypeForPolling_r13)), type2)
} ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_TypeForPolling_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms2000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms10000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms20000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), ms50000)
} ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms2000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms10000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms20000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), ms50000)
} ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms2500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), ms25000)
} ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13));

struct ASN_NAME(PDCP_Config, statusFeedback_r13, setup) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_TypeForPolling_r13)), statusPDU_TypeForPolling_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type1_r13)), statusPDU_Periodicity_Type1_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Type2_r13)), statusPDU_Periodicity_Type2_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13, setup, statusPDU_Periodicity_Offset_r13)), statusPDU_Periodicity_Offset_r13);
};

SIDL_UNION_ENUM(ASN_NAME(PDCP_Config, statusFeedback_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, statusFeedback_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, statusFeedback_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, statusFeedback_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCP_Config, statusFeedback_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, statusFeedback_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, statusFeedback_r13)_setup)
		struct ASN_NAME(PDCP_Config, statusFeedback_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b1600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b3200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b6400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b12800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b25600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b51200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b102400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b204800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b409600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), b819200)
} ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14));

struct ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup) {
	bool ul_LWA_DRB_ViaWLAN_r14;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup, ul_LWA_DataSplitThreshold_r14)), ul_LWA_DataSplitThreshold_r14);
};

SIDL_UNION_ENUM(ASN_NAME(PDCP_Config, ul_LWA_Config_r14)) {
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, ul_LWA_Config_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, ul_LWA_Config_r14), release),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, ul_LWA_Config_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCP_Config, ul_LWA_Config_r14)) {
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, ul_LWA_Config_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, ul_LWA_Config_r14)_setup)
		struct ASN_NAME(PDCP_Config, ul_LWA_Config_r14, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14, rohc_r14, profiles_r14) {
	bool profile0x0006_r14;
};

struct ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14, rohc_r14) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14, rohc_r14), uint16_t, maxCID_r14); // OF (1..16383)
	struct ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14, rohc_r14, profiles_r14) profiles_r14;
};

SIDL_UNION_ENUM(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14)) {
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14), notUsed_r14),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14), rohc_r14)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14)) {
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14)_notUsed_r14)
		Null notUsed_r14;
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14)_rohc_r14)
		struct ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14, rohc_r14) rohc_r14;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, bufferSize_r15)), kbyte2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, bufferSize_r15)), kbyte4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, bufferSize_r15)), kbyte8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, bufferSize_r15)), spare1)
} ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, bufferSize_r15));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, dictionary_r15)), sip_SDP),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, dictionary_r15)), operator)
} ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, dictionary_r15));

struct ASN_NAME(PDCP_Config, uplinkDataCompression_r15) {
	ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, bufferSize_r15)) bufferSize_r15;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, uplinkDataCompression_r15, dictionary_r15)), dictionary_r15);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15, setup, pdcp_Duplication_r15)), configured),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15, setup, pdcp_Duplication_r15)), activated)
} ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15, setup, pdcp_Duplication_r15));

struct ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15, setup) {
	ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15, setup, pdcp_Duplication_r15)) pdcp_Duplication_r15;
};

SIDL_UNION_ENUM(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15)) {
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15), release),
	ASN_ENUM_VAL(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15)) {
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15)_setup)
		struct ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Common_r16, ehc_CID_Length_r16)), bits7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Common_r16, ehc_CID_Length_r16)), bits15)
} ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Common_r16, ehc_CID_Length_r16));

struct ASN_NAME(EthernetHeaderCompression_r16, ehc_Common_r16) {
	ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Common_r16, ehc_CID_Length_r16)) ehc_CID_Length_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Downlink_r16, drb_ContinueEHC_DL_r16)), true)
} ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Downlink_r16, drb_ContinueEHC_DL_r16));

struct ASN_NAME(EthernetHeaderCompression_r16, ehc_Downlink_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Downlink_r16, drb_ContinueEHC_DL_r16)), drb_ContinueEHC_DL_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Uplink_r16, drb_ContinueEHC_UL_r16)), true)
} ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Uplink_r16, drb_ContinueEHC_UL_r16));

struct ASN_NAME(EthernetHeaderCompression_r16, ehc_Uplink_r16) {
	uint16_t maxCID_EHC_UL_r16; // OF (1..32767)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(EthernetHeaderCompression_r16, ehc_Uplink_r16, drb_ContinueEHC_UL_r16)), drb_ContinueEHC_UL_r16);
};

struct ASN_NAME(EthernetHeaderCompression_r16) {
	struct ASN_NAME(EthernetHeaderCompression_r16, ehc_Common_r16) ehc_Common_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EthernetHeaderCompression_r16, ehc_Downlink_r16), ehc_Downlink_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(EthernetHeaderCompression_r16, ehc_Uplink_r16), ehc_Uplink_r16);
};

SIDL_UNION_ENUM(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16)) {
	ASN_ENUM_VAL(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16), release),
	ASN_ENUM_VAL(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16)) {
	SIDL_UNION_CASE(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16)_setup)
		struct ASN_NAME(EthernetHeaderCompression_r16) setup;
} SIDL_UNION_END;

struct ASN_NAME(PDCP_Config) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, discardTimer)), discardTimer);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, rlc_AM), rlc_AM);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, rlc_UM), rlc_UM);
	struct ASN_NAME(PDCP_Config, headerCompression) headerCompression;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, rn_IntegrityProtection_r10)), rn_IntegrityProtection_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_SN_Size_v1130)), pdcp_SN_Size_v1130);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PDCP_Config), bool, ul_DataSplitDRB_ViaSCG_r12);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, t_Reordering_r12)), t_Reordering_r12);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, ul_DataSplitThreshold_r13), ul_DataSplitThreshold_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PDCP_Config, pdcp_SN_Size_v1310)), pdcp_SN_Size_v1310);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, statusFeedback_r13), statusFeedback_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, ul_LWA_Config_r14), ul_LWA_Config_r14);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, uplinkOnlyHeaderCompression_r14), uplinkOnlyHeaderCompression_r14);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, uplinkDataCompression_r15), uplinkDataCompression_r15);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PDCP_Config, pdcp_DuplicationConfig_r15), pdcp_DuplicationConfig_r15);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PDCP_Config), ASN_NAME(SetupRelease_PDCP_Config, ethernetHeaderCompression_r16), ethernetHeaderCompression_r16);
};

struct ASN_NAME(PRACH_Config) {
	uint16_t rootSequenceIndex; // OF (0..837)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PRACH_Config), ASN_NAME(PRACH_ConfigInfo), prach_ConfigInfo);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v1dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v2dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)), v10)
} ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), v20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)), spare)
} ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13));

SIDL_UNION_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13), fdd_r13),
	ASN_ENUM_VAL(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13), tdd_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13)_fdd_r13)
		ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, fdd_r13)) fdd_r13;
	SIDL_UNION_CASE(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13)_tdd_r13)
		ASN_ENUM(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13, tdd_r13)) tdd_r13;
} SIDL_UNION_END;

struct ASN_NAME(PRACH_Config_v1310) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PRACH_Config_v1310), ASN_NAME(RSRP_ThresholdsPrachInfoList_r13), rsrp_ThresholdsPrachInfoList_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PRACH_Config_v1310, mpdcch_startSF_CSS_RA_r13), mpdcch_startSF_CSS_RA_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PRACH_Config_v1310), uint8_t, prach_HoppingOffset_r13); // OF (0..94)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PRACH_Config_v1310), ASN_NAME(PRACH_ParametersListCE_r13), prach_ParametersListCE_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PRACH_Config_v1310), uint8_t, initial_CE_level_r13); // OF (0..3)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup, repetitionFactor)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup, repetitionFactor)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup, repetitionFactor)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup, repetitionFactor)), spare1)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup, repetitionFactor));

struct ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup) {
	ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup, repetitionFactor)) repetitionFactor;
	uint16_t n1PUCCH_AN_Rep; // OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, tdd_AckNackFeedbackMode)), bundling),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, tdd_AckNackFeedbackMode)), multiplexing)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, tdd_AckNackFeedbackMode));

struct ASN_NAME(PUCCH_ConfigDedicated) {
	struct ASN_NAME(PUCCH_ConfigDedicated, ackNackRepetition) ackNackRepetition;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated, tdd_AckNackFeedbackMode)), tdd_AckNackFeedbackMode);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup, repetitionFactor_r13)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup, repetitionFactor_r13)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup, repetitionFactor_r13)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup, repetitionFactor_r13)), spare1)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup, repetitionFactor_r13));

struct ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup) {
	ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup, repetitionFactor_r13)) repetitionFactor_r13;
	uint16_t n1PUCCH_AN_Rep_r13; // OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, tdd_AckNackFeedbackMode_r13)), bundling),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, tdd_AckNackFeedbackMode_r13)), multiplexing)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, tdd_AckNackFeedbackMode_r13));

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13, setup) {
	SIDL_DYNAMIC_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13, setup), uint16_t, n3PUCCH_AN_ListP1_r13); // SIZE (1..4) OF (0..549)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13), uint16_t, n3PUCCH_AN_List_r13); // SIZE (1..4) OF (0..549)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13, twoAntennaPortActivatedPUCCH_Format3_r13), twoAntennaPortActivatedPUCCH_Format3_r13);
};

typedef SIDL_DYNAMIC(uint16_t, ASN_NAME(N1PUCCH_AN_CS_r10)); // SIZE (1..4) OF (0..2047)

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13, setup) {
	SIDL_DYNAMIC(ASN_NAME(N1PUCCH_AN_CS_r10), n1PUCCH_AN_CS_List_r13); // SIZE (1..2)
	SIDL_DYNAMIC_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13, setup), uint16_t, dummy1); // SIZE (2..4) OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13, n1PUCCH_AN_CS_r13), n1PUCCH_AN_CS_r13);
};

struct ASN_NAME(Format4_resource_r13) {
	uint8_t startingPRB_format4_r13; // OF (0..109)
	uint8_t numberOfPRB_format4_r13; // OF (0..7)
};

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format4_r13) {
	SIDL_STATIC_ARRAY_OF_STRUCT(ASN_NAME(Format4_resource_r13), format4_resourceConfiguration_r13, 4); // SIZE (4)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format4_r13), ASN_NAME(Format4_resource_r13), format4_MultiCSI_resourceConfiguration_r13); // SIZE (1..2)
};

struct ASN_NAME(Format5_resource_r13) {
	uint8_t startingPRB_format5_r13; // OF (0..109)
	uint8_t cdm_index_format5_r13; // OF (0..1)
};

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format5_r13) {
	SIDL_STATIC_ARRAY_OF_STRUCT(ASN_NAME(Format5_resource_r13), format5_resourceConfiguration_r13, 4); // SIZE (4)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format5_r13), ASN_NAME(Format5_resource_r13), format5_MultiCSI_resourceConfiguration_r13);
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13), format3_r13),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13), channelSelection_r13),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13), format4_r13),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13), format5_r13)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13)_format3_r13)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format3_r13) format3_r13;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13)_channelSelection_r13)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, channelSelection_r13) channelSelection_r13;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13)_format4_r13)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format4_r13) format4_r13;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13)_format5_r13)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13, format5_r13) format5_r13;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, twoAntennaPortActivatedPUCCH_Format1a1b_r13)), true)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, twoAntennaPortActivatedPUCCH_Format1a1b_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, simultaneousPUCCH_PUSCH_r13)), true)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, simultaneousPUCCH_PUSCH_r13));

struct ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13, setup) {
	uint16_t nPUCCH_Identity_r13; // OF (0..503)
	uint16_t n1PUCCH_AN_r13; // OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13, setup) {
	uint16_t nkaPUCCH_AN_r13; // OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, codebooksizeDetermination_r13)), dai),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, codebooksizeDetermination_r13)), cc)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, codebooksizeDetermination_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format1_r13)), r1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format1_r13)), r2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format1_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format1_r13)), r8)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format1_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format2_r13)), r1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format2_r13)), r2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format2_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format2_r13)), r8)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format2_r13));

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA) {
	ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format1_r13)) pucch_NumRepetitionCE_format1_r13;
	ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA, pucch_NumRepetitionCE_format2_r13)) pucch_NumRepetitionCE_format2_r13;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format1_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format1_r13)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format1_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format1_r13)), r32)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format1_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format2_r13)), r4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format2_r13)), r8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format2_r13)), r16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format2_r13)), r32)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format2_r13));

struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB) {
	ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format1_r13)) pucch_NumRepetitionCE_format1_r13;
	ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB, pucch_NumRepetitionCE_format2_r13)) pucch_NumRepetitionCE_format2_r13;
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup), modeA),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup), modeB)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup)_modeA)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeA) modeA;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup)_modeB)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup, modeB) modeB;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_r13) {
	struct ASN_NAME(PUCCH_ConfigDedicated_r13, ackNackRepetition_r13) ackNackRepetition_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, tdd_AckNackFeedbackMode_r13)), tdd_AckNackFeedbackMode_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_Format_r13), pucch_Format_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, twoAntennaPortActivatedPUCCH_Format1a1b_r13)), twoAntennaPortActivatedPUCCH_Format1a1b_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, simultaneousPUCCH_PUSCH_r13)), simultaneousPUCCH_PUSCH_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13), uint16_t, n1PUCCH_AN_RepP1_r13); // OF (0..2047)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_r13, nPUCCH_Param_r13), nPUCCH_Param_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_r13, nkaPUCCH_Param_r13), nkaPUCCH_Param_r13);
	bool spatialBundlingPUCCH_r13;
	bool spatialBundlingPUSCH_r13;
	bool harq_TimingTDD_r13;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_r13, codebooksizeDetermination_r13)), codebooksizeDetermination_r13);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_r13), uint8_t, maximumPayloadCoderate_r13); // OF (0..7)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_r13, pucch_NumRepetitionCE_r13), pucch_NumRepetitionCE_r13);
};

struct ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13, setup) {
	SIDL_DYNAMIC_WITH_PFX(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13, setup), uint16_t, n3PUCCH_AN_ListP1_r13); // SIZE (1..4) OF (0..549)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13)_setup)
		struct ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_Format3_Conf_r13) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NAME(PUCCH_Format3_Conf_r13), uint16_t, n3PUCCH_AN_List_r13); // SIZE (1..4) OF (0..549)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_Format3_Conf_r13, twoAntennaPortActivatedPUCCH_Format3_r13), twoAntennaPortActivatedPUCCH_Format3_r13);
};

struct ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10, setup) {
	SIDL_DYNAMIC(ASN_NAME(N1PUCCH_AN_CS_r10), n1PUCCH_AN_CS_List_r10); // SIZE (1..2)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10, n1PUCCH_AN_CS_r10), n1PUCCH_AN_CS_r10);
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10), format3_r10),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10), channelSelection_r10)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10)_format3_r10)
		struct ASN_NAME(PUCCH_Format3_Conf_r13) format3_r10;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10)_channelSelection_r10)
		struct ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10, channelSelection_r10) channelSelection_r10;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, twoAntennaPortActivatedPUCCH_Format1a1b_r10)), true)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, twoAntennaPortActivatedPUCCH_Format1a1b_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, simultaneousPUCCH_PUSCH_r10)), true)
} ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, simultaneousPUCCH_PUSCH_r10));

struct ASN_NAME(PUCCH_ConfigDedicated_v1020) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_v1020, pucch_Format_r10), pucch_Format_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, twoAntennaPortActivatedPUCCH_Format1a1b_r10)), twoAntennaPortActivatedPUCCH_Format1a1b_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1020, simultaneousPUCCH_PUSCH_r10)), simultaneousPUCCH_PUSCH_r10);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_v1020), uint16_t, n1PUCCH_AN_RepP1_r10); // OF (0..2047)
};

struct ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130, setup) {
	SIDL_DYNAMIC_WITH_PFX(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130, setup), uint16_t, n1PUCCH_AN_CS_ListP1_r11); // SIZE (2..4) OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11, setup) {
	uint16_t nPUCCH_Identity_r11; // OF (0..503)
	uint16_t n1PUCCH_AN_r11; // OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_v1130) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_v1130, n1PUCCH_AN_CS_v1130), n1PUCCH_AN_CS_v1130);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUCCH_ConfigDedicated_v1130, nPUCCH_Param_r11), nPUCCH_Param_r11);
};

struct ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12, setup) {
	uint16_t nkaPUCCH_AN_r12; // OF (0..2047)
};

SIDL_UNION_ENUM(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12)) {
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12), release),
	ASN_ENUM_VAL(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12)) {
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12)_setup)
		struct ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUCCH_ConfigDedicated_v1250) {
	struct ASN_NAME(PUCCH_ConfigDedicated_v1250, nkaPUCCH_Param_r12) nkaPUCCH_Param_r12;
};

struct ASN_NAME(PUSCH_ConfigDedicated) {
	uint8_t betaOffset_ACK_Index; // OF (0..15)
	uint8_t betaOffset_RI_Index; // OF (0..15)
	uint8_t betaOffset_CQI_Index; // OF (0..15)
};

struct ASN_NAME(PUSCH_ConfigDedicated_r13, betaOffsetMC_r13) {
	uint8_t betaOffset_ACK_Index_MC_r13; // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUSCH_ConfigDedicated_r13, betaOffsetMC_r13), uint8_t, betaOffset2_ACK_Index_MC_r13); // OF (0..15)
	uint8_t betaOffset_RI_Index_MC_r13; // OF (0..15)
	uint8_t betaOffset_CQI_Index_MC_r13; // OF (0..15)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, groupHoppingDisabled_r13)), true)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, groupHoppingDisabled_r13));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, dmrs_WithOCC_Activated_r13)), true)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, dmrs_WithOCC_Activated_r13));

struct ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11, setup) {
	uint16_t nPUSCH_Identity_r13; // OF (0..509)
	uint16_t nDMRS_CSH_Identity_r13; // OF (0..509)
};

SIDL_UNION_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11)) {
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11), release),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11)) {
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11)_setup)
		struct ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH, setup, betaOffsetMC_r12) {
	uint8_t betaOffset_ACK_Index_MC_SubframeSet2_r13; // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH, setup, betaOffsetMC_r12), uint8_t, betaOffset2_ACK_Index_MC_SubframeSet2_r13); // OF (0..15)
	uint8_t betaOffset_RI_Index_MC_SubframeSet2_r13; // OF (0..15)
	uint8_t betaOffset_CQI_Index_MC_SubframeSet2_r13; // OF (0..15)
};

struct ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH, setup) {
	uint8_t betaOffset_ACK_Index_SubframeSet2_r13; // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH, setup), uint8_t, betaOffset2_ACK_Index_SubframeSet2_r13); // OF (0..15)
	uint8_t betaOffset_RI_Index_SubframeSet2_r13; // OF (0..15)
	uint8_t betaOffset_CQI_Index_SubframeSet2_r13; // OF (0..15)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH, setup, betaOffsetMC_r12), betaOffsetMC_r12);
};

SIDL_UNION_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH)) {
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH), release),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH)) {
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH)_setup)
		struct ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_HoppingConfig_r13)), on)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_HoppingConfig_r13));

struct ASN_NAME(PUSCH_ConfigDedicated_r13) {
	uint8_t betaOffset_ACK_Index_r13; // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(PUSCH_ConfigDedicated_r13), uint8_t, betaOffset2_ACK_Index_r13); // OF (0..15)
	uint8_t betaOffset_RI_Index_r13; // OF (0..15)
	uint8_t betaOffset_CQI_Index_r13; // OF (0..15)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUSCH_ConfigDedicated_r13, betaOffsetMC_r13), betaOffsetMC_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, groupHoppingDisabled_r13)), groupHoppingDisabled_r13);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, dmrs_WithOCC_Activated_r13)), dmrs_WithOCC_Activated_r13);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_DMRS_r11), pusch_DMRS_r11);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUSCH_ConfigDedicated_r13, uciOnPUSCH), uciOnPUSCH);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_r13, pusch_HoppingConfig_r13)), pusch_HoppingConfig_r13);
};

struct ASN_NAME(PUSCH_ConfigDedicated_v1020, betaOffsetMC_r10) {
	uint8_t betaOffset_ACK_Index_MC_r10; // OF (0..15)
	uint8_t betaOffset_RI_Index_MC_r10; // OF (0..15)
	uint8_t betaOffset_CQI_Index_MC_r10; // OF (0..15)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1020, groupHoppingDisabled_r10)), true)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1020, groupHoppingDisabled_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1020, dmrs_WithOCC_Activated_r10)), true)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1020, dmrs_WithOCC_Activated_r10));

struct ASN_NAME(PUSCH_ConfigDedicated_v1020) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUSCH_ConfigDedicated_v1020, betaOffsetMC_r10), betaOffsetMC_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1020, groupHoppingDisabled_r10)), groupHoppingDisabled_r10);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1020, dmrs_WithOCC_Activated_r10)), dmrs_WithOCC_Activated_r10);
};

struct ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11, setup) {
	uint16_t nPUSCH_Identity_r11; // OF (0..509)
	uint16_t nDMRS_CSH_Identity_r11; // OF (0..509)
};

SIDL_UNION_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11)) {
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11), release),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11)) {
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11)_setup)
		struct ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUSCH_ConfigDedicated_v1130) {
	struct ASN_NAME(PUSCH_ConfigDedicated_v1130, pusch_DMRS_r11) pusch_DMRS_r11;
};

struct ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH, setup, betaOffsetMC_r12) {
	uint8_t betaOffset_ACK_Index_MC_SubframeSet2_r12; // OF (0..15)
	uint8_t betaOffset_RI_Index_MC_SubframeSet2_r12; // OF (0..15)
	uint8_t betaOffset_CQI_Index_MC_SubframeSet2_r12; // OF (0..15)
};

struct ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH, setup) {
	uint8_t betaOffset_ACK_Index_SubframeSet2_r12; // OF (0..15)
	uint8_t betaOffset_RI_Index_SubframeSet2_r12; // OF (0..15)
	uint8_t betaOffset_CQI_Index_SubframeSet2_r12; // OF (0..15)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH, setup, betaOffsetMC_r12), betaOffsetMC_r12);
};

SIDL_UNION_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH)) {
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH), release),
	ASN_ENUM_VAL(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH)) {
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH)_setup)
		struct ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUSCH_ConfigDedicated_v1250) {
	struct ASN_NAME(PUSCH_ConfigDedicated_v1250, uciOnPUSCH) uciOnPUSCH;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1430, ce_PUSCH_NB_MaxTBS_r14)), on)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1430, ce_PUSCH_NB_MaxTBS_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1430, ce_PUSCH_MaxBandwidth_r14)), bw5)
} ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1430, ce_PUSCH_MaxBandwidth_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), sym1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), sym2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), sym3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), sym4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), sym5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), sym6)
} ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, dmrs_LessUpPTS_Config_r14)), true)
} ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, dmrs_LessUpPTS_Config_r14));

struct ASN_NAME(TDD_PUSCH_UpPTS_r14, setup) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, symPUSCH_UpPTS_r14)), symPUSCH_UpPTS_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14, setup, dmrs_LessUpPTS_Config_r14)), dmrs_LessUpPTS_Config_r14);
};

SIDL_UNION_ENUM(ASN_NAME(TDD_PUSCH_UpPTS_r14)) {
	ASN_ENUM_VAL(ASN_NAME(TDD_PUSCH_UpPTS_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(TDD_PUSCH_UpPTS_r14), release),
	ASN_ENUM_VAL(ASN_NAME(TDD_PUSCH_UpPTS_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(TDD_PUSCH_UpPTS_r14)) {
	SIDL_UNION_CASE(ASN_NAME(TDD_PUSCH_UpPTS_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(TDD_PUSCH_UpPTS_r14)_setup)
		struct ASN_NAME(TDD_PUSCH_UpPTS_r14, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(Enable256QAM_r14, setup, tpc_SubframeSet_Configured_r14) {
	bool subframeSet1_DCI_Format0_r14;
	bool subframeSet1_DCI_Format4_r14;
	bool subframeSet2_DCI_Format0_r14;
	bool subframeSet2_DCI_Format4_r14;
};

struct ASN_NAME(Enable256QAM_r14, setup, tpc_SubframeSet_NotConfigured_r14) {
	bool dci_Format0_r14;
	bool dci_Format4_r14;
};

SIDL_UNION_ENUM(ASN_NAME(Enable256QAM_r14, setup)) {
	ASN_ENUM_VAL(ASN_NAME(Enable256QAM_r14, setup), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(Enable256QAM_r14, setup), tpc_SubframeSet_Configured_r14),
	ASN_ENUM_VAL(ASN_NAME(Enable256QAM_r14, setup), tpc_SubframeSet_NotConfigured_r14)
};
SIDL_UNION_BEGIN(ASN_NAME(Enable256QAM_r14, setup)) {
	SIDL_UNION_CASE(ASN_NAME(Enable256QAM_r14, setup)_tpc_SubframeSet_Configured_r14)
		struct ASN_NAME(Enable256QAM_r14, setup, tpc_SubframeSet_Configured_r14) tpc_SubframeSet_Configured_r14;
	SIDL_UNION_CASE(ASN_NAME(Enable256QAM_r14, setup)_tpc_SubframeSet_NotConfigured_r14)
		struct ASN_NAME(Enable256QAM_r14, setup, tpc_SubframeSet_NotConfigured_r14) tpc_SubframeSet_NotConfigured_r14;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NAME(Enable256QAM_r14)) {
	ASN_ENUM_VAL(ASN_NAME(Enable256QAM_r14), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(Enable256QAM_r14), release),
	ASN_ENUM_VAL(ASN_NAME(Enable256QAM_r14), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(Enable256QAM_r14)) {
	SIDL_UNION_CASE(ASN_NAME(Enable256QAM_r14)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(Enable256QAM_r14)_setup)
		struct ASN_NAME(Enable256QAM_r14, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(PUSCH_ConfigDedicated_v1430) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1430, ce_PUSCH_NB_MaxTBS_r14)), ce_PUSCH_NB_MaxTBS_r14);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NAME(PUSCH_ConfigDedicated_v1430, ce_PUSCH_MaxBandwidth_r14)), ce_PUSCH_MaxBandwidth_r14);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PUSCH_ConfigDedicated_v1430), ASN_NAME(TDD_PUSCH_UpPTS_r14), tdd_PUSCH_UpPTS_r14);
	bool ul_DMRS_IFDMA_r14;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(PUSCH_ConfigDedicated_v1430), ASN_NAME(Enable256QAM_r14), enable256QAM_r14);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13, setup)), ce_ModeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13, setup)), ce_ModeB)
} ASN_ENUM(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13, setup));

SIDL_UNION_ENUM(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13)) {
	ASN_ENUM_VAL(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13), release),
	ASN_ENUM_VAL(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13)) {
	SIDL_UNION_CASE(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13)_setup)
		ASN_ENUM(ASN_NAME(PhysicalConfigDedicated, ce_Mode_r13, setup)) setup;
} SIDL_UNION_END;

struct ASN_NAME(RACH_ConfigDedicated) {
	uint8_t ra_PreambleIndex; // OF (0..63)
	uint8_t ra_PRACH_MaskIndex; // OF (0..15)
};

struct ASN_NAME(RLC_Config_v1250) {
	bool ul_extended_RLC_LI_Field_r12;
	bool dl_extended_RLC_LI_Field_r12;
};

typedef uint8_t ASN_NAME(SCellIndex_r10); // OF (1..7)

typedef uint8_t ASN_NAME(STAG_Id_r11); // OF (1..3)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)), spare1)
} ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax));

struct ASN_NAME(SchedulingRequestConfig, setup) {
	uint16_t sr_PUCCH_ResourceIndex; // OF (0..2047)
	uint8_t sr_ConfigIndex; // OF (0..157)
	ASN_ENUM(ASN_NAME(SchedulingRequestConfig, setup, dsr_TransMax)) dsr_TransMax;
};

SIDL_UNION_ENUM(ASN_NAME(SchedulingRequestConfig)) {
	ASN_ENUM_VAL(ASN_NAME(SchedulingRequestConfig), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SchedulingRequestConfig), release),
	ASN_ENUM_VAL(ASN_NAME(SchedulingRequestConfig), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SchedulingRequestConfig)) {
	SIDL_UNION_CASE(ASN_NAME(SchedulingRequestConfig)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SchedulingRequestConfig)_setup)
		struct ASN_NAME(SchedulingRequestConfig, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(SchedulingRequestConfig_v1020) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(SchedulingRequestConfig_v1020), uint16_t, sr_PUCCH_ResourceIndexP1_r10); // OF (0..2047)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_Bandwidth)), bw0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_Bandwidth)), bw1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_Bandwidth)), bw2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_Bandwidth)), bw3)
} ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_Bandwidth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_HoppingBandwidth)), hbw0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_HoppingBandwidth)), hbw1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_HoppingBandwidth)), hbw2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_HoppingBandwidth)), hbw3)
} ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_HoppingBandwidth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)), cs7)
} ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift));

struct ASN_NAME(SoundingRS_UL_ConfigDedicated, setup) {
	ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_Bandwidth)) srs_Bandwidth;
	ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, srs_HoppingBandwidth)) srs_HoppingBandwidth;
	uint8_t freqDomainPosition; // OF (0..23)
	bool duration;
	uint16_t srs_ConfigIndex; // OF (0..1023)
	uint8_t transmissionComb; // OF (0..1)
	ASN_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated, setup, cyclicShift)) cyclicShift;
};

SIDL_UNION_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicated)) {
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicated), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicated), release),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicated), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SoundingRS_UL_ConfigDedicated)) {
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicated)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicated)_setup)
		struct ASN_NAME(SoundingRS_UL_ConfigDedicated, setup) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_AntennaPort)), an1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_AntennaPort)), an2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_AntennaPort)), an4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_AntennaPort)), spare1)
} ASN_ENUM(ASN_NAME(SRS_AntennaPort));

struct ASN_NAME(SoundingRS_UL_ConfigDedicated_v1020) {
	ASN_ENUM(ASN_NAME(SRS_AntennaPort)) srs_AntennaPort_r10;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, srs_BandwidthAp_r10)), bw0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, srs_BandwidthAp_r10)), bw1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, srs_BandwidthAp_r10)), bw2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, srs_BandwidthAp_r10)), bw3)
} ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, srs_BandwidthAp_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)), cs7)
} ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10));

struct ASN_NAME(SRS_ConfigAp_r10) {
	ASN_ENUM(ASN_NAME(SRS_AntennaPort)) srs_AntennaPortAp_r10;
	ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, srs_BandwidthAp_r10)) srs_BandwidthAp_r10;
	uint8_t freqDomainPositionAp_r10; // OF (0..23)
	uint8_t transmissionCombAp_r10; // OF (0..1)
	ASN_ENUM(ASN_NAME(SRS_ConfigAp_r10, cyclicShiftAp_r10)) cyclicShiftAp_r10;
};

struct ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10, setup) {
	struct ASN_NAME(SRS_ConfigAp_r10) srs_ConfigApDCI_Format0_r10;
	struct ASN_NAME(SRS_ConfigAp_r10) srs_ConfigApDCI_Format1a2b2c_r10;
};

SIDL_UNION_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10)) {
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10), release),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10)) {
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10)_setup)
		struct ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup) {
	uint8_t srs_ConfigIndexAp_r10; // OF (0..31)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup), ASN_NAME(SRS_ConfigAp_r10), srs_ConfigApDCI_Format4_r10); // SIZE (1..3)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup, srs_ActivateAp_r10), srs_ActivateAp_r10);
};

SIDL_UNION_ENUM(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10)) {
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10), release),
	ASN_ENUM_VAL(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10)) {
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10)_setup)
		struct ASN_NAME(SoundingRS_UL_ConfigDedicatedAperiodic_r10, setup) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1020_IEs, ue_Category_v1020); // OF (6..8)

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1170_IEs, ue_Category_v1170); // OF (9..10)

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v11a0_IEs, ue_Category_v11a0); // OF (11..12)

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1250_IEs, ue_CategoryDL_r12); // OF (0..14)

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1260_IEs, ue_CategoryDL_v1260); // OF (15..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_EUTRA_Capability_v1310_IEs, ue_CategoryDL_v1310)), n17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_EUTRA_Capability_v1310_IEs, ue_CategoryDL_v1310)), m1)
} ASN_ENUM(ASN_NAME(UE_EUTRA_Capability_v1310_IEs, ue_CategoryDL_v1310));

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1330_IEs, ue_CategoryDL_v1330); // OF (18..19)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UE_EUTRA_Capability_v1350_IEs, ue_CategoryDL_v1350)), oneBis)
} ASN_ENUM(ASN_NAME(UE_EUTRA_Capability_v1350_IEs, ue_CategoryDL_v1350));

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1450_IEs, ue_CategoryDL_v1450); // OF (20)

typedef uint8_t ASN_NAME(UE_EUTRA_Capability_v1460_IEs, ue_CategoryDL_v1460); // OF (21)

typedef uint8_t ASN_NAME(UE_EUTRA_Capability, ue_Category); // OF (1..5)

typedef uint8_t ASN_NAME(UE_RadioPagingInfo_r12, ue_Category_v1250); // OF (0)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms55),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms95),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms105),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms115),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms125),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms135),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms145),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms155),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms165),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms170),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms175),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms185),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms190),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms195),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms205),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms210),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms215),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms220),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms225),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms230),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms235),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms245),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms350),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms450),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms800_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms1000_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms2000_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), ms4000_v1310),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(T_PollRetransmit)), spare1)
} ASN_ENUM(ASN_NAME(T_PollRetransmit));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), p256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollPDU)), pInfinity)
} ASN_ENUM(ASN_NAME(PollPDU));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB125),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB375),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB1250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB2000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kB3000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), kBinfinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(PollByte)), spare1)
} ASN_ENUM(ASN_NAME(PollByte));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)), t32)
} ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold));

struct ASN_NAME(UL_AM_RLC) {
	ASN_ENUM(ASN_NAME(T_PollRetransmit)) t_PollRetransmit;
	ASN_ENUM(ASN_NAME(PollPDU)) pollPDU;
	ASN_ENUM(ASN_NAME(PollByte)) pollByte;
	ASN_ENUM(ASN_NAME(UL_AM_RLC, maxRetxThreshold)) maxRetxThreshold;
};

struct ASN_NAME(UL_UM_RLC) {
	ASN_ENUM(ASN_NAME(SN_FieldLength)) sn_FieldLength;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)), deltaF6)
} ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format1bCS_r12)), deltaF1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format1bCS_r12)), deltaF2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format1bCS_r12)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format1bCS_r12)), spare1)
} ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format1bCS_r12));

struct ASN_NAME(UplinkPowerControlCommonPSCell_r12) {
	ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format3_r12)) deltaF_PUCCH_Format3_r12;
	ASN_ENUM(ASN_NAME(UplinkPowerControlCommonPSCell_r12, deltaF_PUCCH_Format1bCS_r12)) deltaF_PUCCH_Format1bCS_r12;
	int8_t p0_NominalPUCCH_r12; // OF (-127..-96)
	struct ASN_NAME(DeltaFList_PUCCH) deltaFList_PUCCH_r12;
};

struct ASN_NAME(UplinkPowerControlCommonSCell_v1130) {
	int8_t deltaPreambleMsg3_r11; // OF (-1..6)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlDedicated, deltaMCS_Enabled)), en0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlDedicated, deltaMCS_Enabled)), en1)
} ASN_ENUM(ASN_NAME(UplinkPowerControlDedicated, deltaMCS_Enabled));

struct ASN_NAME(UplinkPowerControlDedicated) {
	int8_t p0_UE_PUSCH; // OF (-8..7)
	ASN_ENUM(ASN_NAME(UplinkPowerControlDedicated, deltaMCS_Enabled)) deltaMCS_Enabled;
	bool accumulationEnabled;
	int8_t p0_UE_PUCCH; // OF (-8..7)
	uint8_t pSRS_Offset; // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(UplinkPowerControlDedicated), ASN_ENUM(ASN_NAME(FilterCoefficient)), filterCoefficient);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1_r10)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1_r10)), dB_2)
} ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1a1b_r10)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1a1b_r10)), dB_2)
} ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1a1b_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format22a2b_r10)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format22a2b_r10)), dB_2)
} ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format22a2b_r10));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format3_r10)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format3_r10)), dB_2)
} ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format3_r10));

struct ASN_NAME(DeltaTxD_OffsetListPUCCH_r10) {
	ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1_r10)) deltaTxD_OffsetPUCCH_Format1_r10;
	ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format1a1b_r10)) deltaTxD_OffsetPUCCH_Format1a1b_r10;
	ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format22a2b_r10)) deltaTxD_OffsetPUCCH_Format22a2b_r10;
	ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_r10, deltaTxD_OffsetPUCCH_Format3_r10)) deltaTxD_OffsetPUCCH_Format3_r10;
};

struct ASN_NAME(UplinkPowerControlDedicated_v1020) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(UplinkPowerControlDedicated_v1020), ASN_NAME(DeltaTxD_OffsetListPUCCH_r10), deltaTxD_OffsetListPUCCH_r10);
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(UplinkPowerControlDedicated_v1020), uint8_t, pSRS_OffsetAp_r10); // OF (0..15)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_v1130, deltaTxD_OffsetPUCCH_Format1bCS_r11)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_v1130, deltaTxD_OffsetPUCCH_Format1bCS_r11)), dB_1)
} ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_v1130, deltaTxD_OffsetPUCCH_Format1bCS_r11));

struct ASN_NAME(DeltaTxD_OffsetListPUCCH_v1130) {
	ASN_ENUM(ASN_NAME(DeltaTxD_OffsetListPUCCH_v1130, deltaTxD_OffsetPUCCH_Format1bCS_r11)) deltaTxD_OffsetPUCCH_Format1bCS_r11;
};

struct ASN_NAME(UplinkPowerControlDedicated_v1130) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(UplinkPowerControlDedicated_v1130), uint8_t, pSRS_Offset_v1130); // OF (16..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NAME(UplinkPowerControlDedicated_v1130), uint8_t, pSRS_OffsetAp_v1130); // OF (16..31)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NAME(UplinkPowerControlDedicated_v1130), ASN_NAME(DeltaTxD_OffsetListPUCCH_v1130), deltaTxD_OffsetListPUCCH_v1130);
};

struct ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter, setup) {
	B10 tpc_SubframeSet_r12; // SIZE (10)
	int8_t p0_NominalPUSCH_SubframeSet2_r12; // OF (-126..24)
	ASN_ENUM(ASN_NAME(Alpha_r12)) alpha_SubframeSet2_r12;
	int8_t p0_UE_PUSCH_SubframeSet2_r12; // OF (-8..7)
};

SIDL_UNION_ENUM(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter)) {
	ASN_ENUM_VAL(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter), release),
	ASN_ENUM_VAL(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter), setup)
};
SIDL_UNION_BEGIN(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter)) {
	SIDL_UNION_CASE(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter)_setup)
		struct ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter, setup) setup;
} SIDL_UNION_END;

struct ASN_NAME(UplinkPowerControlDedicated_v1250) {
	struct ASN_NAME(UplinkPowerControlDedicated_v1250, set2PowerControlParameter) set2PowerControlParameter;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlDedicatedSCell_r10, pathlossReferenceLinking_r10)), pCell),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NAME(UplinkPowerControlDedicatedSCell_r10, pathlossReferenceLinking_r10)), sCell)
} ASN_ENUM(ASN_NAME(UplinkPowerControlDedicatedSCell_r10, pathlossReferenceLinking_r10));
